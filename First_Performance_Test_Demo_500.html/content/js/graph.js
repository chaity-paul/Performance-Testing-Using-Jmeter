/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 271.0, "minX": 0.0, "maxY": 13384.0, "series": [{"data": [[0.0, 1592.0], [0.1, 1592.0], [0.2, 1626.0], [0.3, 1626.0], [0.4, 1640.0], [0.5, 1640.0], [0.6, 1640.0], [0.7, 1649.0], [0.8, 1677.0], [0.9, 1677.0], [1.0, 1799.0], [1.1, 1799.0], [1.2, 1805.0], [1.3, 1805.0], [1.4, 1823.0], [1.5, 1823.0], [1.6, 1839.0], [1.7, 1839.0], [1.8, 1860.0], [1.9, 1860.0], [2.0, 1861.0], [2.1, 1861.0], [2.2, 1895.0], [2.3, 1895.0], [2.4, 1914.0], [2.5, 1914.0], [2.6, 1984.0], [2.7, 1984.0], [2.8, 1984.0], [2.9, 2013.0], [3.0, 2013.0], [3.1, 2038.0], [3.2, 2038.0], [3.3, 2063.0], [3.4, 2063.0], [3.5, 2065.0], [3.6, 2065.0], [3.7, 2069.0], [3.8, 2069.0], [3.9, 2072.0], [4.0, 2072.0], [4.1, 2086.0], [4.2, 2086.0], [4.3, 2088.0], [4.4, 2088.0], [4.5, 2100.0], [4.6, 2100.0], [4.7, 2106.0], [4.8, 2106.0], [4.9, 2139.0], [5.0, 2139.0], [5.1, 2171.0], [5.2, 2171.0], [5.3, 2178.0], [5.4, 2178.0], [5.5, 2184.0], [5.6, 2184.0], [5.7, 2191.0], [5.8, 2191.0], [5.9, 2198.0], [6.0, 2198.0], [6.1, 2226.0], [6.2, 2226.0], [6.3, 2227.0], [6.4, 2227.0], [6.5, 2230.0], [6.6, 2230.0], [6.7, 2234.0], [6.8, 2234.0], [6.9, 2241.0], [7.0, 2241.0], [7.1, 2241.0], [7.2, 2241.0], [7.3, 2249.0], [7.4, 2249.0], [7.5, 2252.0], [7.6, 2252.0], [7.7, 2256.0], [7.8, 2256.0], [7.9, 2258.0], [8.0, 2258.0], [8.1, 2260.0], [8.2, 2260.0], [8.3, 2263.0], [8.4, 2263.0], [8.5, 2266.0], [8.6, 2266.0], [8.7, 2277.0], [8.8, 2279.0], [8.9, 2279.0], [9.0, 2313.0], [9.1, 2313.0], [9.2, 2323.0], [9.3, 2323.0], [9.4, 2328.0], [9.5, 2328.0], [9.6, 2332.0], [9.7, 2332.0], [9.8, 2343.0], [9.9, 2343.0], [10.0, 2355.0], [10.1, 2355.0], [10.2, 2371.0], [10.3, 2371.0], [10.4, 2373.0], [10.5, 2373.0], [10.6, 2394.0], [10.7, 2394.0], [10.8, 2415.0], [10.9, 2415.0], [11.0, 2429.0], [11.1, 2429.0], [11.2, 2483.0], [11.3, 2483.0], [11.4, 2483.0], [11.5, 2483.0], [11.6, 2495.0], [11.7, 2495.0], [11.8, 2527.0], [11.9, 2527.0], [12.0, 2534.0], [12.1, 2534.0], [12.2, 2541.0], [12.3, 2541.0], [12.4, 2545.0], [12.5, 2545.0], [12.6, 2553.0], [12.7, 2553.0], [12.8, 2557.0], [12.9, 2557.0], [13.0, 2558.0], [13.1, 2558.0], [13.2, 2561.0], [13.3, 2561.0], [13.4, 2579.0], [13.5, 2579.0], [13.6, 2605.0], [13.7, 2605.0], [13.8, 2609.0], [13.9, 2609.0], [14.0, 2616.0], [14.1, 2616.0], [14.2, 2621.0], [14.3, 2621.0], [14.4, 2628.0], [14.5, 2628.0], [14.6, 2640.0], [14.7, 2640.0], [14.8, 2653.0], [14.9, 2653.0], [15.0, 2656.0], [15.1, 2656.0], [15.2, 2662.0], [15.3, 2662.0], [15.4, 2671.0], [15.5, 2671.0], [15.6, 2675.0], [15.7, 2675.0], [15.8, 2677.0], [15.9, 2677.0], [16.0, 2681.0], [16.1, 2681.0], [16.2, 2683.0], [16.3, 2683.0], [16.4, 2689.0], [16.5, 2689.0], [16.6, 2692.0], [16.7, 2692.0], [16.8, 2693.0], [16.9, 2693.0], [17.0, 2702.0], [17.1, 2702.0], [17.2, 2739.0], [17.3, 2739.0], [17.4, 2742.0], [17.5, 2742.0], [17.6, 2752.0], [17.7, 2752.0], [17.8, 2761.0], [17.9, 2761.0], [18.0, 2767.0], [18.1, 2767.0], [18.2, 2770.0], [18.3, 2770.0], [18.4, 2820.0], [18.5, 2820.0], [18.6, 2824.0], [18.7, 2824.0], [18.8, 2838.0], [18.9, 2838.0], [19.0, 2850.0], [19.1, 2850.0], [19.2, 2854.0], [19.3, 2854.0], [19.4, 2854.0], [19.5, 2854.0], [19.6, 2861.0], [19.7, 2861.0], [19.8, 2863.0], [19.9, 2863.0], [20.0, 2869.0], [20.1, 2869.0], [20.2, 2875.0], [20.3, 2875.0], [20.4, 2877.0], [20.5, 2877.0], [20.6, 2881.0], [20.7, 2881.0], [20.8, 2882.0], [20.9, 2882.0], [21.0, 2894.0], [21.1, 2894.0], [21.2, 2895.0], [21.3, 2895.0], [21.4, 2896.0], [21.5, 2896.0], [21.6, 2902.0], [21.7, 2902.0], [21.8, 2902.0], [21.9, 2902.0], [22.0, 2903.0], [22.1, 2903.0], [22.2, 2906.0], [22.3, 2906.0], [22.4, 2909.0], [22.5, 2909.0], [22.6, 2912.0], [22.7, 2912.0], [22.8, 2917.0], [22.9, 2917.0], [23.0, 2923.0], [23.1, 2923.0], [23.2, 2928.0], [23.3, 2928.0], [23.4, 2930.0], [23.5, 2930.0], [23.6, 2944.0], [23.7, 2944.0], [23.8, 2945.0], [23.9, 2945.0], [24.0, 2955.0], [24.1, 2955.0], [24.2, 2964.0], [24.3, 2964.0], [24.4, 2964.0], [24.5, 2964.0], [24.6, 2967.0], [24.7, 2967.0], [24.8, 2973.0], [24.9, 2973.0], [25.0, 2973.0], [25.1, 2973.0], [25.2, 2977.0], [25.3, 2977.0], [25.4, 2977.0], [25.5, 2977.0], [25.6, 2978.0], [25.7, 2978.0], [25.8, 2979.0], [25.9, 2979.0], [26.0, 2991.0], [26.1, 2991.0], [26.2, 2992.0], [26.3, 2992.0], [26.4, 2993.0], [26.5, 2993.0], [26.6, 3003.0], [26.7, 3003.0], [26.8, 3013.0], [26.9, 3013.0], [27.0, 3020.0], [27.1, 3020.0], [27.2, 3022.0], [27.3, 3022.0], [27.4, 3024.0], [27.5, 3024.0], [27.6, 3025.0], [27.7, 3025.0], [27.8, 3041.0], [27.9, 3041.0], [28.0, 3044.0], [28.1, 3044.0], [28.2, 3045.0], [28.3, 3045.0], [28.4, 3049.0], [28.5, 3049.0], [28.6, 3049.0], [28.7, 3049.0], [28.8, 3056.0], [28.9, 3056.0], [29.0, 3087.0], [29.1, 3087.0], [29.2, 3088.0], [29.3, 3088.0], [29.4, 3089.0], [29.5, 3089.0], [29.6, 3090.0], [29.7, 3090.0], [29.8, 3099.0], [29.9, 3099.0], [30.0, 3102.0], [30.1, 3102.0], [30.2, 3104.0], [30.3, 3104.0], [30.4, 3105.0], [30.5, 3105.0], [30.6, 3108.0], [30.7, 3108.0], [30.8, 3108.0], [30.9, 3108.0], [31.0, 3111.0], [31.1, 3111.0], [31.2, 3125.0], [31.3, 3125.0], [31.4, 3126.0], [31.5, 3126.0], [31.6, 3134.0], [31.7, 3134.0], [31.8, 3150.0], [31.9, 3150.0], [32.0, 3159.0], [32.1, 3159.0], [32.2, 3159.0], [32.3, 3159.0], [32.4, 3162.0], [32.5, 3162.0], [32.6, 3163.0], [32.7, 3163.0], [32.8, 3164.0], [32.9, 3164.0], [33.0, 3169.0], [33.1, 3169.0], [33.2, 3171.0], [33.3, 3171.0], [33.4, 3176.0], [33.5, 3176.0], [33.6, 3176.0], [33.7, 3176.0], [33.8, 3176.0], [33.9, 3176.0], [34.0, 3180.0], [34.1, 3180.0], [34.2, 3185.0], [34.3, 3185.0], [34.4, 3186.0], [34.5, 3186.0], [34.6, 3189.0], [34.7, 3189.0], [34.8, 3191.0], [34.9, 3191.0], [35.0, 3195.0], [35.1, 3195.0], [35.2, 3198.0], [35.3, 3198.0], [35.4, 3198.0], [35.5, 3198.0], [35.6, 3212.0], [35.7, 3212.0], [35.8, 3213.0], [35.9, 3213.0], [36.0, 3215.0], [36.1, 3215.0], [36.2, 3217.0], [36.3, 3217.0], [36.4, 3219.0], [36.5, 3219.0], [36.6, 3223.0], [36.7, 3223.0], [36.8, 3224.0], [36.9, 3224.0], [37.0, 3225.0], [37.1, 3225.0], [37.2, 3225.0], [37.3, 3225.0], [37.4, 3228.0], [37.5, 3228.0], [37.6, 3229.0], [37.7, 3229.0], [37.8, 3235.0], [37.9, 3235.0], [38.0, 3235.0], [38.1, 3235.0], [38.2, 3250.0], [38.3, 3250.0], [38.4, 3254.0], [38.5, 3254.0], [38.6, 3259.0], [38.7, 3259.0], [38.8, 3263.0], [38.9, 3263.0], [39.0, 3283.0], [39.1, 3283.0], [39.2, 3286.0], [39.3, 3286.0], [39.4, 3290.0], [39.5, 3290.0], [39.6, 3323.0], [39.7, 3323.0], [39.8, 3327.0], [39.9, 3327.0], [40.0, 3331.0], [40.1, 3331.0], [40.2, 3339.0], [40.3, 3339.0], [40.4, 3339.0], [40.5, 3340.0], [40.6, 3340.0], [40.7, 3346.0], [40.8, 3346.0], [40.9, 3388.0], [41.0, 3388.0], [41.1, 3396.0], [41.2, 3396.0], [41.3, 3402.0], [41.4, 3402.0], [41.5, 3413.0], [41.6, 3413.0], [41.7, 3414.0], [41.8, 3414.0], [41.9, 3415.0], [42.0, 3415.0], [42.1, 3416.0], [42.2, 3416.0], [42.3, 3422.0], [42.4, 3422.0], [42.5, 3434.0], [42.6, 3434.0], [42.7, 3438.0], [42.8, 3438.0], [42.9, 3445.0], [43.0, 3445.0], [43.1, 3448.0], [43.2, 3448.0], [43.3, 3449.0], [43.4, 3449.0], [43.5, 3454.0], [43.6, 3454.0], [43.7, 3459.0], [43.8, 3459.0], [43.9, 3465.0], [44.0, 3465.0], [44.1, 3466.0], [44.2, 3466.0], [44.3, 3467.0], [44.4, 3467.0], [44.5, 3472.0], [44.6, 3472.0], [44.7, 3478.0], [44.8, 3478.0], [44.9, 3478.0], [45.0, 3478.0], [45.1, 3481.0], [45.2, 3481.0], [45.3, 3487.0], [45.4, 3487.0], [45.5, 3495.0], [45.6, 3495.0], [45.7, 3497.0], [45.8, 3497.0], [45.9, 3498.0], [46.0, 3498.0], [46.1, 3504.0], [46.2, 3504.0], [46.3, 3510.0], [46.4, 3510.0], [46.5, 3512.0], [46.6, 3512.0], [46.7, 3514.0], [46.8, 3514.0], [46.9, 3514.0], [47.0, 3514.0], [47.1, 3514.0], [47.2, 3514.0], [47.3, 3522.0], [47.4, 3522.0], [47.5, 3553.0], [47.6, 3553.0], [47.7, 3555.0], [47.8, 3555.0], [47.9, 3560.0], [48.0, 3560.0], [48.1, 3560.0], [48.2, 3560.0], [48.3, 3577.0], [48.4, 3577.0], [48.5, 3593.0], [48.6, 3593.0], [48.7, 3599.0], [48.8, 3599.0], [48.9, 3604.0], [49.0, 3604.0], [49.1, 3610.0], [49.2, 3610.0], [49.3, 3612.0], [49.4, 3612.0], [49.5, 3616.0], [49.6, 3616.0], [49.7, 3630.0], [49.8, 3630.0], [49.9, 3637.0], [50.0, 3637.0], [50.1, 3644.0], [50.2, 3644.0], [50.3, 3677.0], [50.4, 3677.0], [50.5, 3704.0], [50.6, 3704.0], [50.7, 3716.0], [50.8, 3716.0], [50.9, 3727.0], [51.0, 3727.0], [51.1, 3761.0], [51.2, 3761.0], [51.3, 3786.0], [51.4, 3786.0], [51.5, 3788.0], [51.6, 3788.0], [51.7, 3821.0], [51.8, 3821.0], [51.9, 3827.0], [52.0, 3827.0], [52.1, 3845.0], [52.2, 3845.0], [52.3, 3864.0], [52.4, 3864.0], [52.5, 3883.0], [52.6, 3883.0], [52.7, 3900.0], [52.8, 3900.0], [52.9, 3914.0], [53.0, 3914.0], [53.1, 3931.0], [53.2, 3931.0], [53.3, 4005.0], [53.4, 4005.0], [53.5, 4017.0], [53.6, 4017.0], [53.7, 4018.0], [53.8, 4018.0], [53.9, 4026.0], [54.0, 4026.0], [54.1, 4030.0], [54.2, 4030.0], [54.3, 4035.0], [54.4, 4035.0], [54.5, 4058.0], [54.6, 4058.0], [54.7, 4070.0], [54.8, 4070.0], [54.9, 4076.0], [55.0, 4076.0], [55.1, 4081.0], [55.2, 4081.0], [55.3, 4090.0], [55.4, 4090.0], [55.5, 4112.0], [55.6, 4112.0], [55.7, 4118.0], [55.8, 4118.0], [55.9, 4123.0], [56.0, 4123.0], [56.1, 4123.0], [56.2, 4123.0], [56.3, 4123.0], [56.4, 4123.0], [56.5, 4127.0], [56.6, 4127.0], [56.7, 4127.0], [56.8, 4127.0], [56.9, 4137.0], [57.0, 4137.0], [57.1, 4147.0], [57.2, 4147.0], [57.3, 4150.0], [57.4, 4150.0], [57.5, 4154.0], [57.6, 4154.0], [57.7, 4158.0], [57.8, 4158.0], [57.9, 4166.0], [58.0, 4166.0], [58.1, 4181.0], [58.2, 4181.0], [58.3, 4187.0], [58.4, 4187.0], [58.5, 4189.0], [58.6, 4189.0], [58.7, 4193.0], [58.8, 4193.0], [58.9, 4210.0], [59.0, 4210.0], [59.1, 4211.0], [59.2, 4211.0], [59.3, 4212.0], [59.4, 4212.0], [59.5, 4214.0], [59.6, 4214.0], [59.7, 4223.0], [59.8, 4223.0], [59.9, 4236.0], [60.0, 4236.0], [60.1, 4248.0], [60.2, 4248.0], [60.3, 4254.0], [60.4, 4254.0], [60.5, 4259.0], [60.6, 4259.0], [60.7, 4259.0], [60.8, 4259.0], [60.9, 4262.0], [61.0, 4262.0], [61.1, 4262.0], [61.2, 4262.0], [61.3, 4262.0], [61.4, 4262.0], [61.5, 4264.0], [61.6, 4264.0], [61.7, 4267.0], [61.8, 4267.0], [61.9, 4275.0], [62.0, 4275.0], [62.1, 4276.0], [62.2, 4276.0], [62.3, 4279.0], [62.4, 4279.0], [62.5, 4284.0], [62.6, 4284.0], [62.7, 4292.0], [62.8, 4292.0], [62.9, 4305.0], [63.0, 4305.0], [63.1, 4306.0], [63.2, 4306.0], [63.3, 4307.0], [63.4, 4307.0], [63.5, 4307.0], [63.6, 4307.0], [63.7, 4309.0], [63.8, 4309.0], [63.9, 4315.0], [64.0, 4315.0], [64.1, 4318.0], [64.2, 4318.0], [64.3, 4328.0], [64.4, 4328.0], [64.5, 4330.0], [64.6, 4330.0], [64.7, 4355.0], [64.8, 4355.0], [64.9, 4355.0], [65.0, 4355.0], [65.1, 4356.0], [65.2, 4356.0], [65.3, 4362.0], [65.4, 4362.0], [65.5, 4363.0], [65.6, 4363.0], [65.7, 4365.0], [65.8, 4365.0], [65.9, 4369.0], [66.0, 4369.0], [66.1, 4372.0], [66.2, 4372.0], [66.3, 4376.0], [66.4, 4376.0], [66.5, 4388.0], [66.6, 4388.0], [66.7, 4399.0], [66.8, 4399.0], [66.9, 4401.0], [67.0, 4401.0], [67.1, 4407.0], [67.2, 4407.0], [67.3, 4415.0], [67.4, 4415.0], [67.5, 4429.0], [67.6, 4429.0], [67.7, 4431.0], [67.8, 4431.0], [67.9, 4434.0], [68.0, 4434.0], [68.1, 4436.0], [68.2, 4436.0], [68.3, 4438.0], [68.4, 4438.0], [68.5, 4441.0], [68.6, 4441.0], [68.7, 4452.0], [68.8, 4452.0], [68.9, 4455.0], [69.0, 4455.0], [69.1, 4457.0], [69.2, 4457.0], [69.3, 4460.0], [69.4, 4460.0], [69.5, 4473.0], [69.6, 4473.0], [69.7, 4474.0], [69.8, 4474.0], [69.9, 4476.0], [70.0, 4476.0], [70.1, 4482.0], [70.2, 4482.0], [70.3, 4493.0], [70.4, 4493.0], [70.5, 4500.0], [70.6, 4500.0], [70.7, 4508.0], [70.8, 4508.0], [70.9, 4513.0], [71.0, 4513.0], [71.1, 4518.0], [71.2, 4518.0], [71.3, 4524.0], [71.4, 4524.0], [71.5, 4533.0], [71.6, 4533.0], [71.7, 4534.0], [71.8, 4534.0], [71.9, 4536.0], [72.0, 4536.0], [72.1, 4537.0], [72.2, 4537.0], [72.3, 4537.0], [72.4, 4537.0], [72.5, 4538.0], [72.6, 4538.0], [72.7, 4543.0], [72.8, 4543.0], [72.9, 4544.0], [73.0, 4544.0], [73.1, 4581.0], [73.2, 4581.0], [73.3, 4583.0], [73.4, 4583.0], [73.5, 4620.0], [73.6, 4620.0], [73.7, 4631.0], [73.8, 4631.0], [73.9, 4667.0], [74.0, 4667.0], [74.1, 4673.0], [74.2, 4673.0], [74.3, 4676.0], [74.4, 4676.0], [74.5, 4698.0], [74.6, 4698.0], [74.7, 4713.0], [74.8, 4713.0], [74.9, 4718.0], [75.0, 4718.0], [75.1, 4722.0], [75.2, 4722.0], [75.3, 4722.0], [75.4, 4722.0], [75.5, 4725.0], [75.6, 4725.0], [75.7, 4726.0], [75.8, 4726.0], [75.9, 4754.0], [76.0, 4754.0], [76.1, 4756.0], [76.2, 4756.0], [76.3, 4758.0], [76.4, 4758.0], [76.5, 4773.0], [76.6, 4773.0], [76.7, 4791.0], [76.8, 4791.0], [76.9, 4797.0], [77.0, 4797.0], [77.1, 4800.0], [77.2, 4800.0], [77.3, 4823.0], [77.4, 4823.0], [77.5, 4831.0], [77.6, 4831.0], [77.7, 4843.0], [77.8, 4843.0], [77.9, 4846.0], [78.0, 4846.0], [78.1, 4876.0], [78.2, 4876.0], [78.3, 4892.0], [78.4, 4892.0], [78.5, 4904.0], [78.6, 4904.0], [78.7, 4954.0], [78.8, 4954.0], [78.9, 5012.0], [79.0, 5012.0], [79.1, 5026.0], [79.2, 5026.0], [79.3, 5225.0], [79.4, 5225.0], [79.5, 5270.0], [79.6, 5270.0], [79.7, 5448.0], [79.8, 5448.0], [79.9, 5602.0], [80.0, 5602.0], [80.1, 5656.0], [80.2, 5656.0], [80.3, 5688.0], [80.4, 5688.0], [80.5, 5707.0], [80.6, 5707.0], [80.7, 5719.0], [80.8, 5719.0], [80.9, 5744.0], [81.0, 5744.0], [81.1, 5747.0], [81.2, 5747.0], [81.3, 5782.0], [81.4, 5782.0], [81.5, 5790.0], [81.6, 5790.0], [81.7, 5809.0], [81.8, 5809.0], [81.9, 5814.0], [82.0, 5814.0], [82.1, 5844.0], [82.2, 5844.0], [82.3, 5847.0], [82.4, 5847.0], [82.5, 5851.0], [82.6, 5851.0], [82.7, 5873.0], [82.8, 5873.0], [82.9, 5906.0], [83.0, 5906.0], [83.1, 5911.0], [83.2, 5911.0], [83.3, 5912.0], [83.4, 5912.0], [83.5, 5913.0], [83.6, 5913.0], [83.7, 5939.0], [83.8, 5939.0], [83.9, 5976.0], [84.0, 5976.0], [84.1, 5989.0], [84.2, 5989.0], [84.3, 6034.0], [84.4, 6034.0], [84.5, 6054.0], [84.6, 6054.0], [84.7, 6056.0], [84.8, 6056.0], [84.9, 6068.0], [85.0, 6068.0], [85.1, 6071.0], [85.2, 6071.0], [85.3, 6098.0], [85.4, 6098.0], [85.5, 6125.0], [85.6, 6125.0], [85.7, 6129.0], [85.8, 6129.0], [85.9, 6134.0], [86.0, 6134.0], [86.1, 6139.0], [86.2, 6139.0], [86.3, 6149.0], [86.4, 6149.0], [86.5, 6176.0], [86.6, 6176.0], [86.7, 6182.0], [86.8, 6182.0], [86.9, 6188.0], [87.0, 6188.0], [87.1, 6193.0], [87.2, 6193.0], [87.3, 6195.0], [87.4, 6195.0], [87.5, 6233.0], [87.6, 6233.0], [87.7, 6235.0], [87.8, 6235.0], [87.9, 6259.0], [88.0, 6259.0], [88.1, 6261.0], [88.2, 6261.0], [88.3, 6263.0], [88.4, 6263.0], [88.5, 6274.0], [88.6, 6274.0], [88.7, 6282.0], [88.8, 6282.0], [88.9, 6285.0], [89.0, 6285.0], [89.1, 6286.0], [89.2, 6286.0], [89.3, 6291.0], [89.4, 6291.0], [89.5, 6303.0], [89.6, 6303.0], [89.7, 6303.0], [89.8, 6303.0], [89.9, 6305.0], [90.0, 6305.0], [90.1, 6310.0], [90.2, 6310.0], [90.3, 6319.0], [90.4, 6319.0], [90.5, 6326.0], [90.6, 6326.0], [90.7, 6328.0], [90.8, 6328.0], [90.9, 6330.0], [91.0, 6330.0], [91.1, 6354.0], [91.2, 6354.0], [91.3, 6354.0], [91.4, 6354.0], [91.5, 6356.0], [91.6, 6356.0], [91.7, 6372.0], [91.8, 6372.0], [91.9, 6385.0], [92.0, 6385.0], [92.1, 6390.0], [92.2, 6390.0], [92.3, 6395.0], [92.4, 6395.0], [92.5, 6397.0], [92.6, 6397.0], [92.7, 6402.0], [92.8, 6402.0], [92.9, 6408.0], [93.0, 6408.0], [93.1, 6411.0], [93.2, 6411.0], [93.3, 6420.0], [93.4, 6420.0], [93.5, 6428.0], [93.6, 6428.0], [93.7, 6435.0], [93.8, 6435.0], [93.9, 6436.0], [94.0, 6436.0], [94.1, 6449.0], [94.2, 6449.0], [94.3, 6454.0], [94.4, 6454.0], [94.5, 6460.0], [94.6, 6460.0], [94.7, 6481.0], [94.8, 6481.0], [94.9, 6572.0], [95.0, 6572.0], [95.1, 6671.0], [95.2, 6671.0], [95.3, 6741.0], [95.4, 6741.0], [95.5, 6767.0], [95.6, 6767.0], [95.7, 6773.0], [95.8, 6773.0], [95.9, 6776.0], [96.0, 6776.0], [96.1, 6781.0], [96.2, 6781.0], [96.3, 6804.0], [96.4, 6804.0], [96.5, 6829.0], [96.6, 6829.0], [96.7, 6833.0], [96.8, 6833.0], [96.9, 6853.0], [97.0, 6853.0], [97.1, 6869.0], [97.2, 6869.0], [97.3, 6880.0], [97.4, 6880.0], [97.5, 6884.0], [97.6, 6884.0], [97.7, 6916.0], [97.8, 6916.0], [97.9, 6934.0], [98.0, 6934.0], [98.1, 6937.0], [98.2, 6937.0], [98.3, 6980.0], [98.4, 6980.0], [98.5, 6980.0], [98.6, 6980.0], [98.7, 7000.0], [98.8, 7000.0], [98.9, 7076.0], [99.0, 7076.0], [99.1, 7598.0], [99.2, 7598.0], [99.3, 7643.0], [99.4, 7643.0], [99.5, 8738.0], [99.6, 8738.0], [99.7, 13328.0], [99.8, 13328.0], [99.9, 13384.0], [100.0, 13384.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[0.0, 271.0], [0.1, 271.0], [0.2, 273.0], [0.3, 273.0], [0.4, 274.0], [0.5, 274.0], [0.6, 274.0], [0.7, 275.0], [0.8, 275.0], [0.9, 275.0], [1.0, 275.0], [1.1, 275.0], [1.2, 275.0], [1.3, 275.0], [1.4, 275.0], [1.5, 276.0], [1.6, 276.0], [1.7, 276.0], [1.8, 276.0], [1.9, 276.0], [2.0, 276.0], [2.1, 276.0], [2.2, 277.0], [2.3, 277.0], [2.4, 277.0], [2.5, 277.0], [2.6, 277.0], [2.7, 277.0], [2.8, 277.0], [2.9, 277.0], [3.0, 277.0], [3.1, 277.0], [3.2, 277.0], [3.3, 277.0], [3.4, 277.0], [3.5, 277.0], [3.6, 277.0], [3.7, 277.0], [3.8, 277.0], [3.9, 278.0], [4.0, 278.0], [4.1, 278.0], [4.2, 278.0], [4.3, 278.0], [4.4, 278.0], [4.5, 278.0], [4.6, 278.0], [4.7, 278.0], [4.8, 278.0], [4.9, 278.0], [5.0, 278.0], [5.1, 278.0], [5.2, 278.0], [5.3, 278.0], [5.4, 278.0], [5.5, 278.0], [5.6, 278.0], [5.7, 279.0], [5.8, 279.0], [5.9, 279.0], [6.0, 279.0], [6.1, 279.0], [6.2, 279.0], [6.3, 279.0], [6.4, 279.0], [6.5, 279.0], [6.6, 279.0], [6.7, 279.0], [6.8, 279.0], [6.9, 279.0], [7.0, 279.0], [7.1, 279.0], [7.2, 279.0], [7.3, 279.0], [7.4, 279.0], [7.5, 279.0], [7.6, 279.0], [7.7, 279.0], [7.8, 279.0], [7.9, 279.0], [8.0, 279.0], [8.1, 279.0], [8.2, 279.0], [8.3, 279.0], [8.4, 279.0], [8.5, 279.0], [8.6, 279.0], [8.7, 279.0], [8.8, 279.0], [8.9, 279.0], [9.0, 279.0], [9.1, 279.0], [9.2, 279.0], [9.3, 280.0], [9.4, 280.0], [9.5, 280.0], [9.6, 280.0], [9.7, 280.0], [9.8, 280.0], [9.9, 280.0], [10.0, 280.0], [10.1, 280.0], [10.2, 280.0], [10.3, 280.0], [10.4, 280.0], [10.5, 280.0], [10.6, 280.0], [10.7, 280.0], [10.8, 280.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 280.0], [11.4, 280.0], [11.5, 280.0], [11.6, 280.0], [11.7, 280.0], [11.8, 280.0], [11.9, 280.0], [12.0, 280.0], [12.1, 280.0], [12.2, 280.0], [12.3, 280.0], [12.4, 280.0], [12.5, 280.0], [12.6, 280.0], [12.7, 280.0], [12.8, 280.0], [12.9, 280.0], [13.0, 280.0], [13.1, 280.0], [13.2, 280.0], [13.3, 280.0], [13.4, 280.0], [13.5, 280.0], [13.6, 280.0], [13.7, 280.0], [13.8, 280.0], [13.9, 280.0], [14.0, 281.0], [14.1, 281.0], [14.2, 281.0], [14.3, 281.0], [14.4, 281.0], [14.5, 281.0], [14.6, 281.0], [14.7, 281.0], [14.8, 281.0], [14.9, 281.0], [15.0, 281.0], [15.1, 281.0], [15.2, 281.0], [15.3, 281.0], [15.4, 281.0], [15.5, 281.0], [15.6, 281.0], [15.7, 281.0], [15.8, 281.0], [15.9, 281.0], [16.0, 281.0], [16.1, 281.0], [16.2, 281.0], [16.3, 281.0], [16.4, 281.0], [16.5, 281.0], [16.6, 281.0], [16.7, 281.0], [16.8, 281.0], [16.9, 281.0], [17.0, 281.0], [17.1, 281.0], [17.2, 281.0], [17.3, 281.0], [17.4, 281.0], [17.5, 281.0], [17.6, 281.0], [17.7, 281.0], [17.8, 281.0], [17.9, 281.0], [18.0, 281.0], [18.1, 281.0], [18.2, 281.0], [18.3, 281.0], [18.4, 281.0], [18.5, 281.0], [18.6, 281.0], [18.7, 281.0], [18.8, 281.0], [18.9, 281.0], [19.0, 281.0], [19.1, 281.0], [19.2, 282.0], [19.3, 282.0], [19.4, 282.0], [19.5, 282.0], [19.6, 282.0], [19.7, 282.0], [19.8, 282.0], [19.9, 282.0], [20.0, 282.0], [20.1, 282.0], [20.2, 282.0], [20.3, 282.0], [20.4, 282.0], [20.5, 282.0], [20.6, 282.0], [20.7, 282.0], [20.8, 282.0], [20.9, 282.0], [21.0, 282.0], [21.1, 282.0], [21.2, 282.0], [21.3, 282.0], [21.4, 282.0], [21.5, 282.0], [21.6, 282.0], [21.7, 282.0], [21.8, 282.0], [21.9, 282.0], [22.0, 282.0], [22.1, 282.0], [22.2, 282.0], [22.3, 282.0], [22.4, 282.0], [22.5, 282.0], [22.6, 282.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 282.0], [23.6, 282.0], [23.7, 282.0], [23.8, 282.0], [23.9, 282.0], [24.0, 282.0], [24.1, 282.0], [24.2, 282.0], [24.3, 282.0], [24.4, 282.0], [24.5, 282.0], [24.6, 282.0], [24.7, 282.0], [24.8, 282.0], [24.9, 282.0], [25.0, 282.0], [25.1, 282.0], [25.2, 283.0], [25.3, 283.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 283.0], [25.9, 283.0], [26.0, 283.0], [26.1, 283.0], [26.2, 283.0], [26.3, 283.0], [26.4, 283.0], [26.5, 283.0], [26.6, 283.0], [26.7, 283.0], [26.8, 283.0], [26.9, 283.0], [27.0, 283.0], [27.1, 283.0], [27.2, 283.0], [27.3, 283.0], [27.4, 283.0], [27.5, 283.0], [27.6, 283.0], [27.7, 283.0], [27.8, 283.0], [27.9, 283.0], [28.0, 283.0], [28.1, 283.0], [28.2, 283.0], [28.3, 283.0], [28.4, 283.0], [28.5, 283.0], [28.6, 283.0], [28.7, 283.0], [28.8, 283.0], [28.9, 283.0], [29.0, 283.0], [29.1, 283.0], [29.2, 283.0], [29.3, 283.0], [29.4, 283.0], [29.5, 283.0], [29.6, 283.0], [29.7, 283.0], [29.8, 283.0], [29.9, 283.0], [30.0, 283.0], [30.1, 283.0], [30.2, 283.0], [30.3, 283.0], [30.4, 283.0], [30.5, 283.0], [30.6, 284.0], [30.7, 284.0], [30.8, 284.0], [30.9, 284.0], [31.0, 284.0], [31.1, 284.0], [31.2, 284.0], [31.3, 284.0], [31.4, 284.0], [31.5, 284.0], [31.6, 284.0], [31.7, 284.0], [31.8, 284.0], [31.9, 284.0], [32.0, 284.0], [32.1, 284.0], [32.2, 284.0], [32.3, 284.0], [32.4, 284.0], [32.5, 284.0], [32.6, 284.0], [32.7, 284.0], [32.8, 284.0], [32.9, 284.0], [33.0, 284.0], [33.1, 284.0], [33.2, 284.0], [33.3, 284.0], [33.4, 284.0], [33.5, 284.0], [33.6, 284.0], [33.7, 284.0], [33.8, 284.0], [33.9, 284.0], [34.0, 284.0], [34.1, 284.0], [34.2, 284.0], [34.3, 284.0], [34.4, 284.0], [34.5, 284.0], [34.6, 284.0], [34.7, 284.0], [34.8, 284.0], [34.9, 284.0], [35.0, 284.0], [35.1, 284.0], [35.2, 284.0], [35.3, 284.0], [35.4, 284.0], [35.5, 284.0], [35.6, 284.0], [35.7, 284.0], [35.8, 284.0], [35.9, 284.0], [36.0, 284.0], [36.1, 284.0], [36.2, 284.0], [36.3, 284.0], [36.4, 284.0], [36.5, 284.0], [36.6, 285.0], [36.7, 285.0], [36.8, 285.0], [36.9, 285.0], [37.0, 285.0], [37.1, 285.0], [37.2, 285.0], [37.3, 285.0], [37.4, 285.0], [37.5, 285.0], [37.6, 285.0], [37.7, 285.0], [37.8, 285.0], [37.9, 285.0], [38.0, 285.0], [38.1, 285.0], [38.2, 285.0], [38.3, 285.0], [38.4, 285.0], [38.5, 285.0], [38.6, 285.0], [38.7, 285.0], [38.8, 285.0], [38.9, 285.0], [39.0, 285.0], [39.1, 285.0], [39.2, 285.0], [39.3, 285.0], [39.4, 285.0], [39.5, 285.0], [39.6, 285.0], [39.7, 285.0], [39.8, 285.0], [39.9, 285.0], [40.0, 285.0], [40.1, 285.0], [40.2, 285.0], [40.3, 285.0], [40.4, 285.0], [40.5, 285.0], [40.6, 285.0], [40.7, 285.0], [40.8, 285.0], [40.9, 285.0], [41.0, 285.0], [41.1, 285.0], [41.2, 285.0], [41.3, 285.0], [41.4, 285.0], [41.5, 285.0], [41.6, 285.0], [41.7, 285.0], [41.8, 285.0], [41.9, 285.0], [42.0, 285.0], [42.1, 285.0], [42.2, 285.0], [42.3, 285.0], [42.4, 285.0], [42.5, 285.0], [42.6, 286.0], [42.7, 286.0], [42.8, 286.0], [42.9, 286.0], [43.0, 286.0], [43.1, 286.0], [43.2, 286.0], [43.3, 286.0], [43.4, 286.0], [43.5, 286.0], [43.6, 286.0], [43.7, 286.0], [43.8, 286.0], [43.9, 286.0], [44.0, 286.0], [44.1, 286.0], [44.2, 286.0], [44.3, 286.0], [44.4, 286.0], [44.5, 286.0], [44.6, 286.0], [44.7, 286.0], [44.8, 286.0], [44.9, 286.0], [45.0, 286.0], [45.1, 286.0], [45.2, 286.0], [45.3, 286.0], [45.4, 286.0], [45.5, 286.0], [45.6, 286.0], [45.7, 286.0], [45.8, 286.0], [45.9, 287.0], [46.0, 287.0], [46.1, 287.0], [46.2, 287.0], [46.3, 287.0], [46.4, 287.0], [46.5, 287.0], [46.6, 287.0], [46.7, 287.0], [46.8, 287.0], [46.9, 287.0], [47.0, 287.0], [47.1, 287.0], [47.2, 287.0], [47.3, 287.0], [47.4, 287.0], [47.5, 287.0], [47.6, 287.0], [47.7, 287.0], [47.8, 287.0], [47.9, 287.0], [48.0, 287.0], [48.1, 287.0], [48.2, 287.0], [48.3, 287.0], [48.4, 287.0], [48.5, 287.0], [48.6, 287.0], [48.7, 287.0], [48.8, 287.0], [48.9, 287.0], [49.0, 287.0], [49.1, 287.0], [49.2, 287.0], [49.3, 287.0], [49.4, 287.0], [49.5, 287.0], [49.6, 287.0], [49.7, 287.0], [49.8, 287.0], [49.9, 287.0], [50.0, 287.0], [50.1, 288.0], [50.2, 288.0], [50.3, 288.0], [50.4, 288.0], [50.5, 288.0], [50.6, 288.0], [50.7, 288.0], [50.8, 288.0], [50.9, 288.0], [51.0, 288.0], [51.1, 288.0], [51.2, 288.0], [51.3, 288.0], [51.4, 288.0], [51.5, 288.0], [51.6, 288.0], [51.7, 288.0], [51.8, 288.0], [51.9, 288.0], [52.0, 288.0], [52.1, 288.0], [52.2, 288.0], [52.3, 288.0], [52.4, 288.0], [52.5, 289.0], [52.6, 289.0], [52.7, 289.0], [52.8, 289.0], [52.9, 289.0], [53.0, 289.0], [53.1, 289.0], [53.2, 289.0], [53.3, 289.0], [53.4, 289.0], [53.5, 289.0], [53.6, 289.0], [53.7, 289.0], [53.8, 289.0], [53.9, 289.0], [54.0, 289.0], [54.1, 289.0], [54.2, 289.0], [54.3, 289.0], [54.4, 289.0], [54.5, 289.0], [54.6, 289.0], [54.7, 289.0], [54.8, 289.0], [54.9, 289.0], [55.0, 289.0], [55.1, 290.0], [55.2, 290.0], [55.3, 290.0], [55.4, 290.0], [55.5, 290.0], [55.6, 290.0], [55.7, 290.0], [55.8, 290.0], [55.9, 290.0], [56.0, 290.0], [56.1, 290.0], [56.2, 290.0], [56.3, 290.0], [56.4, 290.0], [56.5, 290.0], [56.6, 290.0], [56.7, 290.0], [56.8, 290.0], [56.9, 290.0], [57.0, 290.0], [57.1, 290.0], [57.2, 290.0], [57.3, 290.0], [57.4, 290.0], [57.5, 291.0], [57.6, 291.0], [57.7, 291.0], [57.8, 291.0], [57.9, 291.0], [58.0, 291.0], [58.1, 291.0], [58.2, 291.0], [58.3, 291.0], [58.4, 291.0], [58.5, 291.0], [58.6, 291.0], [58.7, 291.0], [58.8, 291.0], [58.9, 292.0], [59.0, 292.0], [59.1, 292.0], [59.2, 292.0], [59.3, 292.0], [59.4, 292.0], [59.5, 292.0], [59.6, 292.0], [59.7, 292.0], [59.8, 292.0], [59.9, 292.0], [60.0, 292.0], [60.1, 292.0], [60.2, 292.0], [60.3, 292.0], [60.4, 292.0], [60.5, 293.0], [60.6, 293.0], [60.7, 293.0], [60.8, 293.0], [60.9, 293.0], [61.0, 293.0], [61.1, 293.0], [61.2, 293.0], [61.3, 293.0], [61.4, 293.0], [61.5, 293.0], [61.6, 293.0], [61.7, 293.0], [61.8, 293.0], [61.9, 293.0], [62.0, 293.0], [62.1, 293.0], [62.2, 293.0], [62.3, 293.0], [62.4, 293.0], [62.5, 293.0], [62.6, 293.0], [62.7, 294.0], [62.8, 294.0], [62.9, 294.0], [63.0, 294.0], [63.1, 294.0], [63.2, 294.0], [63.3, 294.0], [63.4, 294.0], [63.5, 294.0], [63.6, 294.0], [63.7, 294.0], [63.8, 294.0], [63.9, 294.0], [64.0, 294.0], [64.1, 294.0], [64.2, 295.0], [64.3, 295.0], [64.4, 295.0], [64.5, 295.0], [64.6, 295.0], [64.7, 295.0], [64.8, 295.0], [64.9, 295.0], [65.0, 295.0], [65.1, 295.0], [65.2, 296.0], [65.3, 296.0], [65.4, 296.0], [65.5, 296.0], [65.6, 296.0], [65.7, 296.0], [65.8, 296.0], [65.9, 296.0], [66.0, 297.0], [66.1, 297.0], [66.2, 297.0], [66.3, 297.0], [66.4, 297.0], [66.5, 297.0], [66.6, 297.0], [66.7, 297.0], [66.8, 297.0], [66.9, 297.0], [67.0, 298.0], [67.1, 298.0], [67.2, 298.0], [67.3, 298.0], [67.4, 298.0], [67.5, 298.0], [67.6, 298.0], [67.7, 298.0], [67.8, 299.0], [67.9, 299.0], [68.0, 299.0], [68.1, 299.0], [68.2, 299.0], [68.3, 299.0], [68.4, 299.0], [68.5, 299.0], [68.6, 299.0], [68.7, 299.0], [68.8, 300.0], [68.9, 300.0], [69.0, 300.0], [69.1, 300.0], [69.2, 300.0], [69.3, 300.0], [69.4, 300.0], [69.5, 300.0], [69.6, 300.0], [69.7, 300.0], [69.8, 300.0], [69.9, 300.0], [70.0, 301.0], [70.1, 301.0], [70.2, 301.0], [70.3, 301.0], [70.4, 301.0], [70.5, 301.0], [70.6, 301.0], [70.7, 301.0], [70.8, 301.0], [70.9, 301.0], [71.0, 302.0], [71.1, 302.0], [71.2, 302.0], [71.3, 302.0], [71.4, 303.0], [71.5, 303.0], [71.6, 303.0], [71.7, 303.0], [71.8, 303.0], [71.9, 303.0], [72.0, 303.0], [72.1, 303.0], [72.2, 304.0], [72.3, 304.0], [72.4, 304.0], [72.5, 304.0], [72.6, 304.0], [72.7, 304.0], [72.8, 305.0], [72.9, 305.0], [73.0, 305.0], [73.1, 305.0], [73.2, 305.0], [73.3, 305.0], [73.4, 305.0], [73.5, 305.0], [73.6, 306.0], [73.7, 306.0], [73.8, 306.0], [73.9, 306.0], [74.0, 306.0], [74.1, 306.0], [74.2, 307.0], [74.3, 307.0], [74.4, 308.0], [74.5, 308.0], [74.6, 308.0], [74.7, 308.0], [74.8, 308.0], [74.9, 308.0], [75.0, 308.0], [75.1, 308.0], [75.2, 308.0], [75.3, 308.0], [75.4, 308.0], [75.5, 308.0], [75.6, 308.0], [75.7, 308.0], [75.8, 309.0], [75.9, 309.0], [76.0, 309.0], [76.1, 309.0], [76.2, 310.0], [76.3, 310.0], [76.4, 310.0], [76.5, 310.0], [76.6, 310.0], [76.7, 310.0], [76.8, 311.0], [76.9, 311.0], [77.0, 311.0], [77.1, 311.0], [77.2, 311.0], [77.3, 311.0], [77.4, 312.0], [77.5, 312.0], [77.6, 313.0], [77.7, 313.0], [77.8, 313.0], [77.9, 313.0], [78.0, 314.0], [78.1, 314.0], [78.2, 315.0], [78.3, 315.0], [78.4, 315.0], [78.5, 315.0], [78.6, 315.0], [78.7, 315.0], [78.8, 315.0], [78.9, 315.0], [79.0, 315.0], [79.1, 315.0], [79.2, 315.0], [79.3, 315.0], [79.4, 316.0], [79.5, 316.0], [79.6, 316.0], [79.7, 316.0], [79.8, 316.0], [79.9, 316.0], [80.0, 316.0], [80.1, 316.0], [80.2, 317.0], [80.3, 317.0], [80.4, 317.0], [80.5, 317.0], [80.6, 317.0], [80.7, 317.0], [80.8, 317.0], [80.9, 317.0], [81.0, 317.0], [81.1, 317.0], [81.2, 317.0], [81.3, 317.0], [81.4, 317.0], [81.5, 317.0], [81.6, 317.0], [81.7, 317.0], [81.8, 318.0], [81.9, 318.0], [82.0, 318.0], [82.1, 318.0], [82.2, 318.0], [82.3, 318.0], [82.4, 319.0], [82.5, 319.0], [82.6, 320.0], [82.7, 320.0], [82.8, 321.0], [82.9, 321.0], [83.0, 321.0], [83.1, 321.0], [83.2, 321.0], [83.3, 321.0], [83.4, 321.0], [83.5, 321.0], [83.6, 321.0], [83.7, 321.0], [83.8, 322.0], [83.9, 322.0], [84.0, 322.0], [84.1, 322.0], [84.2, 322.0], [84.3, 322.0], [84.4, 323.0], [84.5, 323.0], [84.6, 323.0], [84.7, 323.0], [84.8, 324.0], [84.9, 324.0], [85.0, 324.0], [85.1, 324.0], [85.2, 324.0], [85.3, 324.0], [85.4, 324.0], [85.5, 324.0], [85.6, 324.0], [85.7, 324.0], [85.8, 325.0], [85.9, 325.0], [86.0, 325.0], [86.1, 325.0], [86.2, 325.0], [86.3, 325.0], [86.4, 325.0], [86.5, 325.0], [86.6, 326.0], [86.7, 326.0], [86.8, 326.0], [86.9, 326.0], [87.0, 326.0], [87.1, 326.0], [87.2, 326.0], [87.3, 326.0], [87.4, 327.0], [87.5, 327.0], [87.6, 327.0], [87.7, 327.0], [87.8, 328.0], [87.9, 328.0], [88.0, 329.0], [88.1, 329.0], [88.2, 329.0], [88.3, 329.0], [88.4, 329.0], [88.5, 329.0], [88.6, 329.0], [88.7, 329.0], [88.8, 330.0], [88.9, 330.0], [89.0, 330.0], [89.1, 330.0], [89.2, 330.0], [89.3, 330.0], [89.4, 331.0], [89.5, 331.0], [89.6, 331.0], [89.7, 331.0], [89.8, 332.0], [89.9, 332.0], [90.0, 333.0], [90.1, 333.0], [90.2, 333.0], [90.3, 333.0], [90.4, 333.0], [90.5, 333.0], [90.6, 333.0], [90.7, 333.0], [90.8, 333.0], [90.9, 333.0], [91.0, 333.0], [91.1, 333.0], [91.2, 334.0], [91.3, 334.0], [91.4, 334.0], [91.5, 334.0], [91.6, 334.0], [91.7, 335.0], [91.8, 335.0], [91.9, 337.0], [92.0, 337.0], [92.1, 338.0], [92.2, 338.0], [92.3, 338.0], [92.4, 338.0], [92.5, 339.0], [92.6, 339.0], [92.7, 340.0], [92.8, 340.0], [92.9, 340.0], [93.0, 340.0], [93.1, 341.0], [93.2, 341.0], [93.3, 342.0], [93.4, 342.0], [93.5, 342.0], [93.6, 342.0], [93.7, 344.0], [93.8, 344.0], [93.9, 344.0], [94.0, 344.0], [94.1, 345.0], [94.2, 345.0], [94.3, 345.0], [94.4, 345.0], [94.5, 345.0], [94.6, 345.0], [94.7, 346.0], [94.8, 346.0], [94.9, 346.0], [95.0, 346.0], [95.1, 347.0], [95.2, 347.0], [95.3, 349.0], [95.4, 349.0], [95.5, 350.0], [95.6, 350.0], [95.7, 350.0], [95.8, 350.0], [95.9, 350.0], [96.0, 350.0], [96.1, 352.0], [96.2, 352.0], [96.3, 354.0], [96.4, 354.0], [96.5, 356.0], [96.6, 356.0], [96.7, 376.0], [96.8, 376.0], [96.9, 976.0], [97.0, 976.0], [97.1, 988.0], [97.2, 988.0], [97.3, 996.0], [97.4, 996.0], [97.5, 1002.0], [97.6, 1002.0], [97.7, 1005.0], [97.8, 1005.0], [97.9, 1009.0], [98.0, 1009.0], [98.1, 1024.0], [98.2, 1024.0], [98.3, 1026.0], [98.4, 1026.0], [98.5, 1033.0], [98.6, 1033.0], [98.7, 1037.0], [98.8, 1037.0], [98.9, 1046.0], [99.0, 1046.0], [99.1, 1048.0], [99.2, 1048.0], [99.3, 1051.0], [99.4, 1051.0], [99.5, 1063.0], [99.6, 1063.0], [99.7, 1065.0], [99.8, 1065.0], [99.9, 1076.0], [100.0, 1076.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[0.0, 272.0], [0.1, 272.0], [0.2, 272.0], [0.3, 272.0], [0.4, 273.0], [0.5, 273.0], [0.6, 273.0], [0.7, 274.0], [0.8, 274.0], [0.9, 274.0], [1.0, 274.0], [1.1, 274.0], [1.2, 274.0], [1.3, 274.0], [1.4, 274.0], [1.5, 274.0], [1.6, 274.0], [1.7, 274.0], [1.8, 275.0], [1.9, 275.0], [2.0, 275.0], [2.1, 275.0], [2.2, 275.0], [2.3, 275.0], [2.4, 275.0], [2.5, 275.0], [2.6, 276.0], [2.7, 276.0], [2.8, 276.0], [2.9, 276.0], [3.0, 276.0], [3.1, 276.0], [3.2, 276.0], [3.3, 276.0], [3.4, 276.0], [3.5, 276.0], [3.6, 276.0], [3.7, 276.0], [3.8, 276.0], [3.9, 276.0], [4.0, 277.0], [4.1, 277.0], [4.2, 277.0], [4.3, 277.0], [4.4, 277.0], [4.5, 277.0], [4.6, 277.0], [4.7, 277.0], [4.8, 277.0], [4.9, 277.0], [5.0, 277.0], [5.1, 277.0], [5.2, 277.0], [5.3, 277.0], [5.4, 277.0], [5.5, 277.0], [5.6, 277.0], [5.7, 277.0], [5.8, 277.0], [5.9, 277.0], [6.0, 277.0], [6.1, 277.0], [6.2, 277.0], [6.3, 277.0], [6.4, 277.0], [6.5, 277.0], [6.6, 277.0], [6.7, 277.0], [6.8, 277.0], [6.9, 277.0], [7.0, 277.0], [7.1, 277.0], [7.2, 277.0], [7.3, 277.0], [7.4, 277.0], [7.5, 277.0], [7.6, 277.0], [7.7, 277.0], [7.8, 277.0], [7.9, 277.0], [8.0, 277.0], [8.1, 277.0], [8.2, 277.0], [8.3, 277.0], [8.4, 278.0], [8.5, 278.0], [8.6, 278.0], [8.7, 278.0], [8.8, 278.0], [8.9, 278.0], [9.0, 278.0], [9.1, 278.0], [9.2, 278.0], [9.3, 278.0], [9.4, 278.0], [9.5, 278.0], [9.6, 278.0], [9.7, 278.0], [9.8, 278.0], [9.9, 278.0], [10.0, 278.0], [10.1, 278.0], [10.2, 278.0], [10.3, 278.0], [10.4, 278.0], [10.5, 278.0], [10.6, 278.0], [10.7, 278.0], [10.8, 278.0], [10.9, 278.0], [11.0, 278.0], [11.1, 278.0], [11.2, 278.0], [11.3, 278.0], [11.4, 278.0], [11.5, 278.0], [11.6, 278.0], [11.7, 279.0], [11.8, 279.0], [11.9, 279.0], [12.0, 279.0], [12.1, 279.0], [12.2, 279.0], [12.3, 279.0], [12.4, 279.0], [12.5, 279.0], [12.6, 279.0], [12.7, 279.0], [12.8, 279.0], [12.9, 279.0], [13.0, 279.0], [13.1, 279.0], [13.2, 279.0], [13.3, 279.0], [13.4, 279.0], [13.5, 279.0], [13.6, 279.0], [13.7, 279.0], [13.8, 279.0], [13.9, 279.0], [14.0, 279.0], [14.1, 279.0], [14.2, 279.0], [14.3, 279.0], [14.4, 279.0], [14.5, 279.0], [14.6, 279.0], [14.7, 279.0], [14.8, 279.0], [14.9, 279.0], [15.0, 279.0], [15.1, 279.0], [15.2, 279.0], [15.3, 279.0], [15.4, 279.0], [15.5, 279.0], [15.6, 279.0], [15.7, 279.0], [15.8, 279.0], [15.9, 279.0], [16.0, 279.0], [16.1, 279.0], [16.2, 279.0], [16.3, 279.0], [16.4, 279.0], [16.5, 279.0], [16.6, 279.0], [16.7, 279.0], [16.8, 279.0], [16.9, 279.0], [17.0, 279.0], [17.1, 279.0], [17.2, 279.0], [17.3, 279.0], [17.4, 279.0], [17.5, 279.0], [17.6, 279.0], [17.7, 279.0], [17.8, 279.0], [17.9, 279.0], [18.0, 279.0], [18.1, 279.0], [18.2, 279.0], [18.3, 279.0], [18.4, 279.0], [18.5, 279.0], [18.6, 280.0], [18.7, 280.0], [18.8, 280.0], [18.9, 280.0], [19.0, 280.0], [19.1, 280.0], [19.2, 280.0], [19.3, 280.0], [19.4, 280.0], [19.5, 280.0], [19.6, 280.0], [19.7, 280.0], [19.8, 280.0], [19.9, 280.0], [20.0, 280.0], [20.1, 280.0], [20.2, 280.0], [20.3, 280.0], [20.4, 280.0], [20.5, 280.0], [20.6, 280.0], [20.7, 280.0], [20.8, 280.0], [20.9, 280.0], [21.0, 280.0], [21.1, 280.0], [21.2, 280.0], [21.3, 280.0], [21.4, 280.0], [21.5, 280.0], [21.6, 280.0], [21.7, 280.0], [21.8, 280.0], [21.9, 280.0], [22.0, 280.0], [22.1, 280.0], [22.2, 280.0], [22.3, 280.0], [22.4, 280.0], [22.5, 280.0], [22.6, 280.0], [22.7, 280.0], [22.8, 280.0], [22.9, 280.0], [23.0, 280.0], [23.1, 280.0], [23.2, 280.0], [23.3, 281.0], [23.4, 281.0], [23.5, 281.0], [23.6, 281.0], [23.7, 281.0], [23.8, 281.0], [23.9, 281.0], [24.0, 281.0], [24.1, 281.0], [24.2, 281.0], [24.3, 281.0], [24.4, 281.0], [24.5, 281.0], [24.6, 281.0], [24.7, 281.0], [24.8, 281.0], [24.9, 281.0], [25.0, 281.0], [25.1, 281.0], [25.2, 281.0], [25.3, 281.0], [25.4, 281.0], [25.5, 281.0], [25.6, 281.0], [25.7, 281.0], [25.8, 281.0], [25.9, 281.0], [26.0, 281.0], [26.1, 281.0], [26.2, 281.0], [26.3, 281.0], [26.4, 281.0], [26.5, 281.0], [26.6, 281.0], [26.7, 281.0], [26.8, 281.0], [26.9, 281.0], [27.0, 281.0], [27.1, 281.0], [27.2, 281.0], [27.3, 281.0], [27.4, 281.0], [27.5, 281.0], [27.6, 281.0], [27.7, 281.0], [27.8, 281.0], [27.9, 281.0], [28.0, 281.0], [28.1, 281.0], [28.2, 281.0], [28.3, 281.0], [28.4, 281.0], [28.5, 281.0], [28.6, 281.0], [28.7, 281.0], [28.8, 281.0], [28.9, 281.0], [29.0, 281.0], [29.1, 282.0], [29.2, 282.0], [29.3, 282.0], [29.4, 282.0], [29.5, 282.0], [29.6, 282.0], [29.7, 282.0], [29.8, 282.0], [29.9, 282.0], [30.0, 282.0], [30.1, 282.0], [30.2, 282.0], [30.3, 282.0], [30.4, 282.0], [30.5, 282.0], [30.6, 282.0], [30.7, 282.0], [30.8, 282.0], [30.9, 282.0], [31.0, 282.0], [31.1, 282.0], [31.2, 282.0], [31.3, 282.0], [31.4, 282.0], [31.5, 282.0], [31.6, 282.0], [31.7, 282.0], [31.8, 282.0], [31.9, 282.0], [32.0, 282.0], [32.1, 282.0], [32.2, 282.0], [32.3, 282.0], [32.4, 282.0], [32.5, 282.0], [32.6, 282.0], [32.7, 282.0], [32.8, 282.0], [32.9, 282.0], [33.0, 282.0], [33.1, 282.0], [33.2, 282.0], [33.3, 282.0], [33.4, 282.0], [33.5, 282.0], [33.6, 282.0], [33.7, 282.0], [33.8, 282.0], [33.9, 282.0], [34.0, 282.0], [34.1, 282.0], [34.2, 282.0], [34.3, 282.0], [34.4, 282.0], [34.5, 282.0], [34.6, 283.0], [34.7, 283.0], [34.8, 283.0], [34.9, 283.0], [35.0, 283.0], [35.1, 283.0], [35.2, 283.0], [35.3, 283.0], [35.4, 283.0], [35.5, 283.0], [35.6, 283.0], [35.7, 283.0], [35.8, 283.0], [35.9, 283.0], [36.0, 283.0], [36.1, 283.0], [36.2, 283.0], [36.3, 283.0], [36.4, 283.0], [36.5, 283.0], [36.6, 283.0], [36.7, 283.0], [36.8, 283.0], [36.9, 283.0], [37.0, 283.0], [37.1, 283.0], [37.2, 283.0], [37.3, 283.0], [37.4, 283.0], [37.5, 283.0], [37.6, 283.0], [37.7, 283.0], [37.8, 283.0], [37.9, 283.0], [38.0, 283.0], [38.1, 283.0], [38.2, 283.0], [38.3, 283.0], [38.4, 283.0], [38.5, 283.0], [38.6, 283.0], [38.7, 283.0], [38.8, 283.0], [38.9, 283.0], [39.0, 283.0], [39.1, 283.0], [39.2, 283.0], [39.3, 283.0], [39.4, 283.0], [39.5, 283.0], [39.6, 283.0], [39.7, 283.0], [39.8, 283.0], [39.9, 284.0], [40.0, 284.0], [40.1, 284.0], [40.2, 284.0], [40.3, 284.0], [40.4, 284.0], [40.5, 284.0], [40.6, 284.0], [40.7, 284.0], [40.8, 284.0], [40.9, 284.0], [41.0, 284.0], [41.1, 284.0], [41.2, 284.0], [41.3, 284.0], [41.4, 284.0], [41.5, 284.0], [41.6, 284.0], [41.7, 284.0], [41.8, 284.0], [41.9, 284.0], [42.0, 284.0], [42.1, 284.0], [42.2, 284.0], [42.3, 284.0], [42.4, 284.0], [42.5, 284.0], [42.6, 284.0], [42.7, 284.0], [42.8, 284.0], [42.9, 284.0], [43.0, 284.0], [43.1, 284.0], [43.2, 284.0], [43.3, 284.0], [43.4, 284.0], [43.5, 284.0], [43.6, 284.0], [43.7, 284.0], [43.8, 284.0], [43.9, 284.0], [44.0, 284.0], [44.1, 284.0], [44.2, 284.0], [44.3, 284.0], [44.4, 284.0], [44.5, 284.0], [44.6, 284.0], [44.7, 284.0], [44.8, 284.0], [44.9, 284.0], [45.0, 284.0], [45.1, 284.0], [45.2, 284.0], [45.3, 284.0], [45.4, 284.0], [45.5, 284.0], [45.6, 284.0], [45.7, 284.0], [45.8, 284.0], [45.9, 284.0], [46.0, 284.0], [46.1, 284.0], [46.2, 284.0], [46.3, 284.0], [46.4, 284.0], [46.5, 285.0], [46.6, 285.0], [46.7, 285.0], [46.8, 285.0], [46.9, 285.0], [47.0, 285.0], [47.1, 285.0], [47.2, 285.0], [47.3, 285.0], [47.4, 285.0], [47.5, 285.0], [47.6, 285.0], [47.7, 285.0], [47.8, 285.0], [47.9, 285.0], [48.0, 285.0], [48.1, 285.0], [48.2, 285.0], [48.3, 285.0], [48.4, 285.0], [48.5, 285.0], [48.6, 285.0], [48.7, 285.0], [48.8, 285.0], [48.9, 285.0], [49.0, 285.0], [49.1, 285.0], [49.2, 285.0], [49.3, 285.0], [49.4, 285.0], [49.5, 285.0], [49.6, 285.0], [49.7, 285.0], [49.8, 285.0], [49.9, 285.0], [50.0, 285.0], [50.1, 285.0], [50.2, 285.0], [50.3, 285.0], [50.4, 285.0], [50.5, 285.0], [50.6, 285.0], [50.7, 285.0], [50.8, 285.0], [50.9, 285.0], [51.0, 285.0], [51.1, 285.0], [51.2, 285.0], [51.3, 285.0], [51.4, 285.0], [51.5, 285.0], [51.6, 285.0], [51.7, 285.0], [51.8, 285.0], [51.9, 285.0], [52.0, 285.0], [52.1, 285.0], [52.2, 285.0], [52.3, 285.0], [52.4, 285.0], [52.5, 285.0], [52.6, 285.0], [52.7, 286.0], [52.8, 286.0], [52.9, 286.0], [53.0, 286.0], [53.1, 286.0], [53.2, 286.0], [53.3, 286.0], [53.4, 286.0], [53.5, 286.0], [53.6, 286.0], [53.7, 286.0], [53.8, 286.0], [53.9, 286.0], [54.0, 286.0], [54.1, 286.0], [54.2, 286.0], [54.3, 286.0], [54.4, 286.0], [54.5, 286.0], [54.6, 286.0], [54.7, 286.0], [54.8, 286.0], [54.9, 286.0], [55.0, 286.0], [55.1, 286.0], [55.2, 286.0], [55.3, 286.0], [55.4, 286.0], [55.5, 286.0], [55.6, 286.0], [55.7, 286.0], [55.8, 286.0], [55.9, 286.0], [56.0, 286.0], [56.1, 286.0], [56.2, 286.0], [56.3, 286.0], [56.4, 286.0], [56.5, 286.0], [56.6, 286.0], [56.7, 287.0], [56.8, 287.0], [56.9, 287.0], [57.0, 287.0], [57.1, 287.0], [57.2, 287.0], [57.3, 287.0], [57.4, 287.0], [57.5, 287.0], [57.6, 287.0], [57.7, 287.0], [57.8, 287.0], [57.9, 287.0], [58.0, 287.0], [58.1, 287.0], [58.2, 287.0], [58.3, 287.0], [58.4, 287.0], [58.5, 287.0], [58.6, 287.0], [58.7, 287.0], [58.8, 287.0], [58.9, 287.0], [59.0, 287.0], [59.1, 287.0], [59.2, 287.0], [59.3, 287.0], [59.4, 287.0], [59.5, 287.0], [59.6, 287.0], [59.7, 287.0], [59.8, 287.0], [59.9, 287.0], [60.0, 287.0], [60.1, 287.0], [60.2, 287.0], [60.3, 287.0], [60.4, 287.0], [60.5, 287.0], [60.6, 287.0], [60.7, 287.0], [60.8, 287.0], [60.9, 287.0], [61.0, 287.0], [61.1, 287.0], [61.2, 287.0], [61.3, 287.0], [61.4, 287.0], [61.5, 287.0], [61.6, 287.0], [61.7, 288.0], [61.8, 288.0], [61.9, 288.0], [62.0, 288.0], [62.1, 288.0], [62.2, 288.0], [62.3, 288.0], [62.4, 288.0], [62.5, 288.0], [62.6, 288.0], [62.7, 288.0], [62.8, 288.0], [62.9, 288.0], [63.0, 288.0], [63.1, 288.0], [63.2, 288.0], [63.3, 288.0], [63.4, 288.0], [63.5, 288.0], [63.6, 288.0], [63.7, 288.0], [63.8, 288.0], [63.9, 288.0], [64.0, 288.0], [64.1, 288.0], [64.2, 288.0], [64.3, 288.0], [64.4, 288.0], [64.5, 288.0], [64.6, 288.0], [64.7, 288.0], [64.8, 288.0], [64.9, 288.0], [65.0, 288.0], [65.1, 288.0], [65.2, 288.0], [65.3, 288.0], [65.4, 288.0], [65.5, 288.0], [65.6, 288.0], [65.7, 289.0], [65.8, 289.0], [65.9, 289.0], [66.0, 289.0], [66.1, 289.0], [66.2, 289.0], [66.3, 289.0], [66.4, 289.0], [66.5, 289.0], [66.6, 289.0], [66.7, 289.0], [66.8, 289.0], [66.9, 289.0], [67.0, 289.0], [67.1, 289.0], [67.2, 289.0], [67.3, 289.0], [67.4, 289.0], [67.5, 289.0], [67.6, 289.0], [67.7, 289.0], [67.8, 289.0], [67.9, 289.0], [68.0, 289.0], [68.1, 289.0], [68.2, 290.0], [68.3, 290.0], [68.4, 290.0], [68.5, 290.0], [68.6, 290.0], [68.7, 290.0], [68.8, 290.0], [68.9, 290.0], [69.0, 290.0], [69.1, 290.0], [69.2, 290.0], [69.3, 290.0], [69.4, 290.0], [69.5, 290.0], [69.6, 290.0], [69.7, 290.0], [69.8, 290.0], [69.9, 290.0], [70.0, 290.0], [70.1, 290.0], [70.2, 290.0], [70.3, 290.0], [70.4, 290.0], [70.5, 290.0], [70.6, 290.0], [70.7, 290.0], [70.8, 290.0], [70.9, 290.0], [71.0, 291.0], [71.1, 291.0], [71.2, 291.0], [71.3, 291.0], [71.4, 291.0], [71.5, 291.0], [71.6, 291.0], [71.7, 291.0], [71.8, 291.0], [71.9, 291.0], [72.0, 291.0], [72.1, 291.0], [72.2, 291.0], [72.3, 291.0], [72.4, 291.0], [72.5, 291.0], [72.6, 292.0], [72.7, 292.0], [72.8, 292.0], [72.9, 292.0], [73.0, 292.0], [73.1, 292.0], [73.2, 292.0], [73.3, 292.0], [73.4, 292.0], [73.5, 292.0], [73.6, 293.0], [73.7, 293.0], [73.8, 293.0], [73.9, 293.0], [74.0, 293.0], [74.1, 293.0], [74.2, 293.0], [74.3, 293.0], [74.4, 293.0], [74.5, 293.0], [74.6, 293.0], [74.7, 293.0], [74.8, 293.0], [74.9, 293.0], [75.0, 293.0], [75.1, 293.0], [75.2, 293.0], [75.3, 293.0], [75.4, 293.0], [75.5, 293.0], [75.6, 293.0], [75.7, 293.0], [75.8, 294.0], [75.9, 294.0], [76.0, 294.0], [76.1, 294.0], [76.2, 294.0], [76.3, 294.0], [76.4, 294.0], [76.5, 294.0], [76.6, 294.0], [76.7, 294.0], [76.8, 295.0], [76.9, 295.0], [77.0, 295.0], [77.1, 295.0], [77.2, 295.0], [77.3, 295.0], [77.4, 295.0], [77.5, 295.0], [77.6, 295.0], [77.7, 295.0], [77.8, 295.0], [77.9, 295.0], [78.0, 295.0], [78.1, 295.0], [78.2, 295.0], [78.3, 295.0], [78.4, 295.0], [78.5, 295.0], [78.6, 296.0], [78.7, 296.0], [78.8, 296.0], [78.9, 296.0], [79.0, 296.0], [79.1, 296.0], [79.2, 296.0], [79.3, 296.0], [79.4, 296.0], [79.5, 296.0], [79.6, 297.0], [79.7, 297.0], [79.8, 297.0], [79.9, 297.0], [80.0, 297.0], [80.1, 297.0], [80.2, 297.0], [80.3, 297.0], [80.4, 298.0], [80.5, 298.0], [80.6, 298.0], [80.7, 298.0], [80.8, 298.0], [80.9, 298.0], [81.0, 298.0], [81.1, 298.0], [81.2, 299.0], [81.3, 299.0], [81.4, 299.0], [81.5, 299.0], [81.6, 299.0], [81.7, 299.0], [81.8, 300.0], [81.9, 300.0], [82.0, 300.0], [82.1, 300.0], [82.2, 300.0], [82.3, 300.0], [82.4, 300.0], [82.5, 300.0], [82.6, 300.0], [82.7, 300.0], [82.8, 301.0], [82.9, 301.0], [83.0, 302.0], [83.1, 302.0], [83.2, 302.0], [83.3, 302.0], [83.4, 304.0], [83.5, 304.0], [83.6, 304.0], [83.7, 304.0], [83.8, 304.0], [83.9, 304.0], [84.0, 305.0], [84.1, 305.0], [84.2, 307.0], [84.3, 307.0], [84.4, 307.0], [84.5, 307.0], [84.6, 307.0], [84.7, 307.0], [84.8, 308.0], [84.9, 308.0], [85.0, 308.0], [85.1, 308.0], [85.2, 308.0], [85.3, 308.0], [85.4, 309.0], [85.5, 309.0], [85.6, 309.0], [85.7, 309.0], [85.8, 309.0], [85.9, 309.0], [86.0, 310.0], [86.1, 310.0], [86.2, 310.0], [86.3, 310.0], [86.4, 310.0], [86.5, 310.0], [86.6, 310.0], [86.7, 310.0], [86.8, 310.0], [86.9, 310.0], [87.0, 311.0], [87.1, 311.0], [87.2, 311.0], [87.3, 311.0], [87.4, 311.0], [87.5, 311.0], [87.6, 312.0], [87.7, 312.0], [87.8, 312.0], [87.9, 312.0], [88.0, 312.0], [88.1, 312.0], [88.2, 314.0], [88.3, 314.0], [88.4, 314.0], [88.5, 314.0], [88.6, 314.0], [88.7, 314.0], [88.8, 315.0], [88.9, 315.0], [89.0, 315.0], [89.1, 315.0], [89.2, 315.0], [89.3, 315.0], [89.4, 315.0], [89.5, 315.0], [89.6, 316.0], [89.7, 316.0], [89.8, 316.0], [89.9, 316.0], [90.0, 316.0], [90.1, 316.0], [90.2, 316.0], [90.3, 316.0], [90.4, 316.0], [90.5, 316.0], [90.6, 317.0], [90.7, 317.0], [90.8, 318.0], [90.9, 318.0], [91.0, 318.0], [91.1, 318.0], [91.2, 318.0], [91.3, 318.0], [91.4, 319.0], [91.5, 319.0], [91.6, 319.0], [91.7, 319.0], [91.8, 320.0], [91.9, 320.0], [92.0, 321.0], [92.1, 321.0], [92.2, 322.0], [92.3, 322.0], [92.4, 323.0], [92.5, 323.0], [92.6, 323.0], [92.7, 323.0], [92.8, 324.0], [92.9, 324.0], [93.0, 325.0], [93.1, 325.0], [93.2, 325.0], [93.3, 325.0], [93.4, 326.0], [93.5, 326.0], [93.6, 326.0], [93.7, 326.0], [93.8, 326.0], [93.9, 326.0], [94.0, 327.0], [94.1, 327.0], [94.2, 327.0], [94.3, 327.0], [94.4, 327.0], [94.5, 327.0], [94.6, 327.0], [94.7, 327.0], [94.8, 327.0], [94.9, 327.0], [95.0, 327.0], [95.1, 327.0], [95.2, 328.0], [95.3, 328.0], [95.4, 328.0], [95.5, 328.0], [95.6, 329.0], [95.7, 329.0], [95.8, 329.0], [95.9, 329.0], [96.0, 331.0], [96.1, 331.0], [96.2, 334.0], [96.3, 334.0], [96.4, 338.0], [96.5, 338.0], [96.6, 345.0], [96.7, 345.0], [96.8, 851.0], [96.9, 851.0], [97.0, 1004.0], [97.1, 1004.0], [97.2, 1039.0], [97.3, 1039.0], [97.4, 1047.0], [97.5, 1047.0], [97.6, 1047.0], [97.7, 1052.0], [97.8, 1052.0], [97.9, 1058.0], [98.0, 1058.0], [98.1, 1065.0], [98.2, 1065.0], [98.3, 1074.0], [98.4, 1074.0], [98.5, 1078.0], [98.6, 1078.0], [98.7, 1078.0], [98.8, 1078.0], [98.9, 1086.0], [99.0, 1086.0], [99.1, 1091.0], [99.2, 1091.0], [99.3, 1110.0], [99.4, 1110.0], [99.5, 1114.0], [99.6, 1114.0], [99.7, 1127.0], [99.8, 1127.0], [99.9, 1136.0], [100.0, 1136.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 409.0, "series": [{"data": [[1500.0, 1.0], [1600.0, 4.0], [1700.0, 1.0], [1800.0, 6.0], [1900.0, 2.0], [2000.0, 8.0], [2100.0, 8.0], [2200.0, 15.0], [2300.0, 9.0], [2400.0, 5.0], [2500.0, 9.0], [2600.0, 17.0], [2800.0, 16.0], [2700.0, 7.0], [2900.0, 25.0], [3000.0, 17.0], [3100.0, 28.0], [3200.0, 20.0], [3300.0, 8.0], [3400.0, 24.0], [3500.0, 14.0], [3600.0, 8.0], [3700.0, 6.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 11.0], [4200.0, 20.0], [4100.0, 17.0], [4300.0, 20.0], [4400.0, 18.0], [4500.0, 15.0], [4600.0, 6.0], [4700.0, 12.0], [4800.0, 7.0], [4900.0, 2.0], [5000.0, 2.0], [5200.0, 2.0], [5400.0, 1.0], [5600.0, 3.0], [5700.0, 6.0], [5800.0, 6.0], [5900.0, 7.0], [6000.0, 6.0], [6100.0, 10.0], [6200.0, 10.0], [6300.0, 16.0], [6400.0, 11.0], [6500.0, 1.0], [6600.0, 1.0], [6700.0, 5.0], [6800.0, 7.0], [6900.0, 5.0], [7000.0, 2.0], [7500.0, 1.0], [7600.0, 1.0], [8700.0, 1.0], [13300.0, 2.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[300.0, 140.0], [200.0, 344.0], [900.0, 3.0], [1000.0, 13.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1100.0, 4.0], [300.0, 75.0], [200.0, 409.0], [800.0, 1.0], [1000.0, 11.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 32.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 968.0, "series": [{"data": [[0.0, 968.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 32.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 500.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 290.08599999999973, "minX": 1.73702316E12, "maxY": 290.08599999999973, "series": [{"data": [[1.73702316E12, 290.08599999999973]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702316E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 271.0, "minX": 1.0, "maxY": 13356.0, "series": [{"data": [[2.0, 13356.0], [3.0, 8738.0], [5.0, 7643.0], [7.0, 7598.0], [26.0, 7076.0], [39.0, 6937.0], [38.0, 6925.0], [49.0, 6932.0], [48.0, 7000.0], [50.0, 6916.5], [56.0, 6819.75], [67.0, 6767.0], [66.0, 6880.0], [75.0, 6829.0], [74.0, 6776.0], [79.0, 6781.0], [87.0, 6741.0], [95.0, 6671.0], [99.0, 6503.5], [103.0, 5775.714285714286], [102.0, 6170.19117647059], [116.0, 5270.0], [152.0, 4975.5], [162.0, 4831.0], [161.0, 4537.0], [171.0, 5012.0], [169.0, 5026.0], [178.0, 4892.0], [191.0, 4904.0], [213.0, 4305.0], [209.0, 4954.0], [231.0, 4262.0], [229.0, 4876.0], [238.0, 4690.0], [237.0, 4679.5], [235.0, 4718.0], [234.0, 4720.75], [247.0, 4465.5], [246.0, 4630.5], [245.0, 4613.333333333333], [244.0, 4699.2], [242.0, 4594.25], [240.0, 4800.0], [248.0, 4586.0], [270.0, 4259.0], [268.0, 4399.0], [264.0, 4559.0], [261.0, 4566.5], [258.0, 4476.5], [287.0, 4359.5], [286.0, 4330.0], [282.0, 4208.666666666667], [280.0, 4370.666666666667], [279.0, 4467.5], [277.0, 4544.0], [276.0, 4058.0], [275.0, 4365.0], [291.0, 4271.599999999999], [301.0, 4297.0], [299.0, 4104.0], [297.0, 3786.0], [295.0, 4197.6], [293.0, 4402.333333333333], [292.0, 4298.75], [290.0, 4378.5], [289.0, 4170.5], [308.0, 4197.5], [307.0, 4372.0], [306.0, 3914.0], [305.0, 4171.6], [304.0, 4206.666666666667], [334.0, 3931.0], [333.0, 4212.5], [331.0, 4123.0], [326.0, 3741.0], [324.0, 4148.5], [323.0, 4189.0], [351.0, 4284.0], [350.0, 4092.0], [347.0, 4279.0], [343.0, 4070.0], [342.0, 4090.0], [340.0, 4123.0], [366.0, 4212.0], [365.0, 3869.5], [364.0, 4030.0], [363.0, 3610.0], [361.0, 4133.0], [360.0, 4236.0], [356.0, 4262.0], [355.0, 4267.0], [381.0, 3522.0], [379.0, 3339.0], [378.0, 2906.0], [375.0, 3545.0], [374.0, 3601.625], [372.0, 3682.5], [371.0, 3717.0], [413.0, 3340.0], [411.0, 3198.0], [409.0, 3555.0], [406.0, 3512.0], [405.0, 3387.5], [404.0, 3630.0], [431.0, 3303.0], [429.0, 3470.0], [427.0, 3413.0], [425.0, 3495.0], [424.0, 3464.0], [423.0, 3108.0], [422.0, 3283.0], [420.0, 3415.0], [417.0, 3104.0], [445.0, 3093.777777777778], [444.0, 3148.3888888888887], [443.0, 3057.0], [442.0, 3370.3333333333335], [441.0, 3234.6666666666665], [439.0, 3108.0], [438.0, 3465.3333333333335], [437.0, 3257.5], [435.0, 3397.0], [434.0, 3095.6666666666665], [454.0, 2394.0], [453.0, 3024.0], [452.0, 2373.0], [451.0, 2818.921568627451], [450.0, 2979.1250000000005], [449.0, 3013.0], [448.0, 2974.6666666666665], [468.0, 2545.0], [493.0, 2483.0], [482.0, 2923.0], [500.0, 2102.0961538461543], [497.0, 2263.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[327.25200000000007, 4049.616000000002]], "isOverall": false, "label": "Auth-Aggregated", "isController": false}, {"data": [[2.0, 278.0], [3.0, 306.0], [4.0, 293.0], [5.0, 280.0], [6.0, 1048.0], [7.0, 283.0], [8.0, 288.0], [9.0, 284.0], [10.0, 281.0], [11.0, 284.0], [12.0, 283.0], [13.0, 295.0], [14.0, 283.0], [15.0, 282.0], [16.0, 280.0], [17.0, 285.0], [18.0, 283.0], [19.0, 281.0], [20.0, 289.0], [21.0, 283.0], [22.0, 287.0], [23.0, 278.0], [24.0, 290.0], [25.0, 287.0], [26.0, 285.0], [27.0, 291.0], [28.0, 285.0], [29.0, 286.0], [30.0, 296.0], [31.0, 296.0], [33.0, 294.0], [32.0, 293.0], [35.0, 292.0], [34.0, 293.0], [37.0, 282.0], [36.0, 285.0], [39.0, 287.0], [38.0, 286.0], [41.0, 287.0], [40.0, 286.0], [43.0, 282.0], [42.0, 294.0], [45.0, 281.0], [44.0, 276.0], [47.0, 277.0], [46.0, 284.0], [49.0, 281.0], [48.0, 284.0], [50.0, 282.0], [53.0, 283.0], [52.0, 283.0], [55.0, 285.0], [54.0, 282.0], [57.0, 291.0], [56.0, 279.0], [59.0, 285.0], [58.0, 285.0], [61.0, 287.0], [60.0, 285.0], [63.0, 281.0], [62.0, 280.0], [67.0, 275.0], [66.0, 283.0], [65.0, 281.0], [64.0, 286.0], [71.0, 280.0], [70.0, 278.0], [68.0, 287.0], [75.0, 280.0], [74.0, 291.0], [73.0, 289.0], [72.0, 280.0], [79.0, 283.0], [78.0, 280.0], [77.0, 281.0], [76.0, 284.0], [83.0, 286.0], [82.0, 283.0], [81.0, 289.0], [80.0, 282.0], [87.0, 282.0], [86.0, 279.0], [85.0, 281.0], [84.0, 276.0], [91.0, 279.0], [90.0, 282.0], [89.0, 282.0], [88.0, 285.0], [95.0, 276.0], [94.0, 279.0], [93.0, 271.0], [92.0, 280.0], [99.0, 280.0], [98.0, 282.0], [97.0, 275.0], [96.0, 282.0], [103.0, 285.0], [102.0, 274.0], [101.0, 284.0], [100.0, 280.0], [107.0, 282.0], [106.0, 290.0], [105.0, 286.0], [104.0, 294.0], [111.0, 287.0], [110.0, 1046.0], [109.0, 1063.0], [108.0, 279.0], [115.0, 282.0], [114.0, 286.0], [113.0, 292.0], [112.0, 279.0], [119.0, 287.0], [118.0, 277.0], [117.0, 284.0], [116.0, 286.0], [123.0, 282.0], [122.0, 286.0], [121.0, 290.0], [120.0, 285.0], [127.0, 281.0], [126.0, 285.0], [125.0, 280.0], [124.0, 280.0], [134.0, 289.0], [133.0, 286.5], [131.0, 280.0], [130.0, 285.0], [129.0, 279.0], [128.0, 285.0], [143.0, 298.0], [142.0, 282.0], [141.0, 282.0], [140.0, 284.0], [139.0, 278.0], [138.0, 284.0], [137.0, 283.0], [151.0, 282.0], [150.0, 285.0], [149.0, 284.0], [148.0, 285.0], [147.0, 288.0], [146.0, 289.5], [144.0, 290.0], [159.0, 290.0], [158.0, 285.0], [157.0, 285.0], [156.0, 289.0], [155.0, 286.0], [154.0, 283.0], [153.0, 288.0], [152.0, 277.0], [167.0, 295.0], [166.0, 296.0], [165.0, 294.0], [164.0, 300.0], [163.0, 299.0], [162.0, 295.0], [161.0, 297.0], [160.0, 284.0], [175.0, 289.0], [174.0, 299.0], [173.0, 282.0], [172.0, 286.0], [171.0, 281.0], [170.0, 289.0], [169.0, 284.0], [168.0, 287.0], [183.0, 286.0], [182.0, 281.0], [181.0, 280.0], [180.0, 281.0], [179.0, 275.0], [178.0, 287.0], [177.0, 289.0], [176.0, 285.0], [191.0, 280.0], [189.0, 286.0], [188.0, 281.0], [187.0, 288.0], [186.0, 282.0], [185.0, 280.0], [184.0, 289.0], [199.0, 280.0], [198.0, 282.0], [196.0, 282.0], [195.0, 286.0], [194.0, 282.0], [193.0, 281.0], [192.0, 289.0], [207.0, 290.0], [206.0, 277.0], [205.0, 275.0], [204.0, 284.0], [203.0, 284.0], [202.0, 282.0], [200.0, 288.0], [215.0, 279.0], [214.0, 281.0], [213.0, 282.0], [212.0, 282.0], [210.0, 283.0], [209.0, 284.0], [208.0, 284.0], [223.0, 281.0], [222.0, 281.0], [221.0, 278.5], [219.0, 281.0], [218.0, 284.0], [217.0, 284.0], [216.0, 277.0], [231.0, 290.0], [230.0, 290.0], [229.0, 279.0], [228.0, 281.0], [226.0, 278.0], [225.0, 281.0], [224.0, 285.0], [239.0, 284.0], [238.0, 285.0], [237.0, 283.0], [236.0, 281.0], [235.0, 279.0], [234.0, 284.0], [233.0, 284.0], [232.0, 279.0], [247.0, 285.0], [246.0, 293.0], [245.0, 279.0], [244.0, 283.0], [243.0, 283.0], [242.0, 278.0], [241.0, 289.0], [240.0, 287.0], [255.0, 283.0], [254.0, 278.0], [253.0, 284.0], [252.0, 287.0], [251.0, 285.0], [250.0, 279.0], [249.0, 296.0], [248.0, 280.0], [270.0, 287.0], [271.0, 277.0], [268.0, 291.0], [259.0, 290.0], [258.0, 284.0], [257.0, 281.0], [267.0, 280.0], [266.0, 283.0], [265.0, 284.0], [264.0, 285.0], [262.0, 284.0], [261.0, 285.0], [260.0, 289.0], [286.0, 1051.0], [287.0, 285.0], [285.0, 1024.0], [284.0, 1031.5], [282.0, 287.0], [281.0, 290.0], [280.0, 291.0], [279.0, 283.0], [273.0, 280.0], [272.0, 282.0], [275.0, 281.0], [274.0, 288.0], [278.0, 1065.0], [277.0, 278.0], [276.0, 1076.0], [302.0, 988.0], [303.0, 285.0], [301.0, 301.0], [300.0, 293.0], [299.0, 1005.0], [298.0, 305.0], [297.0, 299.0], [296.0, 304.0], [295.0, 293.0], [289.0, 278.0], [288.0, 280.0], [291.0, 1002.0], [290.0, 1033.0], [294.0, 293.0], [293.0, 301.0], [292.0, 294.0], [318.0, 310.0], [319.0, 305.0], [317.0, 308.0], [316.0, 308.0], [315.0, 310.0], [314.0, 315.0], [313.0, 316.0], [312.0, 297.0], [311.0, 301.0], [305.0, 288.0], [304.0, 290.0], [307.0, 297.0], [306.0, 288.0], [310.0, 304.0], [309.0, 294.0], [308.0, 287.0], [334.0, 308.0], [335.0, 305.0], [333.0, 309.0], [332.0, 297.0], [331.0, 311.0], [330.0, 647.5], [328.0, 302.0], [327.0, 1009.0], [321.0, 304.0], [320.0, 315.0], [323.0, 310.0], [322.0, 308.0], [326.0, 308.0], [324.0, 315.0], [348.0, 297.0], [350.0, 298.0], [351.0, 300.0], [349.0, 294.0], [347.0, 301.0], [346.0, 299.6666666666667], [343.0, 308.0], [336.0, 303.0], [338.0, 300.0], [337.0, 307.0], [342.0, 300.0], [341.0, 311.0], [340.0, 302.0], [366.0, 283.0], [367.0, 284.0], [365.0, 284.0], [364.0, 283.0], [363.0, 285.0], [362.0, 976.0], [361.0, 292.0], [360.0, 287.0], [359.0, 285.0], [353.0, 295.0], [352.0, 300.0], [355.0, 293.0], [354.0, 292.0], [358.0, 288.0], [357.0, 287.0], [356.0, 294.0], [382.0, 324.0], [383.0, 325.0], [381.0, 321.0], [380.0, 324.0], [379.0, 319.0], [378.0, 314.5], [376.0, 311.0], [375.0, 317.0], [368.0, 280.0], [371.0, 283.0], [369.0, 290.0], [374.0, 278.0], [372.0, 281.0], [397.0, 330.0], [398.0, 329.0], [396.0, 321.5], [387.0, 317.0], [386.0, 315.0], [385.0, 321.0], [384.0, 325.0], [394.0, 334.0], [393.0, 329.0], [392.0, 317.0], [391.0, 306.0], [390.0, 317.0], [389.0, 317.0], [388.0, 321.0], [413.0, 347.0], [414.0, 356.0], [412.0, 346.0], [403.0, 333.0], [402.0, 317.0], [401.0, 326.0], [400.0, 322.5], [411.0, 349.0], [410.0, 350.0], [409.0, 322.0], [408.0, 350.0], [407.0, 327.0], [406.0, 315.0], [405.0, 320.0], [404.0, 329.0], [430.0, 326.0], [431.0, 324.0], [429.0, 331.0], [428.0, 330.0], [427.0, 332.0], [426.0, 331.0], [425.0, 339.0], [424.0, 342.0], [423.0, 342.0], [417.0, 352.0], [416.0, 345.0], [419.0, 345.0], [418.0, 352.0], [422.0, 345.0], [421.0, 344.0], [420.0, 346.0], [446.0, 333.0], [447.0, 291.0], [445.0, 326.0], [444.0, 316.0], [443.0, 318.0], [442.0, 316.0], [441.0, 316.5], [439.0, 317.0], [433.0, 321.0], [432.0, 321.0], [435.0, 328.0], [434.0, 318.0], [438.0, 324.0], [437.0, 322.0], [436.0, 333.0], [462.0, 280.5], [463.0, 335.0], [460.0, 287.0], [451.0, 286.0], [450.0, 277.0], [449.0, 287.0], [448.0, 293.0], [459.0, 376.0], [458.0, 288.0], [457.0, 292.0], [456.0, 293.0], [455.0, 285.0], [454.0, 287.0], [453.0, 288.0], [452.0, 291.0], [478.0, 325.0], [479.0, 323.0], [477.0, 325.0], [476.0, 329.0], [475.0, 330.0], [474.0, 333.0], [473.0, 330.5], [471.0, 341.0], [465.0, 338.0], [464.0, 340.0], [467.0, 337.0], [466.0, 338.0], [470.0, 333.0], [469.0, 344.0], [468.0, 340.0], [494.0, 292.0], [495.0, 287.0], [493.0, 294.0], [482.0, 322.3333333333333], [491.0, 300.0], [490.0, 299.0], [489.0, 305.0], [488.0, 307.0], [486.0, 302.0], [485.0, 308.0], [484.0, 312.5], [500.0, 280.0], [499.0, 280.0], [498.0, 283.0], [497.0, 279.0], [496.0, 283.0], [1.0, 284.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[250.5780000000002, 319.01800000000003]], "isOverall": false, "label": "GetBooking-Aggregated", "isController": false}, {"data": [[2.0, 279.5], [3.0, 307.0], [5.0, 282.5], [20.0, 282.0], [24.0, 281.6666666666667], [25.0, 283.2857142857143], [26.0, 282.6666666666667], [27.0, 282.0], [29.0, 281.0], [36.0, 288.0], [44.0, 284.0], [56.0, 284.0], [67.0, 288.0], [70.0, 281.0], [75.0, 284.0], [78.0, 289.0], [77.0, 284.0], [83.0, 283.0], [81.0, 278.0], [80.0, 279.0], [87.0, 295.0], [85.0, 277.5], [84.0, 287.0], [91.0, 279.75], [90.0, 283.0], [89.0, 282.0], [88.0, 280.6666666666667], [95.0, 283.25], [94.0, 277.0], [93.0, 281.5], [92.0, 281.0], [99.0, 279.4285714285714], [98.0, 281.0], [97.0, 281.0], [96.0, 280.0], [102.0, 278.9333333333332], [100.0, 280.0], [105.0, 284.0], [115.0, 1136.0], [119.0, 283.0], [118.0, 1039.0], [116.0, 561.0], [123.0, 277.0], [129.0, 280.5], [139.0, 279.0], [147.0, 280.0], [159.0, 286.0], [152.0, 277.0], [167.0, 295.0], [166.0, 290.0], [164.0, 287.0], [162.0, 284.8], [174.0, 280.0], [172.0, 282.5], [169.0, 282.5], [181.0, 281.0], [180.0, 281.0], [177.0, 284.5], [176.0, 281.0], [189.0, 291.0], [187.0, 287.5], [193.0, 274.0], [192.0, 280.25], [205.0, 276.0], [219.0, 280.0], [218.0, 288.0], [217.0, 283.0], [216.0, 283.3333333333333], [231.0, 285.0], [229.0, 277.0], [238.0, 280.0], [237.0, 288.75], [234.0, 296.5], [246.0, 285.6666666666667], [245.0, 280.25], [244.0, 284.3333333333333], [243.0, 283.0], [242.0, 281.0], [240.0, 283.0], [254.0, 278.6666666666667], [253.0, 281.5], [252.0, 280.0], [251.0, 282.0], [250.0, 279.0], [248.0, 280.4666666666667], [271.0, 566.0], [268.0, 475.0], [267.0, 285.0], [266.0, 282.6666666666667], [264.0, 279.3333333333333], [261.0, 284.5], [275.0, 282.0], [286.0, 284.0], [287.0, 282.0], [284.0, 286.0], [282.0, 285.0], [281.0, 287.5], [279.0, 284.0], [276.0, 281.0], [273.0, 281.5], [272.0, 284.0], [293.0, 281.0], [291.0, 285.0], [288.0, 281.0], [318.0, 1086.0], [319.0, 1078.0], [317.0, 1074.0], [315.0, 310.0], [314.0, 312.0], [313.0, 309.0], [311.0, 298.0], [304.0, 283.0], [307.0, 1091.0], [306.0, 284.0], [305.0, 1110.0], [334.0, 297.0], [332.0, 310.0], [328.0, 302.0], [326.0, 1058.0], [324.0, 696.0], [349.0, 1049.5], [346.0, 1065.0], [344.0, 1004.0], [343.0, 300.0], [366.0, 280.0], [365.0, 277.0], [362.0, 282.0], [361.0, 284.0], [357.0, 285.0], [356.0, 290.0], [355.0, 289.0], [382.0, 315.0], [381.0, 314.0], [378.0, 310.5], [375.0, 314.5], [374.0, 298.3076923076923], [372.0, 285.0], [371.0, 285.93548387096774], [397.0, 321.0], [396.0, 315.0], [394.0, 316.0], [389.0, 312.0], [386.0, 318.0], [447.0, 288.88235294117646], [446.0, 311.5], [445.0, 324.4347826086957], [444.0, 327.0], [438.0, 325.0], [436.0, 314.0], [434.0, 316.0], [451.0, 288.25], [450.0, 289.6], [449.0, 282.0], [448.0, 285.2857142857143], [485.0, 308.0], [500.0, 286.795918367347]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[292.4279999999998, 313.82800000000026]], "isOverall": false, "label": "CreateBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7625.0, "minX": 1.73702316E12, "maxY": 22050.0, "series": [{"data": [[1.73702316E12, 22050.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73702316E12, 7625.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702316E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 313.82800000000026, "minX": 1.73702316E12, "maxY": 4049.616000000002, "series": [{"data": [[1.73702316E12, 4049.616000000002]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.73702316E12, 319.01800000000003]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.73702316E12, 313.82800000000026]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702316E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 313.8140000000002, "minX": 1.73702316E12, "maxY": 4049.5340000000024, "series": [{"data": [[1.73702316E12, 4049.5340000000024]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.73702316E12, 319.0000000000001]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.73702316E12, 313.8140000000002]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702316E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73702316E12, "maxY": 3732.088000000002, "series": [{"data": [[1.73702316E12, 3732.088000000002]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.73702316E12, 0.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.73702316E12, 0.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702316E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 271.0, "minX": 1.73702316E12, "maxY": 13384.0, "series": [{"data": [[1.73702316E12, 13384.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73702316E12, 271.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73702316E12, 4481.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73702316E12, 6868.84]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73702316E12, 299.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73702316E12, 6070.85]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702316E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 11033.0, "series": [{"data": [[1.0, 11033.0], [2.0, 306.5], [5.0, 280.0], [45.0, 2139.0], [91.0, 1136.0], [25.0, 283.0], [215.0, 341.0], [439.0, 287.0], [221.0, 284.0], [455.0, 318.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 455.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 11033.0, "series": [{"data": [[1.0, 11033.0], [2.0, 306.5], [5.0, 280.0], [45.0, 2139.0], [91.0, 1136.0], [25.0, 283.0], [215.0, 341.0], [439.0, 287.0], [221.0, 284.0], [455.0, 318.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 455.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.73702316E12, "maxY": 25.0, "series": [{"data": [[1.73702316E12, 25.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702316E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.73702316E12, "maxY": 25.0, "series": [{"data": [[1.73702316E12, 25.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702316E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.73702316E12, "maxY": 8.333333333333334, "series": [{"data": [[1.73702316E12, 8.333333333333334]], "isOverall": false, "label": "Auth-success", "isController": false}, {"data": [[1.73702316E12, 8.333333333333334]], "isOverall": false, "label": "GetBooking-success", "isController": false}, {"data": [[1.73702316E12, 8.333333333333334]], "isOverall": false, "label": "CreateBooking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702316E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.73702316E12, "maxY": 25.0, "series": [{"data": [[1.73702316E12, 25.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702316E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

