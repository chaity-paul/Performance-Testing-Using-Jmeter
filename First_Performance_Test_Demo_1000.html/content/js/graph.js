/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 271.0, "minX": 0.0, "maxY": 22575.0, "series": [{"data": [[0.0, 2428.0], [0.1, 2512.0], [0.2, 2537.0], [0.3, 2537.0], [0.4, 2557.0], [0.5, 2558.0], [0.6, 2558.0], [0.7, 2582.0], [0.8, 2600.0], [0.9, 2630.0], [1.0, 2634.0], [1.1, 2637.0], [1.2, 2637.0], [1.3, 2640.0], [1.4, 2642.0], [1.5, 2643.0], [1.6, 2716.0], [1.7, 2716.0], [1.8, 2787.0], [1.9, 2816.0], [2.0, 2859.0], [2.1, 2866.0], [2.2, 2870.0], [2.3, 2877.0], [2.4, 2878.0], [2.5, 2889.0], [2.6, 2891.0], [2.7, 2897.0], [2.8, 2902.0], [2.9, 2908.0], [3.0, 2909.0], [3.1, 2918.0], [3.2, 2920.0], [3.3, 2921.0], [3.4, 2921.0], [3.5, 2922.0], [3.6, 2923.0], [3.7, 2924.0], [3.8, 2924.0], [3.9, 2925.0], [4.0, 2926.0], [4.1, 2930.0], [4.2, 2932.0], [4.3, 2944.0], [4.4, 2950.0], [4.5, 2956.0], [4.6, 2960.0], [4.7, 2979.0], [4.8, 2980.0], [4.9, 2986.0], [5.0, 2987.0], [5.1, 2987.0], [5.2, 2990.0], [5.3, 2990.0], [5.4, 2992.0], [5.5, 2994.0], [5.6, 2995.0], [5.7, 2999.0], [5.8, 3002.0], [5.9, 3012.0], [6.0, 3012.0], [6.1, 3014.0], [6.2, 3023.0], [6.3, 3031.0], [6.4, 3031.0], [6.5, 3032.0], [6.6, 3033.0], [6.7, 3033.0], [6.8, 3033.0], [6.9, 3038.0], [7.0, 3041.0], [7.1, 3042.0], [7.2, 3043.0], [7.3, 3045.0], [7.4, 3045.0], [7.5, 3048.0], [7.6, 3049.0], [7.7, 3050.0], [7.8, 3050.0], [7.9, 3057.0], [8.0, 3058.0], [8.1, 3062.0], [8.2, 3065.0], [8.3, 3066.0], [8.4, 3070.0], [8.5, 3071.0], [8.6, 3072.0], [8.7, 3080.0], [8.8, 3081.0], [8.9, 3081.0], [9.0, 3083.0], [9.1, 3085.0], [9.2, 3092.0], [9.3, 3092.0], [9.4, 3094.0], [9.5, 3100.0], [9.6, 3100.0], [9.7, 3106.0], [9.8, 3116.0], [9.9, 3117.0], [10.0, 3118.0], [10.1, 3118.0], [10.2, 3120.0], [10.3, 3122.0], [10.4, 3123.0], [10.5, 3126.0], [10.6, 3128.0], [10.7, 3129.0], [10.8, 3132.0], [10.9, 3133.0], [11.0, 3136.0], [11.1, 3142.0], [11.2, 3142.0], [11.3, 3147.0], [11.4, 3148.0], [11.5, 3153.0], [11.6, 3153.0], [11.7, 3155.0], [11.8, 3158.0], [11.9, 3159.0], [12.0, 3166.0], [12.1, 3166.0], [12.2, 3167.0], [12.3, 3169.0], [12.4, 3169.0], [12.5, 3186.0], [12.6, 3186.0], [12.7, 3187.0], [12.8, 3195.0], [12.9, 3197.0], [13.0, 3208.0], [13.1, 3210.0], [13.2, 3212.0], [13.3, 3216.0], [13.4, 3221.0], [13.5, 3224.0], [13.6, 3236.0], [13.7, 3239.0], [13.8, 3241.0], [13.9, 3256.0], [14.0, 3259.0], [14.1, 3260.0], [14.2, 3269.0], [14.3, 3305.0], [14.4, 3316.0], [14.5, 3344.0], [14.6, 3359.0], [14.7, 3367.0], [14.8, 3369.0], [14.9, 3379.0], [15.0, 3398.0], [15.1, 3401.0], [15.2, 3413.0], [15.3, 3427.0], [15.4, 3435.0], [15.5, 3477.0], [15.6, 3497.0], [15.7, 3514.0], [15.8, 3528.0], [15.9, 3553.0], [16.0, 3587.0], [16.1, 3599.0], [16.2, 3618.0], [16.3, 3650.0], [16.4, 3670.0], [16.5, 3679.0], [16.6, 3689.0], [16.7, 3693.0], [16.8, 3706.0], [16.9, 3715.0], [17.0, 3716.0], [17.1, 3723.0], [17.2, 3724.0], [17.3, 3731.0], [17.4, 3732.0], [17.5, 3733.0], [17.6, 3738.0], [17.7, 3746.0], [17.8, 3759.0], [17.9, 3760.0], [18.0, 3762.0], [18.1, 3766.0], [18.2, 3770.0], [18.3, 3782.0], [18.4, 3784.0], [18.5, 3786.0], [18.6, 3796.0], [18.7, 3796.0], [18.8, 3807.0], [18.9, 3809.0], [19.0, 3811.0], [19.1, 3814.0], [19.2, 3821.0], [19.3, 3834.0], [19.4, 3836.0], [19.5, 3852.0], [19.6, 3859.0], [19.7, 3867.0], [19.8, 3871.0], [19.9, 3875.0], [20.0, 3876.0], [20.1, 3895.0], [20.2, 3896.0], [20.3, 3898.0], [20.4, 3918.0], [20.5, 3922.0], [20.6, 3923.0], [20.7, 3974.0], [20.8, 3986.0], [20.9, 3993.0], [21.0, 3995.0], [21.1, 4003.0], [21.2, 4010.0], [21.3, 4015.0], [21.4, 4052.0], [21.5, 4055.0], [21.6, 4064.0], [21.7, 4077.0], [21.8, 4095.0], [21.9, 4111.0], [22.0, 4119.0], [22.1, 4122.0], [22.2, 4130.0], [22.3, 4139.0], [22.4, 4156.0], [22.5, 4166.0], [22.6, 4167.0], [22.7, 4182.0], [22.8, 4187.0], [22.9, 4191.0], [23.0, 4191.0], [23.1, 4197.0], [23.2, 4197.0], [23.3, 4200.0], [23.4, 4201.0], [23.5, 4203.0], [23.6, 4203.0], [23.7, 4207.0], [23.8, 4210.0], [23.9, 4213.0], [24.0, 4223.0], [24.1, 4233.0], [24.2, 4235.0], [24.3, 4246.0], [24.4, 4251.0], [24.5, 4261.0], [24.6, 4278.0], [24.7, 4296.0], [24.8, 4323.0], [24.9, 4332.0], [25.0, 4387.0], [25.1, 4394.0], [25.2, 4408.0], [25.3, 4410.0], [25.4, 4414.0], [25.5, 4417.0], [25.6, 4427.0], [25.7, 4475.0], [25.8, 4477.0], [25.9, 4480.0], [26.0, 4481.0], [26.1, 4485.0], [26.2, 4503.0], [26.3, 4510.0], [26.4, 4516.0], [26.5, 4521.0], [26.6, 4528.0], [26.7, 4533.0], [26.8, 4541.0], [26.9, 4541.0], [27.0, 4557.0], [27.1, 4568.0], [27.2, 4599.0], [27.3, 4610.0], [27.4, 4625.0], [27.5, 4625.0], [27.6, 4634.0], [27.7, 4644.0], [27.8, 4645.0], [27.9, 4646.0], [28.0, 4648.0], [28.1, 4653.0], [28.2, 4666.0], [28.3, 4670.0], [28.4, 4692.0], [28.5, 4694.0], [28.6, 4697.0], [28.7, 4697.0], [28.8, 4714.0], [28.9, 4741.0], [29.0, 4743.0], [29.1, 4753.0], [29.2, 4753.0], [29.3, 4800.0], [29.4, 4800.0], [29.5, 4807.0], [29.6, 4836.0], [29.7, 4844.0], [29.8, 4845.0], [29.9, 4849.0], [30.0, 4855.0], [30.1, 4890.0], [30.2, 4929.0], [30.3, 4952.0], [30.4, 4977.0], [30.5, 4982.0], [30.6, 5008.0], [30.7, 5008.0], [30.8, 5039.0], [30.9, 5046.0], [31.0, 5049.0], [31.1, 5054.0], [31.2, 5064.0], [31.3, 5073.0], [31.4, 5079.0], [31.5, 5080.0], [31.6, 5102.0], [31.7, 5104.0], [31.8, 5119.0], [31.9, 5127.0], [32.0, 5144.0], [32.1, 5149.0], [32.2, 5150.0], [32.3, 5179.0], [32.4, 5180.0], [32.5, 5183.0], [32.6, 5195.0], [32.7, 5196.0], [32.8, 5216.0], [32.9, 5240.0], [33.0, 5245.0], [33.1, 5276.0], [33.2, 5284.0], [33.3, 5286.0], [33.4, 5286.0], [33.5, 5292.0], [33.6, 5301.0], [33.7, 5301.0], [33.8, 5301.0], [33.9, 5308.0], [34.0, 5309.0], [34.1, 5320.0], [34.2, 5326.0], [34.3, 5327.0], [34.4, 5332.0], [34.5, 5338.0], [34.6, 5340.0], [34.7, 5341.0], [34.8, 5343.0], [34.9, 5343.0], [35.0, 5360.0], [35.1, 5362.0], [35.2, 5370.0], [35.3, 5371.0], [35.4, 5375.0], [35.5, 5376.0], [35.6, 5382.0], [35.7, 5391.0], [35.8, 5396.0], [35.9, 5399.0], [36.0, 5410.0], [36.1, 5413.0], [36.2, 5418.0], [36.3, 5425.0], [36.4, 5427.0], [36.5, 5440.0], [36.6, 5442.0], [36.7, 5442.0], [36.8, 5445.0], [36.9, 5459.0], [37.0, 5467.0], [37.1, 5470.0], [37.2, 5474.0], [37.3, 5475.0], [37.4, 5483.0], [37.5, 5484.0], [37.6, 5486.0], [37.7, 5486.0], [37.8, 5499.0], [37.9, 5501.0], [38.0, 5507.0], [38.1, 5511.0], [38.2, 5513.0], [38.3, 5515.0], [38.4, 5517.0], [38.5, 5518.0], [38.6, 5520.0], [38.7, 5523.0], [38.8, 5529.0], [38.9, 5538.0], [39.0, 5542.0], [39.1, 5547.0], [39.2, 5548.0], [39.3, 5564.0], [39.4, 5567.0], [39.5, 5571.0], [39.6, 5571.0], [39.7, 5571.0], [39.8, 5572.0], [39.9, 5575.0], [40.0, 5576.0], [40.1, 5577.0], [40.2, 5582.0], [40.3, 5583.0], [40.4, 5587.0], [40.5, 5588.0], [40.6, 5594.0], [40.7, 5595.0], [40.8, 5596.0], [40.9, 5597.0], [41.0, 5597.0], [41.1, 5597.0], [41.2, 5606.0], [41.3, 5609.0], [41.4, 5614.0], [41.5, 5619.0], [41.6, 5626.0], [41.7, 5627.0], [41.8, 5633.0], [41.9, 5647.0], [42.0, 5647.0], [42.1, 5649.0], [42.2, 5652.0], [42.3, 5652.0], [42.4, 5659.0], [42.5, 5667.0], [42.6, 5670.0], [42.7, 5670.0], [42.8, 5684.0], [42.9, 5687.0], [43.0, 5693.0], [43.1, 5698.0], [43.2, 5699.0], [43.3, 5706.0], [43.4, 5708.0], [43.5, 5712.0], [43.6, 5734.0], [43.7, 5735.0], [43.8, 5742.0], [43.9, 5758.0], [44.0, 5765.0], [44.1, 5766.0], [44.2, 5768.0], [44.3, 5776.0], [44.4, 5785.0], [44.5, 5788.0], [44.6, 5788.0], [44.7, 5810.0], [44.8, 5827.0], [44.9, 5837.0], [45.0, 5838.0], [45.1, 5843.0], [45.2, 5846.0], [45.3, 5852.0], [45.4, 5860.0], [45.5, 5867.0], [45.6, 5870.0], [45.7, 5874.0], [45.8, 5875.0], [45.9, 5878.0], [46.0, 5904.0], [46.1, 5934.0], [46.2, 5945.0], [46.3, 5948.0], [46.4, 5949.0], [46.5, 5951.0], [46.6, 5953.0], [46.7, 5954.0], [46.8, 5966.0], [46.9, 5968.0], [47.0, 5981.0], [47.1, 5985.0], [47.2, 5990.0], [47.3, 5991.0], [47.4, 5991.0], [47.5, 5992.0], [47.6, 6011.0], [47.7, 6013.0], [47.8, 6033.0], [47.9, 6085.0], [48.0, 6107.0], [48.1, 6150.0], [48.2, 6160.0], [48.3, 6178.0], [48.4, 6211.0], [48.5, 6211.0], [48.6, 6218.0], [48.7, 6232.0], [48.8, 6232.0], [48.9, 6236.0], [49.0, 6241.0], [49.1, 6287.0], [49.2, 6299.0], [49.3, 6448.0], [49.4, 6479.0], [49.5, 6527.0], [49.6, 6530.0], [49.7, 6543.0], [49.8, 6553.0], [49.9, 6563.0], [50.0, 6564.0], [50.1, 6595.0], [50.2, 6616.0], [50.3, 6623.0], [50.4, 6624.0], [50.5, 6644.0], [50.6, 6652.0], [50.7, 6664.0], [50.8, 6681.0], [50.9, 6746.0], [51.0, 6760.0], [51.1, 6789.0], [51.2, 6826.0], [51.3, 6839.0], [51.4, 6844.0], [51.5, 6859.0], [51.6, 6882.0], [51.7, 6884.0], [51.8, 6885.0], [51.9, 6889.0], [52.0, 6892.0], [52.1, 6907.0], [52.2, 6909.0], [52.3, 6914.0], [52.4, 6948.0], [52.5, 6963.0], [52.6, 6970.0], [52.7, 6971.0], [52.8, 6974.0], [52.9, 6978.0], [53.0, 6982.0], [53.1, 6988.0], [53.2, 6994.0], [53.3, 6996.0], [53.4, 7000.0], [53.5, 7006.0], [53.6, 7016.0], [53.7, 7028.0], [53.8, 7043.0], [53.9, 7044.0], [54.0, 7062.0], [54.1, 7078.0], [54.2, 7088.0], [54.3, 7089.0], [54.4, 7089.0], [54.5, 7101.0], [54.6, 7115.0], [54.7, 7116.0], [54.8, 7132.0], [54.9, 7137.0], [55.0, 7147.0], [55.1, 7190.0], [55.2, 7195.0], [55.3, 7196.0], [55.4, 7200.0], [55.5, 7216.0], [55.6, 7233.0], [55.7, 7237.0], [55.8, 7245.0], [55.9, 7254.0], [56.0, 7255.0], [56.1, 7255.0], [56.2, 7263.0], [56.3, 7279.0], [56.4, 7282.0], [56.5, 7285.0], [56.6, 7290.0], [56.7, 7308.0], [56.8, 7313.0], [56.9, 7323.0], [57.0, 7340.0], [57.1, 7341.0], [57.2, 7342.0], [57.3, 7347.0], [57.4, 7352.0], [57.5, 7360.0], [57.6, 7370.0], [57.7, 7378.0], [57.8, 7379.0], [57.9, 7381.0], [58.0, 7383.0], [58.1, 7391.0], [58.2, 7391.0], [58.3, 7396.0], [58.4, 7419.0], [58.5, 7424.0], [58.6, 7424.0], [58.7, 7429.0], [58.8, 7433.0], [58.9, 7434.0], [59.0, 7437.0], [59.1, 7456.0], [59.2, 7459.0], [59.3, 7468.0], [59.4, 7475.0], [59.5, 7478.0], [59.6, 7482.0], [59.7, 7488.0], [59.8, 7490.0], [59.9, 7491.0], [60.0, 7503.0], [60.1, 7522.0], [60.2, 7527.0], [60.3, 7538.0], [60.4, 7540.0], [60.5, 7544.0], [60.6, 7559.0], [60.7, 7561.0], [60.8, 7570.0], [60.9, 7590.0], [61.0, 7594.0], [61.1, 7608.0], [61.2, 7614.0], [61.3, 7614.0], [61.4, 7617.0], [61.5, 7622.0], [61.6, 7624.0], [61.7, 7629.0], [61.8, 7631.0], [61.9, 7635.0], [62.0, 7642.0], [62.1, 7649.0], [62.2, 7650.0], [62.3, 7650.0], [62.4, 7654.0], [62.5, 7657.0], [62.6, 7657.0], [62.7, 7658.0], [62.8, 7662.0], [62.9, 7662.0], [63.0, 7665.0], [63.1, 7668.0], [63.2, 7669.0], [63.3, 7672.0], [63.4, 7674.0], [63.5, 7675.0], [63.6, 7679.0], [63.7, 7681.0], [63.8, 7681.0], [63.9, 7683.0], [64.0, 7689.0], [64.1, 7690.0], [64.2, 7706.0], [64.3, 7706.0], [64.4, 7713.0], [64.5, 7713.0], [64.6, 7714.0], [64.7, 7714.0], [64.8, 7717.0], [64.9, 7723.0], [65.0, 7726.0], [65.1, 7730.0], [65.2, 7731.0], [65.3, 7734.0], [65.4, 7735.0], [65.5, 7738.0], [65.6, 7738.0], [65.7, 7740.0], [65.8, 7741.0], [65.9, 7747.0], [66.0, 7747.0], [66.1, 7752.0], [66.2, 7752.0], [66.3, 7755.0], [66.4, 7758.0], [66.5, 7763.0], [66.6, 7765.0], [66.7, 7767.0], [66.8, 7769.0], [66.9, 7771.0], [67.0, 7776.0], [67.1, 7780.0], [67.2, 7782.0], [67.3, 7788.0], [67.4, 7794.0], [67.5, 7795.0], [67.6, 7797.0], [67.7, 7797.0], [67.8, 7804.0], [67.9, 7810.0], [68.0, 7820.0], [68.1, 7825.0], [68.2, 7827.0], [68.3, 7830.0], [68.4, 7838.0], [68.5, 7840.0], [68.6, 7842.0], [68.7, 7843.0], [68.8, 7844.0], [68.9, 7845.0], [69.0, 7858.0], [69.1, 7859.0], [69.2, 7861.0], [69.3, 7864.0], [69.4, 7869.0], [69.5, 7869.0], [69.6, 7870.0], [69.7, 7871.0], [69.8, 7872.0], [69.9, 7873.0], [70.0, 7880.0], [70.1, 7882.0], [70.2, 7883.0], [70.3, 7884.0], [70.4, 7892.0], [70.5, 7899.0], [70.6, 7903.0], [70.7, 7911.0], [70.8, 7921.0], [70.9, 7922.0], [71.0, 7923.0], [71.1, 7933.0], [71.2, 7940.0], [71.3, 7941.0], [71.4, 7943.0], [71.5, 7945.0], [71.6, 7951.0], [71.7, 7953.0], [71.8, 7957.0], [71.9, 7964.0], [72.0, 7969.0], [72.1, 7971.0], [72.2, 7972.0], [72.3, 7976.0], [72.4, 7978.0], [72.5, 7978.0], [72.6, 7984.0], [72.7, 7988.0], [72.8, 7989.0], [72.9, 7996.0], [73.0, 8002.0], [73.1, 8002.0], [73.2, 8002.0], [73.3, 8006.0], [73.4, 8007.0], [73.5, 8013.0], [73.6, 8015.0], [73.7, 8019.0], [73.8, 8019.0], [73.9, 8019.0], [74.0, 8019.0], [74.1, 8022.0], [74.2, 8030.0], [74.3, 8033.0], [74.4, 8035.0], [74.5, 8041.0], [74.6, 8049.0], [74.7, 8057.0], [74.8, 8061.0], [74.9, 8064.0], [75.0, 8066.0], [75.1, 8067.0], [75.2, 8069.0], [75.3, 8070.0], [75.4, 8081.0], [75.5, 8085.0], [75.6, 8092.0], [75.7, 8096.0], [75.8, 8112.0], [75.9, 8116.0], [76.0, 8119.0], [76.1, 8120.0], [76.2, 8122.0], [76.3, 8124.0], [76.4, 8124.0], [76.5, 8130.0], [76.6, 8130.0], [76.7, 8131.0], [76.8, 8138.0], [76.9, 8142.0], [77.0, 8143.0], [77.1, 8147.0], [77.2, 8152.0], [77.3, 8158.0], [77.4, 8160.0], [77.5, 8160.0], [77.6, 8166.0], [77.7, 8170.0], [77.8, 8179.0], [77.9, 8192.0], [78.0, 8194.0], [78.1, 8198.0], [78.2, 8204.0], [78.3, 8209.0], [78.4, 8216.0], [78.5, 8223.0], [78.6, 8226.0], [78.7, 8226.0], [78.8, 8229.0], [78.9, 8229.0], [79.0, 8233.0], [79.1, 8235.0], [79.2, 8237.0], [79.3, 8237.0], [79.4, 8237.0], [79.5, 8254.0], [79.6, 8263.0], [79.7, 8275.0], [79.8, 8282.0], [79.9, 8283.0], [80.0, 8285.0], [80.1, 8296.0], [80.2, 8303.0], [80.3, 8303.0], [80.4, 8303.0], [80.5, 8306.0], [80.6, 8318.0], [80.7, 8320.0], [80.8, 8321.0], [80.9, 8327.0], [81.0, 8331.0], [81.1, 8333.0], [81.2, 8334.0], [81.3, 8340.0], [81.4, 8346.0], [81.5, 8349.0], [81.6, 8358.0], [81.7, 8359.0], [81.8, 8365.0], [81.9, 8369.0], [82.0, 8381.0], [82.1, 8383.0], [82.2, 8385.0], [82.3, 8386.0], [82.4, 8387.0], [82.5, 8391.0], [82.6, 8391.0], [82.7, 8396.0], [82.8, 8406.0], [82.9, 8415.0], [83.0, 8417.0], [83.1, 8417.0], [83.2, 8418.0], [83.3, 8419.0], [83.4, 8420.0], [83.5, 8422.0], [83.6, 8427.0], [83.7, 8431.0], [83.8, 8432.0], [83.9, 8439.0], [84.0, 8444.0], [84.1, 8453.0], [84.2, 8455.0], [84.3, 8470.0], [84.4, 8475.0], [84.5, 8505.0], [84.6, 8508.0], [84.7, 8521.0], [84.8, 8544.0], [84.9, 8549.0], [85.0, 8554.0], [85.1, 8558.0], [85.2, 8565.0], [85.3, 8568.0], [85.4, 8569.0], [85.5, 8587.0], [85.6, 8607.0], [85.7, 8614.0], [85.8, 8672.0], [85.9, 8682.0], [86.0, 8688.0], [86.1, 8701.0], [86.2, 8814.0], [86.3, 8870.0], [86.4, 8881.0], [86.5, 9073.0], [86.6, 9242.0], [86.7, 9247.0], [86.8, 9348.0], [86.9, 9359.0], [87.0, 9688.0], [87.1, 11560.0], [87.2, 11960.0], [87.3, 11989.0], [87.4, 12235.0], [87.5, 12249.0], [87.6, 12272.0], [87.7, 12272.0], [87.8, 12284.0], [87.9, 12302.0], [88.0, 12314.0], [88.1, 12411.0], [88.2, 12417.0], [88.3, 12435.0], [88.4, 12464.0], [88.5, 12465.0], [88.6, 12466.0], [88.7, 12496.0], [88.8, 12512.0], [88.9, 12532.0], [89.0, 12558.0], [89.1, 12583.0], [89.2, 12597.0], [89.3, 12609.0], [89.4, 12646.0], [89.5, 12647.0], [89.6, 12658.0], [89.7, 12670.0], [89.8, 12720.0], [89.9, 12723.0], [90.0, 12738.0], [90.1, 12751.0], [90.2, 12806.0], [90.3, 12816.0], [90.4, 12826.0], [90.5, 12826.0], [90.6, 12832.0], [90.7, 12856.0], [90.8, 12864.0], [90.9, 12866.0], [91.0, 12869.0], [91.1, 12873.0], [91.2, 12874.0], [91.3, 12874.0], [91.4, 12875.0], [91.5, 12878.0], [91.6, 12881.0], [91.7, 12882.0], [91.8, 12891.0], [91.9, 12898.0], [92.0, 12898.0], [92.1, 12899.0], [92.2, 12900.0], [92.3, 12906.0], [92.4, 12909.0], [92.5, 12914.0], [92.6, 12917.0], [92.7, 12936.0], [92.8, 12944.0], [92.9, 12949.0], [93.0, 12952.0], [93.1, 12957.0], [93.2, 12958.0], [93.3, 12967.0], [93.4, 12969.0], [93.5, 12976.0], [93.6, 12979.0], [93.7, 12982.0], [93.8, 13000.0], [93.9, 13025.0], [94.0, 13055.0], [94.1, 13066.0], [94.2, 13069.0], [94.3, 13079.0], [94.4, 13086.0], [94.5, 13094.0], [94.6, 13108.0], [94.7, 13109.0], [94.8, 13119.0], [94.9, 13136.0], [95.0, 13138.0], [95.1, 13151.0], [95.2, 13155.0], [95.3, 13181.0], [95.4, 13194.0], [95.5, 13201.0], [95.6, 13202.0], [95.7, 13209.0], [95.8, 13237.0], [95.9, 13242.0], [96.0, 13265.0], [96.1, 13267.0], [96.2, 13267.0], [96.3, 13271.0], [96.4, 13289.0], [96.5, 13293.0], [96.6, 13298.0], [96.7, 13308.0], [96.8, 13329.0], [96.9, 13332.0], [97.0, 13338.0], [97.1, 13345.0], [97.2, 13361.0], [97.3, 13365.0], [97.4, 13373.0], [97.5, 13389.0], [97.6, 13449.0], [97.7, 13450.0], [97.8, 13454.0], [97.9, 13455.0], [98.0, 13462.0], [98.1, 13467.0], [98.2, 13552.0], [98.3, 13558.0], [98.4, 13561.0], [98.5, 13562.0], [98.6, 13569.0], [98.7, 13603.0], [98.8, 13604.0], [98.9, 13605.0], [99.0, 13646.0], [99.1, 13720.0], [99.2, 13747.0], [99.3, 13813.0], [99.4, 14214.0], [99.5, 14325.0], [99.6, 14515.0], [99.7, 14829.0], [99.8, 15034.0], [99.9, 22575.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[0.0, 274.0], [0.1, 275.0], [0.2, 276.0], [0.3, 276.0], [0.4, 277.0], [0.5, 277.0], [0.6, 277.0], [0.7, 277.0], [0.8, 277.0], [0.9, 278.0], [1.0, 278.0], [1.1, 278.0], [1.2, 278.0], [1.3, 279.0], [1.4, 279.0], [1.5, 279.0], [1.6, 279.0], [1.7, 279.0], [1.8, 280.0], [1.9, 280.0], [2.0, 280.0], [2.1, 280.0], [2.2, 280.0], [2.3, 280.0], [2.4, 280.0], [2.5, 280.0], [2.6, 280.0], [2.7, 280.0], [2.8, 280.0], [2.9, 280.0], [3.0, 281.0], [3.1, 281.0], [3.2, 281.0], [3.3, 281.0], [3.4, 281.0], [3.5, 281.0], [3.6, 281.0], [3.7, 281.0], [3.8, 281.0], [3.9, 282.0], [4.0, 282.0], [4.1, 282.0], [4.2, 282.0], [4.3, 282.0], [4.4, 282.0], [4.5, 282.0], [4.6, 282.0], [4.7, 282.0], [4.8, 282.0], [4.9, 282.0], [5.0, 282.0], [5.1, 282.0], [5.2, 283.0], [5.3, 283.0], [5.4, 283.0], [5.5, 283.0], [5.6, 283.0], [5.7, 283.0], [5.8, 283.0], [5.9, 283.0], [6.0, 283.0], [6.1, 283.0], [6.2, 283.0], [6.3, 283.0], [6.4, 284.0], [6.5, 284.0], [6.6, 284.0], [6.7, 284.0], [6.8, 284.0], [6.9, 284.0], [7.0, 284.0], [7.1, 284.0], [7.2, 284.0], [7.3, 284.0], [7.4, 284.0], [7.5, 284.0], [7.6, 284.0], [7.7, 284.0], [7.8, 285.0], [7.9, 285.0], [8.0, 285.0], [8.1, 285.0], [8.2, 285.0], [8.3, 285.0], [8.4, 285.0], [8.5, 285.0], [8.6, 285.0], [8.7, 285.0], [8.8, 286.0], [8.9, 286.0], [9.0, 286.0], [9.1, 286.0], [9.2, 286.0], [9.3, 286.0], [9.4, 286.0], [9.5, 286.0], [9.6, 286.0], [9.7, 286.0], [9.8, 286.0], [9.9, 286.0], [10.0, 286.0], [10.1, 286.0], [10.2, 286.0], [10.3, 286.0], [10.4, 286.0], [10.5, 286.0], [10.6, 286.0], [10.7, 286.0], [10.8, 286.0], [10.9, 287.0], [11.0, 287.0], [11.1, 287.0], [11.2, 287.0], [11.3, 287.0], [11.4, 287.0], [11.5, 287.0], [11.6, 287.0], [11.7, 287.0], [11.8, 287.0], [11.9, 287.0], [12.0, 287.0], [12.1, 287.0], [12.2, 287.0], [12.3, 288.0], [12.4, 288.0], [12.5, 288.0], [12.6, 288.0], [12.7, 288.0], [12.8, 288.0], [12.9, 288.0], [13.0, 288.0], [13.1, 288.0], [13.2, 288.0], [13.3, 288.0], [13.4, 288.0], [13.5, 288.0], [13.6, 288.0], [13.7, 288.0], [13.8, 288.0], [13.9, 289.0], [14.0, 289.0], [14.1, 289.0], [14.2, 289.0], [14.3, 289.0], [14.4, 289.0], [14.5, 289.0], [14.6, 289.0], [14.7, 289.0], [14.8, 289.0], [14.9, 289.0], [15.0, 289.0], [15.1, 289.0], [15.2, 289.0], [15.3, 289.0], [15.4, 289.0], [15.5, 289.0], [15.6, 290.0], [15.7, 290.0], [15.8, 290.0], [15.9, 290.0], [16.0, 290.0], [16.1, 290.0], [16.2, 290.0], [16.3, 290.0], [16.4, 290.0], [16.5, 290.0], [16.6, 290.0], [16.7, 290.0], [16.8, 290.0], [16.9, 290.0], [17.0, 290.0], [17.1, 290.0], [17.2, 290.0], [17.3, 290.0], [17.4, 290.0], [17.5, 290.0], [17.6, 291.0], [17.7, 291.0], [17.8, 291.0], [17.9, 291.0], [18.0, 291.0], [18.1, 291.0], [18.2, 291.0], [18.3, 291.0], [18.4, 291.0], [18.5, 291.0], [18.6, 291.0], [18.7, 291.0], [18.8, 292.0], [18.9, 292.0], [19.0, 292.0], [19.1, 292.0], [19.2, 292.0], [19.3, 292.0], [19.4, 292.0], [19.5, 292.0], [19.6, 292.0], [19.7, 292.0], [19.8, 292.0], [19.9, 292.0], [20.0, 292.0], [20.1, 292.0], [20.2, 292.0], [20.3, 292.0], [20.4, 292.0], [20.5, 292.0], [20.6, 292.0], [20.7, 292.0], [20.8, 293.0], [20.9, 293.0], [21.0, 293.0], [21.1, 293.0], [21.2, 293.0], [21.3, 293.0], [21.4, 293.0], [21.5, 293.0], [21.6, 293.0], [21.7, 293.0], [21.8, 293.0], [21.9, 293.0], [22.0, 293.0], [22.1, 294.0], [22.2, 294.0], [22.3, 294.0], [22.4, 294.0], [22.5, 294.0], [22.6, 294.0], [22.7, 294.0], [22.8, 294.0], [22.9, 294.0], [23.0, 294.0], [23.1, 294.0], [23.2, 294.0], [23.3, 294.0], [23.4, 294.0], [23.5, 294.0], [23.6, 295.0], [23.7, 295.0], [23.8, 295.0], [23.9, 295.0], [24.0, 295.0], [24.1, 295.0], [24.2, 295.0], [24.3, 295.0], [24.4, 295.0], [24.5, 295.0], [24.6, 295.0], [24.7, 295.0], [24.8, 295.0], [24.9, 295.0], [25.0, 295.0], [25.1, 295.0], [25.2, 295.0], [25.3, 296.0], [25.4, 296.0], [25.5, 296.0], [25.6, 296.0], [25.7, 296.0], [25.8, 296.0], [25.9, 296.0], [26.0, 296.0], [26.1, 296.0], [26.2, 296.0], [26.3, 296.0], [26.4, 297.0], [26.5, 297.0], [26.6, 297.0], [26.7, 297.0], [26.8, 297.0], [26.9, 297.0], [27.0, 297.0], [27.1, 297.0], [27.2, 297.0], [27.3, 297.0], [27.4, 297.0], [27.5, 297.0], [27.6, 297.0], [27.7, 297.0], [27.8, 297.0], [27.9, 297.0], [28.0, 297.0], [28.1, 297.0], [28.2, 297.0], [28.3, 298.0], [28.4, 298.0], [28.5, 298.0], [28.6, 298.0], [28.7, 298.0], [28.8, 298.0], [28.9, 298.0], [29.0, 298.0], [29.1, 298.0], [29.2, 298.0], [29.3, 298.0], [29.4, 298.0], [29.5, 298.0], [29.6, 298.0], [29.7, 298.0], [29.8, 299.0], [29.9, 299.0], [30.0, 299.0], [30.1, 299.0], [30.2, 299.0], [30.3, 300.0], [30.4, 300.0], [30.5, 300.0], [30.6, 300.0], [30.7, 300.0], [30.8, 301.0], [30.9, 301.0], [31.0, 301.0], [31.1, 301.0], [31.2, 301.0], [31.3, 301.0], [31.4, 301.0], [31.5, 301.0], [31.6, 301.0], [31.7, 301.0], [31.8, 301.0], [31.9, 301.0], [32.0, 302.0], [32.1, 302.0], [32.2, 302.0], [32.3, 302.0], [32.4, 302.0], [32.5, 302.0], [32.6, 302.0], [32.7, 302.0], [32.8, 302.0], [32.9, 302.0], [33.0, 302.0], [33.1, 303.0], [33.2, 303.0], [33.3, 303.0], [33.4, 303.0], [33.5, 303.0], [33.6, 303.0], [33.7, 303.0], [33.8, 303.0], [33.9, 304.0], [34.0, 304.0], [34.1, 304.0], [34.2, 304.0], [34.3, 304.0], [34.4, 304.0], [34.5, 305.0], [34.6, 305.0], [34.7, 305.0], [34.8, 305.0], [34.9, 305.0], [35.0, 305.0], [35.1, 305.0], [35.2, 305.0], [35.3, 305.0], [35.4, 306.0], [35.5, 306.0], [35.6, 306.0], [35.7, 306.0], [35.8, 306.0], [35.9, 306.0], [36.0, 306.0], [36.1, 306.0], [36.2, 307.0], [36.3, 307.0], [36.4, 307.0], [36.5, 307.0], [36.6, 307.0], [36.7, 308.0], [36.8, 308.0], [36.9, 308.0], [37.0, 308.0], [37.1, 308.0], [37.2, 308.0], [37.3, 309.0], [37.4, 309.0], [37.5, 309.0], [37.6, 309.0], [37.7, 309.0], [37.8, 310.0], [37.9, 310.0], [38.0, 310.0], [38.1, 310.0], [38.2, 310.0], [38.3, 310.0], [38.4, 310.0], [38.5, 310.0], [38.6, 310.0], [38.7, 310.0], [38.8, 311.0], [38.9, 311.0], [39.0, 311.0], [39.1, 311.0], [39.2, 311.0], [39.3, 312.0], [39.4, 312.0], [39.5, 312.0], [39.6, 312.0], [39.7, 312.0], [39.8, 312.0], [39.9, 313.0], [40.0, 313.0], [40.1, 313.0], [40.2, 313.0], [40.3, 313.0], [40.4, 313.0], [40.5, 313.0], [40.6, 314.0], [40.7, 314.0], [40.8, 314.0], [40.9, 314.0], [41.0, 314.0], [41.1, 315.0], [41.2, 315.0], [41.3, 315.0], [41.4, 316.0], [41.5, 316.0], [41.6, 316.0], [41.7, 316.0], [41.8, 316.0], [41.9, 317.0], [42.0, 317.0], [42.1, 317.0], [42.2, 317.0], [42.3, 317.0], [42.4, 317.0], [42.5, 317.0], [42.6, 318.0], [42.7, 318.0], [42.8, 318.0], [42.9, 318.0], [43.0, 318.0], [43.1, 318.0], [43.2, 318.0], [43.3, 318.0], [43.4, 318.0], [43.5, 318.0], [43.6, 319.0], [43.7, 319.0], [43.8, 319.0], [43.9, 319.0], [44.0, 319.0], [44.1, 319.0], [44.2, 319.0], [44.3, 319.0], [44.4, 319.0], [44.5, 320.0], [44.6, 320.0], [44.7, 320.0], [44.8, 320.0], [44.9, 320.0], [45.0, 320.0], [45.1, 320.0], [45.2, 320.0], [45.3, 321.0], [45.4, 321.0], [45.5, 321.0], [45.6, 322.0], [45.7, 322.0], [45.8, 322.0], [45.9, 322.0], [46.0, 322.0], [46.1, 323.0], [46.2, 323.0], [46.3, 323.0], [46.4, 323.0], [46.5, 323.0], [46.6, 323.0], [46.7, 323.0], [46.8, 323.0], [46.9, 323.0], [47.0, 324.0], [47.1, 324.0], [47.2, 324.0], [47.3, 324.0], [47.4, 325.0], [47.5, 325.0], [47.6, 325.0], [47.7, 325.0], [47.8, 326.0], [47.9, 326.0], [48.0, 326.0], [48.1, 326.0], [48.2, 326.0], [48.3, 326.0], [48.4, 326.0], [48.5, 326.0], [48.6, 326.0], [48.7, 326.0], [48.8, 326.0], [48.9, 326.0], [49.0, 326.0], [49.1, 327.0], [49.2, 327.0], [49.3, 327.0], [49.4, 327.0], [49.5, 327.0], [49.6, 328.0], [49.7, 328.0], [49.8, 328.0], [49.9, 328.0], [50.0, 328.0], [50.1, 328.0], [50.2, 328.0], [50.3, 328.0], [50.4, 328.0], [50.5, 329.0], [50.6, 329.0], [50.7, 329.0], [50.8, 329.0], [50.9, 329.0], [51.0, 329.0], [51.1, 329.0], [51.2, 330.0], [51.3, 330.0], [51.4, 330.0], [51.5, 330.0], [51.6, 330.0], [51.7, 331.0], [51.8, 331.0], [51.9, 331.0], [52.0, 331.0], [52.1, 331.0], [52.2, 331.0], [52.3, 332.0], [52.4, 332.0], [52.5, 332.0], [52.6, 332.0], [52.7, 332.0], [52.8, 332.0], [52.9, 333.0], [53.0, 333.0], [53.1, 333.0], [53.2, 333.0], [53.3, 334.0], [53.4, 334.0], [53.5, 334.0], [53.6, 334.0], [53.7, 334.0], [53.8, 334.0], [53.9, 334.0], [54.0, 334.0], [54.1, 335.0], [54.2, 335.0], [54.3, 335.0], [54.4, 335.0], [54.5, 335.0], [54.6, 335.0], [54.7, 335.0], [54.8, 335.0], [54.9, 335.0], [55.0, 335.0], [55.1, 335.0], [55.2, 335.0], [55.3, 336.0], [55.4, 336.0], [55.5, 336.0], [55.6, 336.0], [55.7, 336.0], [55.8, 336.0], [55.9, 336.0], [56.0, 337.0], [56.1, 337.0], [56.2, 337.0], [56.3, 337.0], [56.4, 337.0], [56.5, 337.0], [56.6, 337.0], [56.7, 337.0], [56.8, 337.0], [56.9, 337.0], [57.0, 337.0], [57.1, 337.0], [57.2, 337.0], [57.3, 338.0], [57.4, 338.0], [57.5, 338.0], [57.6, 338.0], [57.7, 338.0], [57.8, 338.0], [57.9, 338.0], [58.0, 338.0], [58.1, 338.0], [58.2, 339.0], [58.3, 339.0], [58.4, 339.0], [58.5, 339.0], [58.6, 339.0], [58.7, 339.0], [58.8, 339.0], [58.9, 339.0], [59.0, 341.0], [59.1, 341.0], [59.2, 341.0], [59.3, 341.0], [59.4, 341.0], [59.5, 341.0], [59.6, 341.0], [59.7, 341.0], [59.8, 342.0], [59.9, 342.0], [60.0, 342.0], [60.1, 342.0], [60.2, 342.0], [60.3, 343.0], [60.4, 343.0], [60.5, 343.0], [60.6, 343.0], [60.7, 343.0], [60.8, 344.0], [60.9, 344.0], [61.0, 344.0], [61.1, 344.0], [61.2, 344.0], [61.3, 344.0], [61.4, 344.0], [61.5, 345.0], [61.6, 345.0], [61.7, 345.0], [61.8, 345.0], [61.9, 345.0], [62.0, 345.0], [62.1, 346.0], [62.2, 346.0], [62.3, 346.0], [62.4, 346.0], [62.5, 346.0], [62.6, 346.0], [62.7, 346.0], [62.8, 346.0], [62.9, 347.0], [63.0, 347.0], [63.1, 347.0], [63.2, 347.0], [63.3, 348.0], [63.4, 348.0], [63.5, 348.0], [63.6, 348.0], [63.7, 348.0], [63.8, 348.0], [63.9, 348.0], [64.0, 348.0], [64.1, 349.0], [64.2, 349.0], [64.3, 349.0], [64.4, 349.0], [64.5, 349.0], [64.6, 349.0], [64.7, 349.0], [64.8, 349.0], [64.9, 350.0], [65.0, 350.0], [65.1, 350.0], [65.2, 350.0], [65.3, 350.0], [65.4, 350.0], [65.5, 350.0], [65.6, 350.0], [65.7, 350.0], [65.8, 351.0], [65.9, 351.0], [66.0, 351.0], [66.1, 351.0], [66.2, 351.0], [66.3, 352.0], [66.4, 352.0], [66.5, 352.0], [66.6, 352.0], [66.7, 352.0], [66.8, 352.0], [66.9, 352.0], [67.0, 352.0], [67.1, 352.0], [67.2, 353.0], [67.3, 353.0], [67.4, 353.0], [67.5, 353.0], [67.6, 353.0], [67.7, 353.0], [67.8, 353.0], [67.9, 353.0], [68.0, 353.0], [68.1, 353.0], [68.2, 354.0], [68.3, 354.0], [68.4, 354.0], [68.5, 355.0], [68.6, 355.0], [68.7, 355.0], [68.8, 355.0], [68.9, 355.0], [69.0, 355.0], [69.1, 355.0], [69.2, 355.0], [69.3, 355.0], [69.4, 355.0], [69.5, 356.0], [69.6, 356.0], [69.7, 356.0], [69.8, 356.0], [69.9, 356.0], [70.0, 357.0], [70.1, 357.0], [70.2, 357.0], [70.3, 357.0], [70.4, 357.0], [70.5, 357.0], [70.6, 357.0], [70.7, 358.0], [70.8, 358.0], [70.9, 358.0], [71.0, 358.0], [71.1, 358.0], [71.2, 358.0], [71.3, 359.0], [71.4, 359.0], [71.5, 359.0], [71.6, 360.0], [71.7, 360.0], [71.8, 360.0], [71.9, 360.0], [72.0, 360.0], [72.1, 360.0], [72.2, 360.0], [72.3, 361.0], [72.4, 361.0], [72.5, 361.0], [72.6, 361.0], [72.7, 361.0], [72.8, 361.0], [72.9, 361.0], [73.0, 362.0], [73.1, 362.0], [73.2, 363.0], [73.3, 363.0], [73.4, 363.0], [73.5, 363.0], [73.6, 363.0], [73.7, 364.0], [73.8, 365.0], [73.9, 365.0], [74.0, 365.0], [74.1, 365.0], [74.2, 365.0], [74.3, 365.0], [74.4, 366.0], [74.5, 366.0], [74.6, 366.0], [74.7, 366.0], [74.8, 366.0], [74.9, 366.0], [75.0, 367.0], [75.1, 367.0], [75.2, 367.0], [75.3, 367.0], [75.4, 367.0], [75.5, 368.0], [75.6, 368.0], [75.7, 369.0], [75.8, 369.0], [75.9, 369.0], [76.0, 370.0], [76.1, 370.0], [76.2, 370.0], [76.3, 371.0], [76.4, 371.0], [76.5, 371.0], [76.6, 372.0], [76.7, 372.0], [76.8, 374.0], [76.9, 374.0], [77.0, 376.0], [77.1, 376.0], [77.2, 378.0], [77.3, 379.0], [77.4, 379.0], [77.5, 379.0], [77.6, 379.0], [77.7, 380.0], [77.8, 381.0], [77.9, 381.0], [78.0, 382.0], [78.1, 382.0], [78.2, 384.0], [78.3, 384.0], [78.4, 385.0], [78.5, 385.0], [78.6, 386.0], [78.7, 387.0], [78.8, 389.0], [78.9, 390.0], [79.0, 391.0], [79.1, 391.0], [79.2, 392.0], [79.3, 392.0], [79.4, 392.0], [79.5, 393.0], [79.6, 393.0], [79.7, 394.0], [79.8, 394.0], [79.9, 395.0], [80.0, 395.0], [80.1, 400.0], [80.2, 401.0], [80.3, 401.0], [80.4, 401.0], [80.5, 402.0], [80.6, 403.0], [80.7, 403.0], [80.8, 404.0], [80.9, 406.0], [81.0, 406.0], [81.1, 408.0], [81.2, 409.0], [81.3, 409.0], [81.4, 409.0], [81.5, 410.0], [81.6, 411.0], [81.7, 412.0], [81.8, 412.0], [81.9, 412.0], [82.0, 412.0], [82.1, 413.0], [82.2, 413.0], [82.3, 413.0], [82.4, 413.0], [82.5, 414.0], [82.6, 414.0], [82.7, 415.0], [82.8, 415.0], [82.9, 415.0], [83.0, 415.0], [83.1, 416.0], [83.2, 416.0], [83.3, 417.0], [83.4, 420.0], [83.5, 421.0], [83.6, 421.0], [83.7, 422.0], [83.8, 422.0], [83.9, 423.0], [84.0, 424.0], [84.1, 424.0], [84.2, 426.0], [84.3, 426.0], [84.4, 426.0], [84.5, 427.0], [84.6, 427.0], [84.7, 428.0], [84.8, 428.0], [84.9, 428.0], [85.0, 430.0], [85.1, 430.0], [85.2, 430.0], [85.3, 431.0], [85.4, 431.0], [85.5, 431.0], [85.6, 433.0], [85.7, 433.0], [85.8, 433.0], [85.9, 434.0], [86.0, 434.0], [86.1, 434.0], [86.2, 434.0], [86.3, 434.0], [86.4, 436.0], [86.5, 436.0], [86.6, 437.0], [86.7, 437.0], [86.8, 437.0], [86.9, 437.0], [87.0, 438.0], [87.1, 438.0], [87.2, 438.0], [87.3, 439.0], [87.4, 439.0], [87.5, 439.0], [87.6, 440.0], [87.7, 440.0], [87.8, 440.0], [87.9, 440.0], [88.0, 441.0], [88.1, 442.0], [88.2, 442.0], [88.3, 442.0], [88.4, 443.0], [88.5, 443.0], [88.6, 443.0], [88.7, 444.0], [88.8, 444.0], [88.9, 444.0], [89.0, 444.0], [89.1, 444.0], [89.2, 445.0], [89.3, 445.0], [89.4, 445.0], [89.5, 446.0], [89.6, 446.0], [89.7, 446.0], [89.8, 447.0], [89.9, 448.0], [90.0, 448.0], [90.1, 448.0], [90.2, 449.0], [90.3, 449.0], [90.4, 449.0], [90.5, 450.0], [90.6, 450.0], [90.7, 450.0], [90.8, 450.0], [90.9, 450.0], [91.0, 450.0], [91.1, 451.0], [91.2, 451.0], [91.3, 451.0], [91.4, 451.0], [91.5, 451.0], [91.6, 452.0], [91.7, 452.0], [91.8, 452.0], [91.9, 452.0], [92.0, 453.0], [92.1, 454.0], [92.2, 454.0], [92.3, 454.0], [92.4, 454.0], [92.5, 454.0], [92.6, 454.0], [92.7, 455.0], [92.8, 455.0], [92.9, 457.0], [93.0, 457.0], [93.1, 458.0], [93.2, 459.0], [93.3, 459.0], [93.4, 459.0], [93.5, 459.0], [93.6, 460.0], [93.7, 460.0], [93.8, 460.0], [93.9, 461.0], [94.0, 461.0], [94.1, 462.0], [94.2, 462.0], [94.3, 464.0], [94.4, 465.0], [94.5, 465.0], [94.6, 469.0], [94.7, 469.0], [94.8, 469.0], [94.9, 470.0], [95.0, 470.0], [95.1, 470.0], [95.2, 471.0], [95.3, 471.0], [95.4, 474.0], [95.5, 477.0], [95.6, 964.0], [95.7, 986.0], [95.8, 1067.0], [95.9, 1075.0], [96.0, 1077.0], [96.1, 1088.0], [96.2, 1103.0], [96.3, 1110.0], [96.4, 1111.0], [96.5, 1124.0], [96.6, 1131.0], [96.7, 1134.0], [96.8, 1141.0], [96.9, 1144.0], [97.0, 1151.0], [97.1, 1153.0], [97.2, 1157.0], [97.3, 1158.0], [97.4, 1160.0], [97.5, 1173.0], [97.6, 1181.0], [97.7, 1183.0], [97.8, 1185.0], [97.9, 1185.0], [98.0, 1187.0], [98.1, 1200.0], [98.2, 1201.0], [98.3, 1214.0], [98.4, 1218.0], [98.5, 1222.0], [98.6, 1260.0], [98.7, 1264.0], [98.8, 1315.0], [98.9, 1318.0], [99.0, 1319.0], [99.1, 1320.0], [99.2, 1322.0], [99.3, 1323.0], [99.4, 1327.0], [99.5, 1385.0], [99.6, 1471.0], [99.7, 1795.0], [99.8, 1798.0], [99.9, 1990.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[0.0, 271.0], [0.1, 272.0], [0.2, 273.0], [0.3, 273.0], [0.4, 273.0], [0.5, 274.0], [0.6, 274.0], [0.7, 275.0], [0.8, 275.0], [0.9, 275.0], [1.0, 275.0], [1.1, 275.0], [1.2, 275.0], [1.3, 275.0], [1.4, 275.0], [1.5, 275.0], [1.6, 276.0], [1.7, 276.0], [1.8, 276.0], [1.9, 276.0], [2.0, 276.0], [2.1, 276.0], [2.2, 277.0], [2.3, 277.0], [2.4, 277.0], [2.5, 277.0], [2.6, 277.0], [2.7, 277.0], [2.8, 277.0], [2.9, 277.0], [3.0, 278.0], [3.1, 278.0], [3.2, 278.0], [3.3, 278.0], [3.4, 278.0], [3.5, 278.0], [3.6, 278.0], [3.7, 279.0], [3.8, 279.0], [3.9, 279.0], [4.0, 279.0], [4.1, 279.0], [4.2, 279.0], [4.3, 279.0], [4.4, 279.0], [4.5, 279.0], [4.6, 279.0], [4.7, 279.0], [4.8, 279.0], [4.9, 279.0], [5.0, 279.0], [5.1, 279.0], [5.2, 279.0], [5.3, 279.0], [5.4, 279.0], [5.5, 279.0], [5.6, 279.0], [5.7, 279.0], [5.8, 279.0], [5.9, 279.0], [6.0, 279.0], [6.1, 279.0], [6.2, 279.0], [6.3, 279.0], [6.4, 280.0], [6.5, 280.0], [6.6, 280.0], [6.7, 280.0], [6.8, 280.0], [6.9, 280.0], [7.0, 280.0], [7.1, 280.0], [7.2, 280.0], [7.3, 280.0], [7.4, 280.0], [7.5, 280.0], [7.6, 280.0], [7.7, 280.0], [7.8, 280.0], [7.9, 280.0], [8.0, 280.0], [8.1, 280.0], [8.2, 280.0], [8.3, 281.0], [8.4, 281.0], [8.5, 281.0], [8.6, 281.0], [8.7, 281.0], [8.8, 281.0], [8.9, 281.0], [9.0, 281.0], [9.1, 281.0], [9.2, 281.0], [9.3, 281.0], [9.4, 281.0], [9.5, 281.0], [9.6, 281.0], [9.7, 282.0], [9.8, 282.0], [9.9, 282.0], [10.0, 282.0], [10.1, 282.0], [10.2, 282.0], [10.3, 282.0], [10.4, 282.0], [10.5, 282.0], [10.6, 282.0], [10.7, 282.0], [10.8, 283.0], [10.9, 283.0], [11.0, 283.0], [11.1, 283.0], [11.2, 283.0], [11.3, 283.0], [11.4, 283.0], [11.5, 283.0], [11.6, 283.0], [11.7, 283.0], [11.8, 283.0], [11.9, 283.0], [12.0, 283.0], [12.1, 283.0], [12.2, 283.0], [12.3, 283.0], [12.4, 283.0], [12.5, 283.0], [12.6, 283.0], [12.7, 283.0], [12.8, 283.0], [12.9, 283.0], [13.0, 283.0], [13.1, 283.0], [13.2, 283.0], [13.3, 284.0], [13.4, 284.0], [13.5, 284.0], [13.6, 284.0], [13.7, 284.0], [13.8, 284.0], [13.9, 284.0], [14.0, 284.0], [14.1, 284.0], [14.2, 284.0], [14.3, 284.0], [14.4, 284.0], [14.5, 284.0], [14.6, 284.0], [14.7, 284.0], [14.8, 284.0], [14.9, 284.0], [15.0, 284.0], [15.1, 284.0], [15.2, 284.0], [15.3, 285.0], [15.4, 285.0], [15.5, 285.0], [15.6, 285.0], [15.7, 285.0], [15.8, 285.0], [15.9, 285.0], [16.0, 285.0], [16.1, 285.0], [16.2, 285.0], [16.3, 285.0], [16.4, 285.0], [16.5, 285.0], [16.6, 285.0], [16.7, 285.0], [16.8, 285.0], [16.9, 285.0], [17.0, 285.0], [17.1, 285.0], [17.2, 285.0], [17.3, 285.0], [17.4, 285.0], [17.5, 285.0], [17.6, 285.0], [17.7, 285.0], [17.8, 285.0], [17.9, 285.0], [18.0, 285.0], [18.1, 286.0], [18.2, 286.0], [18.3, 286.0], [18.4, 286.0], [18.5, 286.0], [18.6, 286.0], [18.7, 286.0], [18.8, 286.0], [18.9, 286.0], [19.0, 286.0], [19.1, 286.0], [19.2, 286.0], [19.3, 286.0], [19.4, 286.0], [19.5, 286.0], [19.6, 287.0], [19.7, 287.0], [19.8, 287.0], [19.9, 287.0], [20.0, 287.0], [20.1, 287.0], [20.2, 287.0], [20.3, 287.0], [20.4, 287.0], [20.5, 287.0], [20.6, 287.0], [20.7, 287.0], [20.8, 287.0], [20.9, 287.0], [21.0, 287.0], [21.1, 287.0], [21.2, 287.0], [21.3, 288.0], [21.4, 288.0], [21.5, 288.0], [21.6, 288.0], [21.7, 288.0], [21.8, 288.0], [21.9, 288.0], [22.0, 288.0], [22.1, 288.0], [22.2, 288.0], [22.3, 288.0], [22.4, 288.0], [22.5, 288.0], [22.6, 288.0], [22.7, 288.0], [22.8, 288.0], [22.9, 288.0], [23.0, 288.0], [23.1, 289.0], [23.2, 289.0], [23.3, 289.0], [23.4, 289.0], [23.5, 289.0], [23.6, 289.0], [23.7, 289.0], [23.8, 289.0], [23.9, 289.0], [24.0, 289.0], [24.1, 289.0], [24.2, 289.0], [24.3, 289.0], [24.4, 289.0], [24.5, 290.0], [24.6, 290.0], [24.7, 290.0], [24.8, 290.0], [24.9, 290.0], [25.0, 290.0], [25.1, 290.0], [25.2, 290.0], [25.3, 290.0], [25.4, 290.0], [25.5, 290.0], [25.6, 291.0], [25.7, 291.0], [25.8, 291.0], [25.9, 291.0], [26.0, 291.0], [26.1, 291.0], [26.2, 291.0], [26.3, 292.0], [26.4, 292.0], [26.5, 292.0], [26.6, 292.0], [26.7, 292.0], [26.8, 292.0], [26.9, 292.0], [27.0, 292.0], [27.1, 292.0], [27.2, 292.0], [27.3, 292.0], [27.4, 292.0], [27.5, 292.0], [27.6, 292.0], [27.7, 292.0], [27.8, 292.0], [27.9, 292.0], [28.0, 293.0], [28.1, 293.0], [28.2, 293.0], [28.3, 293.0], [28.4, 293.0], [28.5, 293.0], [28.6, 293.0], [28.7, 293.0], [28.8, 293.0], [28.9, 293.0], [29.0, 293.0], [29.1, 293.0], [29.2, 293.0], [29.3, 293.0], [29.4, 293.0], [29.5, 293.0], [29.6, 293.0], [29.7, 293.0], [29.8, 293.0], [29.9, 293.0], [30.0, 294.0], [30.1, 294.0], [30.2, 294.0], [30.3, 294.0], [30.4, 294.0], [30.5, 294.0], [30.6, 294.0], [30.7, 294.0], [30.8, 294.0], [30.9, 294.0], [31.0, 294.0], [31.1, 295.0], [31.2, 295.0], [31.3, 295.0], [31.4, 295.0], [31.5, 295.0], [31.6, 295.0], [31.7, 295.0], [31.8, 295.0], [31.9, 295.0], [32.0, 296.0], [32.1, 296.0], [32.2, 296.0], [32.3, 296.0], [32.4, 296.0], [32.5, 296.0], [32.6, 296.0], [32.7, 296.0], [32.8, 296.0], [32.9, 296.0], [33.0, 296.0], [33.1, 297.0], [33.2, 297.0], [33.3, 297.0], [33.4, 297.0], [33.5, 297.0], [33.6, 297.0], [33.7, 297.0], [33.8, 297.0], [33.9, 297.0], [34.0, 297.0], [34.1, 297.0], [34.2, 297.0], [34.3, 297.0], [34.4, 298.0], [34.5, 298.0], [34.6, 298.0], [34.7, 298.0], [34.8, 298.0], [34.9, 298.0], [35.0, 298.0], [35.1, 298.0], [35.2, 299.0], [35.3, 299.0], [35.4, 299.0], [35.5, 299.0], [35.6, 299.0], [35.7, 299.0], [35.8, 299.0], [35.9, 299.0], [36.0, 299.0], [36.1, 299.0], [36.2, 300.0], [36.3, 300.0], [36.4, 300.0], [36.5, 300.0], [36.6, 300.0], [36.7, 300.0], [36.8, 300.0], [36.9, 300.0], [37.0, 300.0], [37.1, 300.0], [37.2, 301.0], [37.3, 301.0], [37.4, 301.0], [37.5, 301.0], [37.6, 301.0], [37.7, 301.0], [37.8, 301.0], [37.9, 301.0], [38.0, 301.0], [38.1, 302.0], [38.2, 302.0], [38.3, 302.0], [38.4, 303.0], [38.5, 303.0], [38.6, 303.0], [38.7, 303.0], [38.8, 303.0], [38.9, 303.0], [39.0, 303.0], [39.1, 303.0], [39.2, 303.0], [39.3, 304.0], [39.4, 304.0], [39.5, 304.0], [39.6, 304.0], [39.7, 304.0], [39.8, 304.0], [39.9, 304.0], [40.0, 304.0], [40.1, 305.0], [40.2, 305.0], [40.3, 305.0], [40.4, 305.0], [40.5, 305.0], [40.6, 305.0], [40.7, 305.0], [40.8, 305.0], [40.9, 305.0], [41.0, 306.0], [41.1, 306.0], [41.2, 306.0], [41.3, 306.0], [41.4, 306.0], [41.5, 306.0], [41.6, 306.0], [41.7, 306.0], [41.8, 306.0], [41.9, 306.0], [42.0, 307.0], [42.1, 307.0], [42.2, 307.0], [42.3, 307.0], [42.4, 307.0], [42.5, 307.0], [42.6, 308.0], [42.7, 308.0], [42.8, 308.0], [42.9, 308.0], [43.0, 308.0], [43.1, 308.0], [43.2, 308.0], [43.3, 308.0], [43.4, 309.0], [43.5, 309.0], [43.6, 309.0], [43.7, 309.0], [43.8, 310.0], [43.9, 310.0], [44.0, 310.0], [44.1, 310.0], [44.2, 310.0], [44.3, 310.0], [44.4, 311.0], [44.5, 311.0], [44.6, 311.0], [44.7, 311.0], [44.8, 311.0], [44.9, 312.0], [45.0, 312.0], [45.1, 312.0], [45.2, 312.0], [45.3, 312.0], [45.4, 313.0], [45.5, 313.0], [45.6, 313.0], [45.7, 313.0], [45.8, 313.0], [45.9, 315.0], [46.0, 315.0], [46.1, 315.0], [46.2, 316.0], [46.3, 316.0], [46.4, 316.0], [46.5, 316.0], [46.6, 316.0], [46.7, 316.0], [46.8, 316.0], [46.9, 317.0], [47.0, 317.0], [47.1, 317.0], [47.2, 317.0], [47.3, 317.0], [47.4, 318.0], [47.5, 318.0], [47.6, 318.0], [47.7, 318.0], [47.8, 319.0], [47.9, 319.0], [48.0, 319.0], [48.1, 319.0], [48.2, 319.0], [48.3, 319.0], [48.4, 319.0], [48.5, 319.0], [48.6, 319.0], [48.7, 319.0], [48.8, 320.0], [48.9, 320.0], [49.0, 320.0], [49.1, 320.0], [49.2, 320.0], [49.3, 320.0], [49.4, 320.0], [49.5, 320.0], [49.6, 320.0], [49.7, 321.0], [49.8, 321.0], [49.9, 321.0], [50.0, 321.0], [50.1, 321.0], [50.2, 321.0], [50.3, 321.0], [50.4, 321.0], [50.5, 322.0], [50.6, 322.0], [50.7, 322.0], [50.8, 322.0], [50.9, 322.0], [51.0, 322.0], [51.1, 322.0], [51.2, 322.0], [51.3, 322.0], [51.4, 322.0], [51.5, 322.0], [51.6, 323.0], [51.7, 323.0], [51.8, 323.0], [51.9, 323.0], [52.0, 323.0], [52.1, 324.0], [52.2, 324.0], [52.3, 325.0], [52.4, 325.0], [52.5, 325.0], [52.6, 325.0], [52.7, 325.0], [52.8, 326.0], [52.9, 326.0], [53.0, 326.0], [53.1, 326.0], [53.2, 326.0], [53.3, 326.0], [53.4, 326.0], [53.5, 327.0], [53.6, 327.0], [53.7, 327.0], [53.8, 327.0], [53.9, 327.0], [54.0, 327.0], [54.1, 327.0], [54.2, 327.0], [54.3, 327.0], [54.4, 328.0], [54.5, 328.0], [54.6, 328.0], [54.7, 329.0], [54.8, 329.0], [54.9, 329.0], [55.0, 329.0], [55.1, 329.0], [55.2, 329.0], [55.3, 329.0], [55.4, 330.0], [55.5, 330.0], [55.6, 330.0], [55.7, 330.0], [55.8, 330.0], [55.9, 330.0], [56.0, 330.0], [56.1, 330.0], [56.2, 330.0], [56.3, 330.0], [56.4, 330.0], [56.5, 330.0], [56.6, 330.0], [56.7, 330.0], [56.8, 330.0], [56.9, 331.0], [57.0, 331.0], [57.1, 331.0], [57.2, 331.0], [57.3, 331.0], [57.4, 331.0], [57.5, 331.0], [57.6, 331.0], [57.7, 331.0], [57.8, 331.0], [57.9, 331.0], [58.0, 332.0], [58.1, 332.0], [58.2, 332.0], [58.3, 332.0], [58.4, 332.0], [58.5, 332.0], [58.6, 332.0], [58.7, 333.0], [58.8, 333.0], [58.9, 333.0], [59.0, 333.0], [59.1, 333.0], [59.2, 333.0], [59.3, 333.0], [59.4, 333.0], [59.5, 333.0], [59.6, 333.0], [59.7, 334.0], [59.8, 334.0], [59.9, 334.0], [60.0, 334.0], [60.1, 335.0], [60.2, 335.0], [60.3, 335.0], [60.4, 335.0], [60.5, 335.0], [60.6, 335.0], [60.7, 336.0], [60.8, 336.0], [60.9, 336.0], [61.0, 336.0], [61.1, 336.0], [61.2, 336.0], [61.3, 336.0], [61.4, 336.0], [61.5, 336.0], [61.6, 337.0], [61.7, 337.0], [61.8, 337.0], [61.9, 337.0], [62.0, 337.0], [62.1, 337.0], [62.2, 337.0], [62.3, 337.0], [62.4, 338.0], [62.5, 338.0], [62.6, 338.0], [62.7, 338.0], [62.8, 338.0], [62.9, 338.0], [63.0, 339.0], [63.1, 339.0], [63.2, 339.0], [63.3, 339.0], [63.4, 339.0], [63.5, 339.0], [63.6, 339.0], [63.7, 340.0], [63.8, 340.0], [63.9, 340.0], [64.0, 340.0], [64.1, 340.0], [64.2, 340.0], [64.3, 340.0], [64.4, 340.0], [64.5, 340.0], [64.6, 340.0], [64.7, 340.0], [64.8, 340.0], [64.9, 340.0], [65.0, 340.0], [65.1, 341.0], [65.2, 341.0], [65.3, 341.0], [65.4, 341.0], [65.5, 341.0], [65.6, 341.0], [65.7, 341.0], [65.8, 342.0], [65.9, 343.0], [66.0, 343.0], [66.1, 344.0], [66.2, 344.0], [66.3, 344.0], [66.4, 344.0], [66.5, 345.0], [66.6, 345.0], [66.7, 345.0], [66.8, 345.0], [66.9, 345.0], [67.0, 346.0], [67.1, 346.0], [67.2, 346.0], [67.3, 346.0], [67.4, 346.0], [67.5, 346.0], [67.6, 346.0], [67.7, 347.0], [67.8, 348.0], [67.9, 348.0], [68.0, 348.0], [68.1, 348.0], [68.2, 348.0], [68.3, 349.0], [68.4, 349.0], [68.5, 349.0], [68.6, 350.0], [68.7, 351.0], [68.8, 351.0], [68.9, 351.0], [69.0, 351.0], [69.1, 351.0], [69.2, 352.0], [69.3, 352.0], [69.4, 352.0], [69.5, 353.0], [69.6, 354.0], [69.7, 355.0], [69.8, 355.0], [69.9, 355.0], [70.0, 355.0], [70.1, 356.0], [70.2, 356.0], [70.3, 356.0], [70.4, 356.0], [70.5, 357.0], [70.6, 357.0], [70.7, 358.0], [70.8, 358.0], [70.9, 358.0], [71.0, 358.0], [71.1, 358.0], [71.2, 359.0], [71.3, 359.0], [71.4, 359.0], [71.5, 359.0], [71.6, 359.0], [71.7, 360.0], [71.8, 360.0], [71.9, 360.0], [72.0, 361.0], [72.1, 361.0], [72.2, 361.0], [72.3, 361.0], [72.4, 361.0], [72.5, 362.0], [72.6, 362.0], [72.7, 362.0], [72.8, 362.0], [72.9, 362.0], [73.0, 362.0], [73.1, 362.0], [73.2, 363.0], [73.3, 363.0], [73.4, 363.0], [73.5, 363.0], [73.6, 364.0], [73.7, 364.0], [73.8, 364.0], [73.9, 365.0], [74.0, 366.0], [74.1, 366.0], [74.2, 366.0], [74.3, 366.0], [74.4, 366.0], [74.5, 366.0], [74.6, 367.0], [74.7, 367.0], [74.8, 368.0], [74.9, 368.0], [75.0, 368.0], [75.1, 370.0], [75.2, 371.0], [75.3, 371.0], [75.4, 371.0], [75.5, 372.0], [75.6, 372.0], [75.7, 373.0], [75.8, 373.0], [75.9, 374.0], [76.0, 374.0], [76.1, 374.0], [76.2, 375.0], [76.3, 375.0], [76.4, 375.0], [76.5, 378.0], [76.6, 379.0], [76.7, 382.0], [76.8, 383.0], [76.9, 385.0], [77.0, 390.0], [77.1, 391.0], [77.2, 392.0], [77.3, 392.0], [77.4, 394.0], [77.5, 395.0], [77.6, 396.0], [77.7, 396.0], [77.8, 397.0], [77.9, 397.0], [78.0, 398.0], [78.1, 398.0], [78.2, 398.0], [78.3, 399.0], [78.4, 399.0], [78.5, 399.0], [78.6, 400.0], [78.7, 400.0], [78.8, 401.0], [78.9, 401.0], [79.0, 401.0], [79.1, 401.0], [79.2, 401.0], [79.3, 402.0], [79.4, 402.0], [79.5, 402.0], [79.6, 402.0], [79.7, 403.0], [79.8, 403.0], [79.9, 403.0], [80.0, 403.0], [80.1, 405.0], [80.2, 407.0], [80.3, 407.0], [80.4, 407.0], [80.5, 407.0], [80.6, 408.0], [80.7, 408.0], [80.8, 409.0], [80.9, 409.0], [81.0, 409.0], [81.1, 410.0], [81.2, 410.0], [81.3, 410.0], [81.4, 411.0], [81.5, 412.0], [81.6, 413.0], [81.7, 413.0], [81.8, 414.0], [81.9, 414.0], [82.0, 415.0], [82.1, 415.0], [82.2, 416.0], [82.3, 416.0], [82.4, 419.0], [82.5, 419.0], [82.6, 419.0], [82.7, 419.0], [82.8, 419.0], [82.9, 420.0], [83.0, 420.0], [83.1, 421.0], [83.2, 423.0], [83.3, 423.0], [83.4, 423.0], [83.5, 424.0], [83.6, 425.0], [83.7, 425.0], [83.8, 425.0], [83.9, 427.0], [84.0, 427.0], [84.1, 427.0], [84.2, 428.0], [84.3, 428.0], [84.4, 428.0], [84.5, 428.0], [84.6, 428.0], [84.7, 428.0], [84.8, 429.0], [84.9, 429.0], [85.0, 429.0], [85.1, 429.0], [85.2, 429.0], [85.3, 429.0], [85.4, 429.0], [85.5, 430.0], [85.6, 430.0], [85.7, 431.0], [85.8, 431.0], [85.9, 432.0], [86.0, 432.0], [86.1, 432.0], [86.2, 434.0], [86.3, 434.0], [86.4, 436.0], [86.5, 436.0], [86.6, 436.0], [86.7, 436.0], [86.8, 437.0], [86.9, 437.0], [87.0, 437.0], [87.1, 438.0], [87.2, 438.0], [87.3, 439.0], [87.4, 439.0], [87.5, 440.0], [87.6, 440.0], [87.7, 440.0], [87.8, 440.0], [87.9, 441.0], [88.0, 441.0], [88.1, 441.0], [88.2, 441.0], [88.3, 441.0], [88.4, 441.0], [88.5, 441.0], [88.6, 442.0], [88.7, 442.0], [88.8, 442.0], [88.9, 443.0], [89.0, 444.0], [89.1, 445.0], [89.2, 446.0], [89.3, 447.0], [89.4, 447.0], [89.5, 448.0], [89.6, 448.0], [89.7, 448.0], [89.8, 448.0], [89.9, 449.0], [90.0, 449.0], [90.1, 450.0], [90.2, 451.0], [90.3, 451.0], [90.4, 451.0], [90.5, 452.0], [90.6, 452.0], [90.7, 452.0], [90.8, 452.0], [90.9, 453.0], [91.0, 453.0], [91.1, 453.0], [91.2, 453.0], [91.3, 455.0], [91.4, 456.0], [91.5, 459.0], [91.6, 463.0], [91.7, 468.0], [91.8, 471.0], [91.9, 473.0], [92.0, 473.0], [92.1, 476.0], [92.2, 481.0], [92.3, 957.0], [92.4, 1083.0], [92.5, 1091.0], [92.6, 1098.0], [92.7, 1117.0], [92.8, 1119.0], [92.9, 1125.0], [93.0, 1126.0], [93.1, 1129.0], [93.2, 1131.0], [93.3, 1132.0], [93.4, 1144.0], [93.5, 1147.0], [93.6, 1148.0], [93.7, 1151.0], [93.8, 1152.0], [93.9, 1153.0], [94.0, 1155.0], [94.1, 1157.0], [94.2, 1157.0], [94.3, 1159.0], [94.4, 1161.0], [94.5, 1161.0], [94.6, 1161.0], [94.7, 1164.0], [94.8, 1168.0], [94.9, 1169.0], [95.0, 1171.0], [95.1, 1177.0], [95.2, 1178.0], [95.3, 1179.0], [95.4, 1181.0], [95.5, 1185.0], [95.6, 1186.0], [95.7, 1192.0], [95.8, 1194.0], [95.9, 1195.0], [96.0, 1195.0], [96.1, 1196.0], [96.2, 1198.0], [96.3, 1200.0], [96.4, 1203.0], [96.5, 1203.0], [96.6, 1205.0], [96.7, 1208.0], [96.8, 1217.0], [96.9, 1220.0], [97.0, 1221.0], [97.1, 1223.0], [97.2, 1224.0], [97.3, 1225.0], [97.4, 1226.0], [97.5, 1237.0], [97.6, 1237.0], [97.7, 1243.0], [97.8, 1245.0], [97.9, 1252.0], [98.0, 1253.0], [98.1, 1255.0], [98.2, 1258.0], [98.3, 1281.0], [98.4, 1295.0], [98.5, 1319.0], [98.6, 1323.0], [98.7, 1328.0], [98.8, 1330.0], [98.9, 1331.0], [99.0, 1341.0], [99.1, 1347.0], [99.2, 1361.0], [99.3, 1374.0], [99.4, 1387.0], [99.5, 1462.0], [99.6, 1554.0], [99.7, 2082.0], [99.8, 2133.0], [99.9, 2157.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 499.0, "series": [{"data": [[2400.0, 1.0], [2500.0, 7.0], [2600.0, 8.0], [2700.0, 2.0], [2800.0, 9.0], [2900.0, 31.0], [3000.0, 37.0], [3100.0, 35.0], [3200.0, 13.0], [3300.0, 8.0], [3400.0, 6.0], [3500.0, 5.0], [3700.0, 19.0], [3600.0, 6.0], [3800.0, 16.0], [3900.0, 7.0], [4000.0, 8.0], [4100.0, 14.0], [4200.0, 15.0], [4300.0, 4.0], [4400.0, 10.0], [4500.0, 11.0], [4600.0, 15.0], [4700.0, 5.0], [4800.0, 9.0], [4900.0, 4.0], [5000.0, 10.0], [5100.0, 12.0], [5200.0, 8.0], [5300.0, 24.0], [5400.0, 19.0], [5500.0, 33.0], [5600.0, 21.0], [5700.0, 14.0], [5800.0, 13.0], [5900.0, 16.0], [6000.0, 4.0], [6100.0, 4.0], [6200.0, 9.0], [6400.0, 2.0], [6500.0, 7.0], [6600.0, 7.0], [6700.0, 3.0], [6800.0, 9.0], [6900.0, 13.0], [7000.0, 11.0], [7100.0, 9.0], [7200.0, 13.0], [7300.0, 17.0], [7400.0, 16.0], [7500.0, 11.0], [7600.0, 31.0], [7700.0, 36.0], [7800.0, 28.0], [7900.0, 24.0], [8000.0, 28.0], [8100.0, 25.0], [8200.0, 20.0], [8300.0, 26.0], [8400.0, 17.0], [8500.0, 11.0], [8600.0, 5.0], [8700.0, 1.0], [8800.0, 3.0], [9000.0, 1.0], [9200.0, 2.0], [9300.0, 2.0], [9600.0, 1.0], [11500.0, 1.0], [11900.0, 2.0], [12200.0, 5.0], [12400.0, 7.0], [12300.0, 2.0], [12600.0, 5.0], [12500.0, 5.0], [12700.0, 4.0], [12800.0, 20.0], [12900.0, 16.0], [13100.0, 9.0], [13000.0, 8.0], [13200.0, 12.0], [13300.0, 9.0], [13400.0, 6.0], [13500.0, 5.0], [13600.0, 4.0], [13700.0, 2.0], [13800.0, 1.0], [14300.0, 1.0], [14200.0, 1.0], [14500.0, 1.0], [14800.0, 1.0], [15000.0, 1.0], [22500.0, 1.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1100.0, 19.0], [300.0, 499.0], [1200.0, 7.0], [1300.0, 8.0], [1400.0, 1.0], [400.0, 155.0], [200.0, 302.0], [1700.0, 2.0], [900.0, 2.0], [1900.0, 1.0], [1000.0, 4.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[2100.0, 2.0], [1100.0, 36.0], [300.0, 424.0], [1200.0, 22.0], [1300.0, 10.0], [1400.0, 1.0], [1500.0, 1.0], [200.0, 362.0], [400.0, 137.0], [900.0, 1.0], [2000.0, 1.0], [1000.0, 3.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1879.0, "series": [{"data": [[0.0, 1879.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 114.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1006.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 554.3259999999998, "minX": 1.73702334E12, "maxY": 554.3259999999998, "series": [{"data": [[1.73702334E12, 554.3259999999998]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702334E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 271.0, "minX": 1.0, "maxY": 22575.0, "series": [{"data": [[3.0, 15034.0], [6.0, 14829.0], [9.0, 14515.0], [10.0, 14269.5], [56.0, 13720.0], [60.0, 13813.0], [69.0, 13646.0], [74.0, 13747.0], [91.0, 13604.0], [93.0, 13526.333333333334], [92.0, 13562.0], [98.0, 13399.4], [97.0, 13293.0], [96.0, 13552.0], [103.0, 13373.0], [102.0, 13247.75], [100.0, 13263.0], [107.0, 13255.0], [105.0, 13363.0], [110.0, 12944.0], [109.0, 13055.0], [108.0, 13163.666666666666], [115.0, 12932.333333333334], [114.0, 12982.0], [119.0, 12900.0], [118.0, 12907.5], [121.0, 12904.533333333335], [120.0, 12900.266666666666], [127.0, 12621.5], [126.0, 12557.666666666666], [129.0, 12312.416666666668], [128.0, 12518.57142857143], [140.0, 9688.0], [147.0, 9348.0], [145.0, 9242.0], [174.0, 9247.0], [169.0, 9359.0], [207.0, 9073.0], [224.0, 8701.0], [247.0, 8688.0], [244.0, 8682.0], [333.0, 8672.0], [330.0, 8814.0], [329.0, 8383.0], [324.0, 8881.0], [323.0, 8870.0], [351.0, 8432.0], [350.0, 8439.0], [349.0, 8587.0], [343.0, 8614.0], [342.0, 8475.0], [354.0, 8427.0], [366.0, 8438.0], [365.0, 8400.5], [363.0, 8508.0], [361.0, 8282.0], [358.0, 8412.666666666666], [357.0, 8554.0], [356.0, 8558.0], [353.0, 8565.0], [352.0, 8450.5], [383.0, 8394.0], [380.0, 8307.0], [378.0, 8391.0], [377.0, 8235.333333333334], [376.0, 8419.2], [375.0, 8355.333333333334], [374.0, 8367.5], [372.0, 8342.5], [370.0, 8311.5], [387.0, 8381.0], [398.0, 8262.0], [396.0, 8249.25], [395.0, 8223.0], [394.0, 8204.0], [392.0, 8331.0], [389.0, 8521.0], [388.0, 8237.0], [386.0, 8267.833333333334], [384.0, 8400.0], [414.0, 7986.666666666667], [415.0, 7963.166666666667], [412.0, 7972.0], [403.0, 8254.0], [402.0, 8135.0], [401.0, 8276.0], [411.0, 8131.75], [410.0, 8079.4], [409.0, 8106.5], [408.0, 8138.5], [406.0, 8074.5], [405.0, 8055.5], [430.0, 7844.0], [428.0, 7820.0], [427.0, 8209.0], [426.0, 7964.666666666667], [423.0, 8006.333333333333], [419.0, 7901.5], [418.0, 8320.0], [416.0, 8120.0], [446.0, 7787.666666666667], [447.0, 7987.333333333333], [445.0, 7861.666666666667], [444.0, 7713.6], [443.0, 7772.0], [442.0, 7912.888888888889], [441.0, 7692.5], [440.0, 7838.0], [439.0, 7880.700000000001], [435.0, 7979.5], [433.0, 8180.0], [438.0, 7981.5], [437.0, 8064.666666666667], [451.0, 7708.5], [461.0, 7850.0], [460.0, 7503.0], [458.0, 7759.0], [457.0, 7804.076923076924], [455.0, 7883.0], [454.0, 7767.333333333333], [452.0, 8038.0], [450.0, 8018.5], [449.0, 7959.5], [478.0, 7565.0], [476.0, 7670.0], [466.0, 7678.4000000000015], [465.0, 7613.0], [474.0, 7245.0], [473.0, 7254.0], [472.0, 7576.0], [471.0, 7465.166666666666], [470.0, 7624.2], [469.0, 7830.0], [468.0, 7555.090909090909], [494.0, 7017.0], [495.0, 7116.666666666667], [493.0, 7288.333333333333], [483.0, 7663.75], [481.0, 7635.5], [480.0, 7665.0], [491.0, 7258.466666666666], [490.0, 7575.5], [489.0, 7412.5], [488.0, 7473.333333333333], [487.0, 7514.0], [486.0, 7650.0], [485.0, 7637.0], [484.0, 7544.0], [499.0, 6746.0], [511.0, 6936.5], [510.0, 6970.294117647058], [509.0, 7131.333333333333], [504.0, 7216.0], [501.0, 7211.0], [500.0, 7233.0], [498.0, 7259.0], [496.0, 7137.0], [542.0, 6652.0], [543.0, 6575.333333333333], [537.0, 6644.0], [532.0, 6543.0], [531.0, 6448.0], [528.0, 6648.5], [527.0, 6241.0], [523.0, 6760.0], [514.0, 6859.0], [512.0, 6882.555555555556], [560.0, 6527.0], [549.0, 6564.0], [546.0, 6563.0], [545.0, 6377.5], [604.0, 6287.0], [580.0, 6216.5], [637.0, 6178.0], [632.0, 6214.5], [630.0, 6143.6], [622.0, 5846.0], [620.0, 6299.0], [617.0, 5852.0], [666.0, 5788.0], [665.0, 5597.0], [664.0, 5950.0], [658.0, 5904.0], [651.0, 5993.5], [643.0, 5875.0], [687.0, 5874.0], [702.0, 5645.0], [703.0, 5823.625], [696.0, 5727.0], [679.0, 5706.0], [674.0, 5949.0], [673.0, 5953.0], [672.0, 5576.0], [690.0, 5606.0], [689.0, 5693.0], [686.0, 5661.5], [685.0, 5894.5], [684.0, 5788.0], [682.0, 5982.25], [681.0, 5948.0], [733.0, 5384.333333333333], [735.0, 5742.0], [729.0, 5499.0], [728.0, 5548.0], [724.0, 5670.125], [723.0, 5615.666666666667], [721.0, 5775.5], [719.0, 5867.0], [706.0, 5530.5], [710.0, 5391.0], [708.0, 5482.5], [716.0, 5641.25], [713.0, 5797.666666666667], [761.0, 5345.5], [766.0, 5341.0], [767.0, 5233.5], [752.0, 5381.5], [755.0, 5577.333333333333], [754.0, 5579.666666666667], [757.0, 5080.0], [756.0, 5442.0], [765.0, 5070.5], [764.0, 5284.666666666667], [762.0, 5409.25], [760.0, 5348.666666666667], [743.0, 5286.0], [742.0, 5412.0], [740.0, 5485.5], [739.0, 5766.0], [738.0, 5633.0], [736.0, 5445.0], [751.0, 5603.0], [749.0, 5530.857142857143], [746.0, 5647.0], [745.0, 5569.5], [744.0, 5442.0], [759.0, 5073.0], [758.0, 5448.333333333333], [774.0, 5305.5], [795.0, 5284.0], [793.0, 5301.0], [790.0, 5309.0], [789.0, 5257.5], [773.0, 5279.5], [772.0, 5306.0], [771.0, 5323.333333333333], [770.0, 5166.625], [824.0, 4908.5], [821.0, 5079.0], [816.0, 4694.0], [815.0, 5144.0], [813.0, 5187.5], [806.0, 4800.0], [804.0, 4999.0], [800.0, 4982.0], [857.0, 4466.666666666667], [850.0, 4427.666666666667], [859.0, 4550.0], [860.0, 4599.0], [849.0, 4557.0], [858.0, 4242.333333333333], [856.0, 4471.333333333333], [839.0, 4749.666666666666], [838.0, 4872.5], [837.0, 4977.0], [836.0, 4503.0], [832.0, 4510.0], [847.0, 4654.5], [846.0, 4510.5], [845.0, 4484.5], [844.0, 4714.0], [841.0, 4604.0], [840.0, 4807.0], [855.0, 4580.5], [854.0, 4540.25], [853.0, 4604.0], [894.0, 4332.0], [895.0, 4130.0], [893.0, 4296.0], [891.0, 3995.0], [888.0, 4197.0], [870.0, 4541.0], [869.0, 4541.0], [865.0, 4533.0], [864.0, 4417.0], [886.0, 3923.0], [885.0, 3821.0], [883.0, 4054.4285714285716], [877.0, 4481.0], [876.0, 4127.0], [875.0, 4485.0], [872.0, 4390.5], [903.0, 3650.0], [902.0, 4119.5], [901.0, 4199.5], [899.0, 4069.8], [898.0, 4046.25], [897.0, 4029.833333333333], [896.0, 3985.3333333333335], [959.0, 3885.0], [939.0, 3689.0], [933.0, 3809.0], [990.0, 3533.3333333333335], [991.0, 3762.0], [988.0, 3759.0], [986.0, 3771.0], [984.0, 3775.0], [967.0, 3379.0], [966.0, 3359.0], [965.0, 3701.0], [961.0, 3367.0], [960.0, 3801.0], [983.0, 3770.0], [980.0, 3811.0], [978.0, 3487.5], [977.0, 3768.75], [974.0, 3836.0], [973.0, 3807.0], [972.0, 3693.0], [970.0, 3655.5], [1000.0, 3034.5519480519465], [993.0, 3657.5], [1.0, 22575.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[604.555, 6788.167999999994]], "isOverall": false, "label": "Auth-Aggregated", "isController": false}, {"data": [[2.0, 280.0], [3.0, 290.0], [4.0, 310.0], [6.0, 297.0], [7.0, 291.0], [8.0, 301.0], [9.0, 304.0], [10.0, 310.0], [12.0, 313.0], [13.0, 322.0], [17.0, 359.0], [18.0, 363.0], [19.0, 329.0], [20.0, 335.0], [22.0, 337.0], [27.0, 338.6], [29.0, 353.0], [33.0, 326.0], [32.0, 321.3333333333333], [35.0, 305.0], [34.0, 297.0], [36.0, 302.0], [39.0, 332.3333333333333], [41.0, 297.0], [40.0, 309.0], [43.0, 286.0], [42.0, 288.0], [45.0, 326.0], [44.0, 333.0], [47.0, 328.0], [46.0, 332.0], [49.0, 292.0], [48.0, 317.0], [51.0, 298.5], [53.0, 280.0], [52.0, 292.0], [55.0, 295.0], [54.0, 292.0], [56.0, 310.0], [58.0, 340.5], [61.0, 359.0], [60.0, 331.0], [63.0, 382.0], [64.0, 390.0], [71.0, 358.0], [70.0, 391.0], [69.0, 393.0], [68.0, 390.25], [74.0, 335.0], [73.0, 336.5], [79.0, 297.0], [78.0, 319.0], [77.0, 335.3333333333333], [82.0, 296.5], [87.0, 336.5], [86.0, 326.3333333333333], [84.0, 315.0], [91.0, 302.0], [90.0, 311.0], [89.0, 343.0], [95.0, 292.0], [94.0, 297.0], [93.0, 306.0], [92.0, 302.0], [99.0, 298.0], [98.0, 285.0], [97.0, 280.0], [96.0, 290.0], [103.0, 297.0], [102.0, 293.0], [101.0, 292.0], [100.0, 298.0], [107.0, 300.0], [106.0, 286.0], [105.0, 295.0], [104.0, 302.0], [111.0, 287.0], [110.0, 284.0], [109.0, 290.0], [108.0, 284.0], [115.0, 284.0], [114.0, 294.0], [113.0, 295.0], [112.0, 291.0], [119.0, 279.0], [118.0, 290.0], [117.0, 281.0], [116.0, 290.0], [123.0, 291.0], [122.0, 286.0], [121.0, 289.0], [120.0, 284.0], [127.0, 282.0], [126.0, 284.0], [125.0, 289.0], [124.0, 290.0], [135.0, 283.0], [134.0, 278.0], [133.0, 286.0], [132.0, 297.0], [131.0, 964.0], [130.0, 279.0], [129.0, 298.0], [128.0, 275.0], [143.0, 286.0], [142.0, 286.0], [141.0, 288.0], [140.0, 283.0], [139.0, 287.0], [138.0, 286.0], [137.0, 284.0], [136.0, 277.0], [151.0, 310.0], [150.0, 314.0], [149.0, 281.0], [148.0, 294.0], [147.0, 307.0], [146.0, 289.0], [145.0, 287.0], [144.0, 280.0], [158.0, 331.0], [156.0, 316.0], [155.0, 316.0], [154.0, 317.0], [153.0, 312.5], [167.0, 350.5], [165.0, 352.0], [164.0, 349.0], [163.0, 354.0], [162.0, 353.0], [161.0, 356.0], [160.0, 344.0], [175.0, 344.0], [174.0, 356.0], [173.0, 350.0], [172.0, 350.5], [170.0, 350.0], [169.0, 362.0], [168.0, 361.0], [183.0, 346.0], [182.0, 349.0], [181.0, 333.0], [180.0, 339.0], [179.0, 341.0], [178.0, 343.0], [177.0, 344.0], [176.0, 343.0], [191.0, 341.0], [190.0, 343.0], [189.0, 341.5], [187.0, 342.0], [186.0, 342.0], [185.0, 341.0], [184.0, 329.0], [199.0, 350.0], [197.0, 355.0], [196.0, 347.0], [194.0, 357.0], [193.0, 344.5], [207.0, 360.0], [206.0, 366.0], [205.0, 369.0], [204.0, 370.0], [203.0, 372.0], [202.0, 361.0], [201.0, 361.0], [200.0, 365.0], [215.0, 349.0], [214.0, 353.0], [213.0, 350.0], [212.0, 353.0], [210.0, 352.0], [209.0, 355.0], [208.0, 360.0], [222.0, 341.0], [220.0, 339.0], [219.0, 343.0], [218.0, 345.0], [217.0, 341.0], [216.0, 350.0], [231.0, 354.0], [230.0, 350.0], [229.0, 359.0], [228.0, 343.0], [227.0, 346.0], [226.0, 349.0], [225.0, 336.0], [224.0, 347.0], [239.0, 1795.0], [238.0, 344.0], [237.0, 349.5], [235.0, 344.0], [234.0, 346.0], [233.0, 352.0], [232.0, 348.0], [247.0, 330.6666666666667], [244.0, 331.0], [243.0, 335.0], [242.0, 335.0], [241.0, 338.0], [240.0, 341.0], [255.0, 330.0], [254.0, 326.0], [253.0, 338.0], [252.0, 331.0], [251.0, 334.0], [250.0, 337.0], [249.0, 335.0], [248.0, 324.0], [269.0, 326.0], [271.0, 347.0], [268.0, 327.0], [259.0, 318.0], [258.0, 323.0], [257.0, 323.5], [267.0, 327.0], [266.0, 334.0], [265.0, 335.0], [264.0, 346.0], [263.0, 334.3333333333333], [262.0, 339.0], [286.0, 357.0], [287.0, 355.0], [285.0, 358.0], [284.0, 361.0], [283.0, 358.0], [282.0, 348.0], [281.0, 344.0], [280.0, 347.0], [279.0, 329.0], [273.0, 336.0], [272.0, 346.0], [275.0, 334.0], [274.0, 335.0], [278.0, 335.0], [276.0, 335.0], [301.0, 355.0], [302.0, 352.0], [300.0, 361.0], [290.0, 363.0], [289.0, 360.0], [288.0, 355.0], [299.0, 357.0], [298.0, 364.0], [297.0, 364.0], [295.0, 363.0], [294.0, 360.0], [293.0, 366.0], [292.0, 357.5], [318.0, 365.0], [319.0, 361.0], [317.0, 360.0], [316.0, 369.0], [315.0, 370.0], [314.0, 363.0], [313.0, 358.0], [312.0, 368.0], [311.0, 366.0], [307.0, 346.0], [306.0, 350.0], [304.0, 352.0], [310.0, 364.3333333333333], [334.0, 395.0], [335.0, 394.0], [333.0, 401.0], [332.0, 385.0], [331.0, 385.0], [330.0, 371.0], [329.0, 357.0], [328.0, 351.0], [327.0, 356.0], [321.0, 350.0], [320.0, 358.0], [323.0, 355.0], [322.0, 357.0], [326.0, 355.0], [325.0, 352.0], [324.0, 355.0], [350.0, 424.0], [351.0, 423.0], [349.0, 427.0], [348.0, 430.0], [347.0, 431.0], [346.0, 434.0], [345.0, 438.5], [343.0, 442.0], [337.0, 394.0], [336.0, 412.0], [339.0, 406.0], [338.0, 403.0], [342.0, 415.0], [341.0, 414.0], [340.0, 404.0], [366.0, 455.0], [367.0, 450.0], [365.0, 464.0], [364.0, 470.0], [363.0, 474.0], [362.0, 443.0], [361.0, 453.0], [360.0, 451.0], [359.0, 447.0], [353.0, 1471.0], [352.0, 416.0], [355.0, 409.0], [354.0, 426.0], [358.0, 420.0], [357.0, 430.0], [356.0, 422.0], [382.0, 417.0], [383.0, 415.0], [381.0, 415.0], [380.0, 414.0], [379.0, 416.0], [378.0, 422.0], [377.0, 434.0], [376.0, 434.0], [375.0, 434.0], [369.0, 449.0], [371.0, 443.0], [370.0, 440.0], [374.0, 442.0], [373.0, 1124.0], [372.0, 442.0], [397.0, 1110.0], [398.0, 386.0], [396.0, 391.0], [387.0, 402.0], [386.0, 411.5], [384.0, 408.0], [395.0, 401.0], [394.0, 409.0], [393.0, 1183.0], [392.0, 411.0], [391.0, 1222.0], [390.0, 406.0], [389.0, 403.0], [388.0, 1088.0], [414.0, 336.0], [415.0, 337.0], [413.0, 326.0], [412.0, 337.0], [411.0, 342.0], [410.0, 347.0], [409.0, 371.0], [408.0, 365.0], [407.0, 359.0], [401.0, 378.0], [400.0, 379.5], [403.0, 371.0], [402.0, 381.0], [406.0, 367.0], [405.0, 369.0], [404.0, 370.0], [430.0, 300.0], [431.0, 292.0], [428.0, 306.0], [419.0, 326.0], [418.0, 325.0], [417.0, 331.0], [416.0, 335.0], [427.0, 303.0], [426.0, 312.0], [425.0, 311.0], [424.0, 321.0], [423.0, 326.5], [421.0, 327.0], [420.0, 325.0], [446.0, 307.0], [447.0, 306.0], [445.0, 300.0], [444.0, 296.0], [443.0, 291.0], [442.0, 297.0], [441.0, 291.0], [440.0, 286.0], [439.0, 282.0], [433.0, 293.0], [432.0, 298.0], [435.0, 295.0], [434.0, 302.0], [438.0, 287.0], [437.0, 289.0], [436.0, 299.0], [462.0, 297.0], [463.0, 295.0], [461.0, 286.0], [460.0, 295.0], [459.0, 292.0], [458.0, 284.0], [457.0, 280.0], [456.0, 282.0], [455.0, 285.0], [449.0, 288.0], [448.0, 302.0], [451.0, 282.0], [450.0, 289.0], [454.0, 286.0], [453.0, 284.0], [452.0, 276.0], [478.0, 366.0], [479.0, 355.0], [477.0, 368.0], [476.0, 367.0], [474.0, 376.0], [473.0, 323.0], [472.0, 324.0], [471.0, 314.0], [465.0, 289.0], [464.0, 297.0], [467.0, 317.0], [466.0, 299.0], [470.0, 326.0], [469.0, 320.0], [468.0, 319.0], [494.0, 298.0], [495.0, 295.0], [493.0, 294.0], [492.0, 278.0], [491.0, 330.0], [490.0, 338.0], [489.0, 334.0], [488.0, 338.0], [487.0, 337.0], [481.0, 349.0], [480.0, 356.0], [483.0, 348.0], [482.0, 348.0], [486.0, 358.0], [485.0, 335.0], [484.0, 337.0], [510.0, 283.0], [511.0, 292.0], [509.0, 283.0], [508.0, 291.0], [507.0, 282.0], [506.0, 280.0], [504.0, 280.0], [503.0, 280.0], [496.0, 286.0], [499.0, 302.0], [498.0, 300.0], [502.0, 291.0], [501.0, 290.0], [500.0, 290.0], [540.0, 314.0], [543.0, 298.0], [529.0, 294.0], [528.0, 293.0], [531.0, 288.0], [530.0, 291.0], [533.0, 279.0], [532.0, 289.0], [542.0, 309.0], [541.0, 309.0], [539.0, 316.0], [538.0, 315.0], [537.0, 301.0], [536.0, 318.0], [527.0, 289.0], [512.0, 289.0], [514.0, 305.0], [513.0, 284.0], [517.0, 313.0], [516.0, 301.0], [519.0, 295.0], [518.0, 306.0], [526.0, 289.0], [525.0, 290.0], [524.0, 288.0], [523.0, 282.0], [522.0, 282.0], [521.0, 287.0], [520.0, 297.0], [535.0, 303.0], [534.0, 305.0], [572.0, 290.0], [575.0, 288.0], [560.0, 290.0], [562.0, 286.0], [561.0, 282.0], [565.0, 279.0], [564.0, 283.0], [574.0, 274.0], [573.0, 286.0], [571.0, 292.0], [570.0, 284.0], [569.0, 284.0], [568.0, 282.0], [559.0, 281.0], [545.0, 294.0], [544.0, 297.0], [547.0, 294.0], [546.0, 289.0], [551.0, 282.0], [549.0, 289.0], [558.0, 283.0], [557.0, 289.0], [556.0, 286.0], [555.0, 282.0], [554.0, 288.0], [553.0, 280.0], [552.0, 282.0], [567.0, 285.0], [566.0, 282.0], [601.0, 281.0], [606.0, 290.0], [607.0, 286.0], [592.0, 292.0], [594.0, 281.0], [593.0, 285.0], [596.0, 281.0], [595.0, 288.0], [604.0, 295.0], [603.0, 294.0], [602.0, 295.0], [600.0, 284.5], [583.0, 291.0], [582.0, 281.5], [580.0, 279.0], [579.0, 287.0], [578.0, 292.0], [577.0, 287.0], [576.0, 288.0], [591.0, 277.0], [590.0, 280.0], [589.0, 285.0], [588.0, 292.0], [586.0, 292.0], [585.0, 294.0], [584.0, 287.0], [598.0, 281.0], [597.0, 278.0], [636.0, 301.0], [639.0, 289.0], [625.0, 297.0], [624.0, 298.0], [627.0, 296.0], [626.0, 295.0], [629.0, 285.0], [628.0, 292.0], [638.0, 301.0], [637.0, 299.0], [635.0, 285.0], [634.0, 289.0], [633.0, 298.0], [632.0, 284.0], [623.0, 297.0], [609.0, 285.0], [608.0, 287.0], [611.0, 298.0], [610.0, 294.0], [613.0, 293.0], [612.0, 305.0], [615.0, 311.0], [614.0, 310.0], [622.0, 304.0], [621.0, 300.0], [620.0, 303.5], [618.0, 303.0], [617.0, 309.0], [631.0, 283.0], [630.0, 288.0], [665.0, 305.0], [670.0, 303.5], [671.0, 288.0], [656.0, 322.0], [659.0, 319.0], [658.0, 322.0], [661.0, 313.0], [660.0, 314.0], [668.0, 299.0], [667.0, 302.0], [666.0, 303.0], [664.0, 310.0], [647.0, 301.0], [646.0, 294.0], [645.0, 298.0], [644.0, 297.0], [643.0, 297.0], [642.0, 305.0], [640.0, 301.0], [655.0, 326.0], [654.0, 329.5], [652.0, 311.0], [651.0, 316.0], [650.0, 297.0], [649.0, 295.0], [648.0, 309.0], [663.0, 314.0], [662.0, 317.0], [697.0, 290.0], [702.0, 300.0], [703.0, 326.0], [689.0, 293.0], [688.0, 293.0], [691.0, 296.0], [690.0, 293.0], [693.0, 294.0], [692.0, 292.0], [700.0, 1200.0], [699.0, 302.0], [698.0, 284.0], [696.0, 287.0], [679.0, 318.0], [678.0, 319.0], [677.0, 319.0], [676.0, 318.0], [675.0, 298.0], [674.0, 303.0], [673.0, 300.0], [672.0, 305.0], [687.0, 292.0], [686.0, 290.0], [685.0, 309.0], [684.0, 310.0], [683.0, 311.0], [682.0, 310.0], [681.0, 318.0], [680.0, 320.0], [695.0, 288.0], [694.0, 288.0], [728.0, 291.0], [734.0, 301.0], [735.0, 298.0], [721.0, 292.0], [720.0, 1185.0], [723.0, 278.0], [722.0, 286.0], [733.0, 295.0], [732.0, 552.6666666666666], [729.0, 288.0], [719.0, 294.0], [704.0, 306.0], [706.0, 313.0], [705.0, 313.0], [708.0, 305.0], [707.0, 1315.0], [710.0, 290.0], [709.0, 302.0], [718.0, 290.0], [717.0, 296.0], [716.0, 286.0], [715.0, 283.0], [714.0, 292.0], [713.0, 280.0], [712.0, 286.0], [727.0, 297.0], [726.0, 293.0], [725.0, 1158.0], [724.0, 293.0], [764.0, 289.0], [767.0, 286.0], [753.0, 1322.0], [752.0, 290.0], [755.0, 1319.0], [754.0, 1323.0], [757.0, 1318.0], [756.0, 1327.0], [766.0, 282.0], [765.0, 286.0], [763.0, 1798.0], [762.0, 1260.0], [761.0, 1067.0], [760.0, 290.0], [751.0, 986.0], [737.0, 1075.0], [736.0, 292.0], [739.0, 1134.0], [738.0, 1103.0], [741.0, 293.0], [740.0, 290.0], [743.0, 280.0], [742.0, 290.0], [750.0, 1385.0], [749.0, 290.3333333333333], [746.0, 295.0], [745.0, 292.0], [744.0, 296.0], [759.0, 285.0], [758.0, 1320.0], [792.0, 1111.0], [798.0, 319.0], [799.0, 304.0], [784.0, 875.3333333333334], [797.0, 299.0], [795.0, 301.0], [793.0, 303.0], [781.0, 307.0], [769.0, 285.0], [768.0, 290.0], [771.0, 281.0], [770.0, 287.0], [773.0, 1214.0], [772.0, 283.0], [775.0, 1153.0], [774.0, 285.0], [780.0, 301.0], [779.0, 1144.5], [777.0, 297.0], [776.0, 1151.0], [790.0, 312.0], [789.0, 1131.0], [788.0, 1160.0], [787.0, 596.0], [825.0, 329.0], [829.0, 337.0], [830.0, 330.0], [816.0, 308.0], [818.0, 315.0], [817.0, 320.0], [821.0, 319.0], [819.0, 318.0], [828.0, 341.0], [827.0, 346.0], [826.0, 350.0], [824.0, 318.0], [807.0, 296.0], [806.0, 1157.0], [805.0, 288.0], [804.0, 305.0], [803.0, 306.0], [802.0, 310.0], [801.0, 312.0], [800.0, 316.0], [815.0, 308.0], [814.0, 305.0], [813.0, 308.0], [812.0, 310.0], [811.0, 307.0], [809.0, 294.0], [808.0, 294.0], [823.0, 323.0], [822.0, 320.0], [857.0, 426.0], [861.0, 1218.0], [863.0, 393.5], [848.0, 449.0], [851.0, 438.0], [850.0, 446.5], [853.0, 437.0], [852.0, 448.0], [860.0, 379.0], [859.0, 409.0], [858.0, 412.0], [856.0, 427.0], [839.0, 337.0], [838.0, 318.0], [837.0, 338.0], [836.0, 329.0], [835.0, 324.0], [834.0, 331.0], [833.0, 329.0], [832.0, 331.5], [847.0, 469.0], [846.0, 470.0], [845.0, 477.0], [844.0, 471.0], [842.0, 347.0], [841.0, 1264.0], [840.0, 1201.0], [855.0, 446.0], [854.0, 444.0], [892.0, 317.0], [895.0, 307.0], [881.0, 320.0], [880.0, 328.0], [883.0, 326.0], [882.0, 339.0], [885.0, 320.0], [884.0, 319.0], [894.0, 312.0], [893.0, 320.0], [891.0, 322.0], [890.0, 322.0], [889.0, 322.0], [888.0, 323.0], [879.0, 332.0], [864.0, 372.0], [866.0, 365.0], [865.0, 1187.0], [869.0, 379.0], [867.0, 381.0], [871.0, 374.0], [870.0, 1173.0], [878.0, 323.0], [877.0, 325.0], [876.0, 1141.0], [875.0, 342.0], [874.0, 356.0], [873.0, 357.0], [872.0, 365.0], [887.0, 326.0], [886.0, 326.0], [920.0, 454.0], [925.0, 458.0], [927.0, 469.0], [913.0, 434.0], [912.0, 414.0], [915.0, 428.0], [914.0, 465.0], [924.0, 452.0], [922.0, 451.0], [921.0, 452.0], [910.0, 426.0], [897.0, 320.0], [896.0, 319.0], [899.0, 323.0], [898.0, 331.0], [901.0, 329.0], [900.0, 333.0], [903.0, 347.0], [902.0, 348.0], [909.0, 412.5], [906.0, 401.0], [905.0, 384.0], [904.0, 319.0], [919.0, 454.0], [918.0, 454.0], [917.0, 462.0], [916.0, 459.0], [952.0, 443.0], [958.0, 461.0], [959.0, 436.0], [944.0, 450.0], [946.0, 444.0], [945.0, 445.0], [957.0, 442.0], [955.0, 443.0], [953.0, 444.0], [943.0, 450.0], [928.0, 470.0], [931.0, 453.0], [929.0, 450.0], [935.0, 461.0], [933.0, 460.0], [942.0, 451.0], [941.0, 451.0], [940.0, 455.0], [939.0, 459.0], [938.0, 460.0], [937.0, 462.0], [936.0, 458.0], [951.0, 444.0], [950.0, 446.5], [948.0, 441.0], [947.0, 449.0], [986.0, 422.0], [990.0, 387.0], [991.0, 376.0], [977.0, 439.0], [976.0, 431.0], [979.0, 431.0], [978.0, 433.0], [989.0, 389.0], [988.0, 400.0], [987.0, 413.0], [975.0, 426.0], [960.0, 437.0], [963.0, 450.0], [961.0, 459.0], [965.0, 452.0], [964.0, 454.0], [967.0, 452.0], [966.0, 451.0], [974.0, 436.0], [973.0, 437.0], [972.0, 437.5], [970.0, 433.0], [969.0, 449.0], [968.0, 450.0], [983.0, 428.0], [982.0, 428.0], [981.0, 430.0], [980.0, 433.0], [1000.0, 338.5], [998.0, 345.0], [997.0, 351.0], [996.0, 353.0], [995.0, 353.0], [994.0, 366.0], [993.0, 365.0], [992.0, 366.0], [1.0, 281.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[500.656, 377.40300000000025]], "isOverall": false, "label": "GetBooking-Aggregated", "isController": false}, {"data": [[3.0, 296.5], [6.0, 280.0], [18.0, 350.0], [22.0, 346.0], [29.0, 362.0], [34.0, 296.0], [49.0, 284.0], [48.0, 321.0], [53.0, 289.0], [54.0, 283.75], [56.0, 342.5], [58.0, 345.0], [61.0, 343.0], [60.0, 354.4], [63.0, 368.3333333333333], [62.0, 339.0], [70.0, 391.0], [78.0, 322.0], [77.0, 334.0], [87.0, 335.5], [86.0, 326.5], [85.0, 316.0], [84.0, 305.0], [91.0, 310.0], [90.0, 297.5], [89.0, 315.6666666666667], [93.0, 301.0], [92.0, 301.0], [98.0, 280.0], [97.0, 279.0], [96.0, 279.0], [103.0, 298.0], [102.0, 302.38461538461536], [101.0, 285.0], [100.0, 289.5], [107.0, 290.1666666666667], [105.0, 289.0], [104.0, 301.5], [111.0, 283.0], [109.0, 287.1666666666667], [108.0, 279.75], [115.0, 287.0], [114.0, 292.0], [117.0, 285.0], [122.0, 285.5], [121.0, 283.3333333333333], [120.0, 277.5], [127.0, 279.5], [126.0, 284.6], [133.0, 280.0], [129.0, 301.5], [128.0, 282.85714285714283], [143.0, 277.0], [140.0, 280.0], [137.0, 287.0], [150.0, 957.0], [147.0, 292.5], [145.0, 280.0], [205.0, 366.0], [203.0, 361.0], [210.0, 352.0], [216.0, 346.0], [238.0, 345.0], [255.0, 325.6666666666667], [251.0, 337.5], [249.0, 340.0], [248.0, 322.0], [271.0, 337.0], [266.0, 330.0], [263.0, 332.0], [262.0, 330.0], [259.0, 320.0], [281.0, 364.0], [280.0, 352.5], [279.0, 339.0], [278.0, 349.75], [300.0, 358.0], [299.0, 356.6666666666667], [297.0, 729.0], [293.0, 362.0], [292.0, 360.0], [290.0, 368.0], [289.0, 362.3333333333333], [288.0, 361.0], [318.0, 361.0], [317.0, 363.5], [315.0, 363.0], [314.0, 366.0], [310.0, 367.5], [307.0, 354.5], [306.0, 364.5], [335.0, 407.0], [334.0, 401.5], [333.0, 393.6], [332.0, 402.0], [330.0, 368.8333333333333], [329.0, 373.66666666666663], [323.0, 359.0], [322.0, 357.0], [348.0, 429.0], [351.0, 415.0], [350.0, 423.0], [349.0, 424.5], [345.0, 437.0], [343.0, 420.3333333333333], [336.0, 404.3333333333333], [342.0, 430.5], [341.0, 421.8], [340.0, 404.4285714285714], [354.0, 428.0], [367.0, 448.0], [366.0, 453.5], [363.0, 464.5], [362.0, 459.4], [361.0, 450.6666666666667], [358.0, 432.2222222222223], [356.0, 423.0], [353.0, 418.0], [352.0, 420.0], [381.0, 419.0], [383.0, 409.0], [380.0, 1194.0], [377.0, 429.6666666666667], [376.0, 430.57142857142856], [375.0, 432.6], [374.0, 764.0], [372.0, 439.0], [370.0, 668.8333333333334], [396.0, 391.0], [391.0, 412.0], [390.0, 402.5], [389.0, 398.3333333333333], [387.0, 399.5], [386.0, 401.8571428571429], [384.0, 410.3333333333333], [414.0, 331.0], [415.0, 332.25], [413.0, 783.5], [410.0, 348.0], [409.0, 348.5], [408.0, 366.0], [406.0, 365.0], [402.0, 373.5], [401.0, 369.5], [400.0, 375.0], [431.0, 294.0], [430.0, 293.0], [423.0, 328.0], [419.0, 327.5], [418.0, 322.0], [416.0, 322.0], [446.0, 302.0], [447.0, 300.0], [445.0, 299.0], [444.0, 299.0], [443.0, 301.0], [442.0, 287.14285714285717], [440.0, 281.6666666666667], [439.0, 285.0], [434.0, 291.0], [433.0, 293.0], [438.0, 285.25], [462.0, 286.0], [463.0, 289.3333333333333], [461.0, 294.0], [460.0, 287.0], [459.0, 291.0], [458.0, 284.77777777777777], [457.0, 282.87500000000006], [456.0, 291.3333333333333], [454.0, 283.0], [451.0, 285.0], [450.0, 293.4], [449.0, 293.0], [452.0, 277.0], [473.0, 336.5], [474.0, 339.0], [472.0, 326.5], [471.0, 312.0], [470.0, 317.6], [469.0, 321.0], [468.0, 321.4], [467.0, 319.0], [465.0, 294.0], [494.0, 282.36363636363643], [495.0, 284.0], [493.0, 284.25], [491.0, 299.8333333333333], [490.0, 335.5], [489.0, 334.0], [488.0, 337.0], [487.0, 340.0], [484.0, 343.0], [499.0, 293.0], [511.0, 292.0], [510.0, 289.0], [509.0, 282.0], [507.0, 272.0], [501.0, 286.0], [500.0, 284.0], [498.0, 295.0], [496.0, 294.0], [528.0, 278.0], [527.0, 290.0], [517.0, 297.0], [513.0, 288.0], [512.0, 280.84615384615387], [564.0, 291.0], [573.0, 290.0], [572.0, 283.0], [569.0, 283.0], [567.0, 284.0], [566.0, 278.5], [565.0, 282.0], [562.0, 289.0], [554.0, 285.6666666666667], [549.0, 279.0], [603.0, 288.0], [606.0, 292.0], [602.0, 292.0], [601.0, 282.42857142857144], [600.0, 282.5], [582.0, 292.0], [580.0, 286.0], [579.0, 285.0], [597.0, 283.0], [596.0, 285.0], [592.0, 286.0], [591.0, 280.0], [590.0, 281.0], [589.0, 285.0], [634.0, 302.5], [637.0, 285.0], [632.0, 284.0], [615.0, 306.0], [614.0, 307.0], [613.0, 306.0], [611.0, 297.0], [608.0, 288.0], [630.0, 283.6666666666667], [628.0, 289.0], [627.0, 292.0], [625.0, 294.6666666666667], [622.0, 299.0], [620.0, 305.0], [668.0, 303.0], [670.0, 301.0], [667.0, 302.5], [666.0, 300.5], [664.0, 306.0], [647.0, 306.0], [645.0, 300.0], [644.0, 300.0], [643.0, 303.0], [640.0, 304.0], [663.0, 310.25], [661.0, 316.0], [658.0, 321.0], [654.0, 308.5], [649.0, 299.0], [699.0, 297.0], [702.0, 300.5], [703.0, 307.5], [700.0, 300.0], [697.0, 284.0], [696.0, 287.0], [693.0, 287.0], [690.0, 290.3333333333333], [686.0, 286.625], [678.0, 311.0], [676.0, 312.0], [675.0, 301.0], [681.0, 313.0], [732.0, 305.0], [733.0, 301.0], [729.0, 1131.0], [728.0, 293.25], [724.0, 435.1666666666667], [723.0, 436.8333333333333], [722.0, 1169.0], [721.0, 1161.0], [717.0, 285.0], [706.0, 306.0], [705.0, 308.0], [710.0, 290.0], [709.0, 1200.0], [716.0, 282.5], [715.0, 994.3333333333333], [714.0, 290.0], [713.0, 283.8333333333333], [766.0, 283.0], [767.0, 1704.5], [765.0, 548.3333333333333], [761.0, 1178.0], [758.0, 759.5], [756.0, 294.0], [755.0, 283.0], [754.0, 271.0], [751.0, 286.3333333333333], [740.0, 693.0], [738.0, 288.0], [743.0, 277.0], [742.0, 494.77777777777777], [750.0, 1266.3333333333333], [749.0, 1331.0], [745.0, 1387.0], [744.0, 288.0], [793.0, 298.0], [779.0, 296.0], [777.0, 871.6666666666666], [775.0, 2082.0], [774.0, 738.5], [771.0, 1205.0], [770.0, 1219.0], [825.0, 330.2], [824.0, 323.5], [807.0, 289.0], [821.0, 322.0], [818.0, 317.0], [816.0, 308.6], [815.0, 303.0], [813.0, 310.0], [812.0, 311.0], [808.0, 293.0], [859.0, 775.2], [861.0, 392.0], [857.0, 414.5], [856.0, 429.5], [855.0, 429.0], [854.0, 441.3333333333333], [850.0, 448.2857142857143], [846.0, 473.0], [833.0, 758.0], [832.0, 329.5], [837.0, 606.3333333333333], [835.0, 456.42857142857144], [839.0, 338.3333333333333], [838.0, 598.25], [844.0, 467.3333333333333], [842.0, 361.0], [840.0, 319.4], [894.0, 1220.5], [882.0, 1347.0], [877.0, 318.0], [869.0, 360.0], [914.0, 441.0], [925.0, 471.0], [918.0, 444.3333333333333], [917.0, 451.0], [915.0, 437.5], [913.0, 441.5], [904.0, 409.0], [896.0, 1215.3333333333335], [899.0, 473.33333333333337], [897.0, 873.0625000000001], [903.0, 460.85], [902.0, 509.4], [901.0, 1177.0], [900.0, 329.0], [937.0, 452.0], [975.0, 441.0], [973.0, 445.0], [967.0, 447.5], [961.0, 450.0], [960.0, 441.0], [1000.0, 324.8749999999999], [995.0, 355.0], [1.0, 279.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[557.7669999999995, 400.2680000000004]], "isOverall": false, "label": "CreateBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 15245.833333333334, "minX": 1.73702334E12, "maxY": 44214.01666666667, "series": [{"data": [[1.73702334E12, 44214.01666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73702334E12, 15245.833333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702334E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 377.40300000000025, "minX": 1.73702334E12, "maxY": 6788.167999999994, "series": [{"data": [[1.73702334E12, 6788.167999999994]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.73702334E12, 377.40300000000025]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.73702334E12, 400.2680000000004]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702334E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 377.3899999999998, "minX": 1.73702334E12, "maxY": 6781.058000000004, "series": [{"data": [[1.73702334E12, 6781.058000000004]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.73702334E12, 377.3899999999998]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.73702334E12, 400.2539999999998]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702334E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73702334E12, "maxY": 6426.103000000005, "series": [{"data": [[1.73702334E12, 6426.103000000005]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.73702334E12, 0.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.73702334E12, 0.9070000000000009]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702334E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 271.0, "minX": 1.73702334E12, "maxY": 22575.0, "series": [{"data": [[1.73702334E12, 22575.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73702334E12, 271.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73702334E12, 7882.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73702334E12, 13338.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73702334E12, 367.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73702334E12, 8554.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702334E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 12272.0, "series": [{"data": [[517.0, 300.0], [2.0, 280.0], [554.0, 448.0], [152.0, 332.0], [10.0, 283.5], [11.0, 296.0], [202.0, 305.5], [215.0, 338.5], [257.0, 2891.0], [1.0, 11427.5], [18.0, 12272.0], [319.0, 986.0], [363.0, 452.0], [378.0, 357.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[215.0, 6982.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 554.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 12272.0, "series": [{"data": [[517.0, 300.0], [2.0, 280.0], [554.0, 448.0], [152.0, 332.0], [10.0, 283.5], [11.0, 296.0], [202.0, 305.5], [215.0, 338.5], [257.0, 2891.0], [1.0, 11427.5], [18.0, 12272.0], [319.0, 986.0], [363.0, 452.0], [378.0, 357.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[215.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 554.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.73702334E12, "maxY": 50.0, "series": [{"data": [[1.73702334E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702334E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.73702334E12, "maxY": 49.983333333333334, "series": [{"data": [[1.73702334E12, 49.983333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73702334E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73702334E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.73702334E12, "maxY": 16.666666666666668, "series": [{"data": [[1.73702334E12, 16.65]], "isOverall": false, "label": "Auth-success", "isController": false}, {"data": [[1.73702334E12, 0.016666666666666666]], "isOverall": false, "label": "Auth-failure", "isController": false}, {"data": [[1.73702334E12, 16.666666666666668]], "isOverall": false, "label": "GetBooking-success", "isController": false}, {"data": [[1.73702334E12, 16.666666666666668]], "isOverall": false, "label": "CreateBooking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702334E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.73702334E12, "maxY": 49.983333333333334, "series": [{"data": [[1.73702334E12, 49.983333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73702334E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73702334E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

